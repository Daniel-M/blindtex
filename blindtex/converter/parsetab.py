
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUPSUBFRACROOTCHAR SUP SUB BEGINBLOCK ENDBLOCK BEGINSBLOCK ENDSBLOCK ORD FRAC ROOT LARGEOP BINOP KBINOP KBINREL BINREL NOTstart : content\n\t\t\t\t| start contentsblock : BEGINSBLOCK content ENDSBLOCKblock : BEGINBLOCK content ENDBLOCKcontent : chars\n\t\t\t\t| block\n\t\t\t\t| scripted\n\t\t\t\t| command\n\t\t\t\t| content contentchars : CHAR\n\t\t\t\t| ord\n\t\t\t\t| chars chars ord : ORD command : frac\n\t\t\t\t| root\n\t\t\t\t| binop\n\t\t\t\t| binrel\n\t\t\t\t| notscripted : content SUP content\n\t\t\t\t| content SUB content frac : FRAC content contentroot : ROOT content\n\t\t\t| ROOT sblock content binop : BINOP\n\t\t\t\t| KBINOP binrel : BINREL\n\t\t\t\t| KBINRELnot : NOT '
    
_lr_action_items = {'FRAC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[9,-10,-17,-14,9,9,9,9,-7,9,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,9,9,9,9,9,-22,9,9,9,-12,-4,-20,-19,9,-23,9,-3,]),'SUB':([1,2,3,5,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,31,32,33,34,35,36,37,38,],[-10,-17,-14,24,-7,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,24,24,24,-22,24,-12,-4,-20,-19,24,-23,24,]),'BINOP':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[16,-10,-17,-14,16,16,16,16,-7,16,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,16,16,16,16,16,-22,16,16,16,-12,-4,-20,-19,16,-23,16,-3,]),'ROOT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[7,-10,-17,-14,7,7,7,7,-7,7,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,7,7,7,7,7,-22,7,7,7,-12,-4,-20,-19,7,-23,7,-3,]),'KBINREL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[17,-10,-17,-14,17,17,17,17,-7,17,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,17,17,17,17,17,-22,17,17,17,-12,-4,-20,-19,17,-23,17,-3,]),'CHAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[1,-10,-17,-14,1,1,1,1,-7,1,-26,-16,1,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,1,1,1,1,1,-22,1,1,1,1,-4,-20,-19,1,-23,1,-3,]),'BEGINSBLOCK':([7,],[29,]),'ENDSBLOCK':([1,2,3,8,10,11,12,13,14,15,16,17,18,19,20,21,22,26,28,32,33,34,35,36,37,38,],[-10,-17,-14,-7,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,-9,-22,-12,-4,-20,-19,39,-23,-21,]),'BINREL':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[10,-10,-17,-14,10,10,10,10,-7,10,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,10,10,10,10,10,-22,10,10,10,-12,-4,-20,-19,10,-23,10,-3,]),'SUP':([1,2,3,5,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,31,32,33,34,35,36,37,38,],[-10,-17,-14,25,-7,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,25,25,25,-22,25,-12,-4,-20,-19,25,-23,25,]),'NOT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[20,-10,-17,-14,20,20,20,20,-7,20,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,20,20,20,20,20,-22,20,20,20,-12,-4,-20,-19,20,-23,20,-3,]),'KBINOP':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[14,-10,-17,-14,14,14,14,14,-7,14,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,14,14,14,14,14,-22,14,14,14,-12,-4,-20,-19,14,-23,14,-3,]),'ORD':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[21,-10,-17,-14,21,21,21,21,-7,21,-26,-16,21,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,21,21,21,21,21,-22,21,21,21,21,-4,-20,-19,21,-23,21,-3,]),'BEGINBLOCK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[4,-10,-17,-14,4,4,4,4,-7,4,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,4,4,4,4,4,-22,4,4,4,-12,-4,-20,-19,4,-23,4,-3,]),'ENDBLOCK':([1,2,3,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,28,32,33,34,35,37,38,],[-10,-17,-14,-7,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,33,-9,-22,-12,-4,-20,-19,-23,-21,]),'$end':([1,2,3,5,6,8,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,32,33,34,35,37,38,],[-10,-17,-14,-1,0,-7,-26,-16,-5,-18,-25,-11,-24,-27,-8,-6,-28,-13,-15,-9,-2,-22,-12,-4,-20,-19,-23,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'frac':([0,4,5,6,7,9,23,24,25,26,27,28,29,30,31,34,35,36,37,38,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'binop':([0,4,5,6,7,9,23,24,25,26,27,28,29,30,31,34,35,36,37,38,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'chars':([0,4,5,6,7,9,12,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,],[12,12,12,12,12,12,32,12,12,12,12,12,12,12,12,12,32,12,12,12,12,12,]),'sblock':([7,],[30,]),'content':([0,4,5,6,7,9,23,24,25,26,27,28,29,30,31,34,35,36,37,38,],[5,23,26,27,28,31,26,34,35,26,26,26,36,37,38,26,26,26,26,26,]),'start':([0,],[6,]),'command':([0,4,5,6,7,9,23,24,25,26,27,28,29,30,31,34,35,36,37,38,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'block':([0,4,5,6,7,9,23,24,25,26,27,28,29,30,31,34,35,36,37,38,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'binrel':([0,4,5,6,7,9,23,24,25,26,27,28,29,30,31,34,35,36,37,38,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'not':([0,4,5,6,7,9,23,24,25,26,27,28,29,30,31,34,35,36,37,38,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'ord':([0,4,5,6,7,9,12,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'root':([0,4,5,6,7,9,23,24,25,26,27,28,29,30,31,34,35,36,37,38,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'scripted':([0,4,5,6,7,9,23,24,25,26,27,28,29,30,31,34,35,36,37,38,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> content','start',1,'p_start','parser.py',60),
  ('start -> start content','start',2,'p_start','parser.py',61),
  ('sblock -> BEGINSBLOCK content ENDSBLOCK','sblock',3,'p_sblock','parser.py',68),
  ('block -> BEGINBLOCK content ENDBLOCK','block',3,'p_block','parser.py',72),
  ('content -> chars','content',1,'p_content','parser.py',76),
  ('content -> block','content',1,'p_content','parser.py',77),
  ('content -> scripted','content',1,'p_content','parser.py',78),
  ('content -> command','content',1,'p_content','parser.py',79),
  ('content -> content content','content',2,'p_content','parser.py',80),
  ('chars -> CHAR','chars',1,'p_chars','parser.py',87),
  ('chars -> ord','chars',1,'p_chars','parser.py',88),
  ('chars -> chars chars','chars',2,'p_chars','parser.py',89),
  ('ord -> ORD','ord',1,'p_ord','parser.py',96),
  ('command -> frac','command',1,'p_command','parser.py',101),
  ('command -> root','command',1,'p_command','parser.py',102),
  ('command -> binop','command',1,'p_command','parser.py',103),
  ('command -> binrel','command',1,'p_command','parser.py',104),
  ('command -> not','command',1,'p_command','parser.py',105),
  ('scripted -> content SUP content','scripted',3,'p_scripted','parser.py',114),
  ('scripted -> content SUB content','scripted',3,'p_scripted','parser.py',115),
  ('frac -> FRAC content content','frac',3,'p_frac','parser.py',122),
  ('root -> ROOT content','root',2,'p_root','parser.py',126),
  ('root -> ROOT sblock content','root',3,'p_root','parser.py',127),
  ('binop -> BINOP','binop',1,'p_binOp','parser.py',134),
  ('binop -> KBINOP','binop',1,'p_binOp','parser.py',135),
  ('binrel -> BINREL','binrel',1,'p_binRel','parser.py',139),
  ('binrel -> KBINREL','binrel',1,'p_binRel','parser.py',140),
  ('not -> NOT','not',1,'p_not','parser.py',144),
]
