Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    LARGEOP

Grammar

Rule 0     S' -> start
Rule 1     start -> content
Rule 2     start -> start content
Rule 3     sblock -> BEGINSBLOCK content ENDSBLOCK
Rule 4     block -> BEGINBLOCK content ENDBLOCK
Rule 5     content -> chars
Rule 6     content -> block
Rule 7     content -> scripted
Rule 8     content -> command
Rule 9     chars -> CHAR
Rule 10    chars -> ord
Rule 11    chars -> chars chars
Rule 12    ord -> ORD
Rule 13    command -> frac
Rule 14    command -> root
Rule 15    command -> binop
Rule 16    scripted -> content SUP content
Rule 17    scripted -> content SUB content
Rule 18    frac -> FRAC content content
Rule 19    root -> ROOT content
Rule 20    root -> ROOT sblock content
Rule 21    binop -> BINOP
Rule 22    binop -> KBINOP

Terminals, with rules where they appear

BEGINBLOCK           : 4
BEGINSBLOCK          : 3
BINOP                : 21
CHAR                 : 9
ENDBLOCK             : 4
ENDSBLOCK            : 3
FRAC                 : 18
KBINOP               : 22
LARGEOP              : 
ORD                  : 12
ROOT                 : 19 20
SUB                  : 17
SUP                  : 16
error                : 

Nonterminals, with rules where they appear

binop                : 15
block                : 6
chars                : 5 11 11
command              : 8
content              : 1 2 3 4 16 16 17 17 18 18 19 20
frac                 : 13
ord                  : 10
root                 : 14
sblock               : 20
scripted             : 7
start                : 2 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . content
    (2) start -> . start content
    (5) content -> . chars
    (6) content -> . block
    (7) content -> . scripted
    (8) content -> . command
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (4) block -> . BEGINBLOCK content ENDBLOCK
    (16) scripted -> . content SUP content
    (17) scripted -> . content SUB content
    (13) command -> . frac
    (14) command -> . root
    (15) command -> . binop
    (12) ord -> . ORD
    (18) frac -> . FRAC content content
    (19) root -> . ROOT content
    (20) root -> . ROOT sblock content
    (21) binop -> . BINOP
    (22) binop -> . KBINOP

    CHAR            shift and go to state 2
    BEGINBLOCK      shift and go to state 15
    ORD             shift and go to state 16
    FRAC            shift and go to state 1
    ROOT            shift and go to state 10
    BINOP           shift and go to state 7
    KBINOP          shift and go to state 3

    frac                           shift and go to state 4
    binop                          shift and go to state 5
    chars                          shift and go to state 6
    content                        shift and go to state 8
    start                          shift and go to state 9
    command                        shift and go to state 11
    block                          shift and go to state 12
    ord                            shift and go to state 14
    root                           shift and go to state 13
    scripted                       shift and go to state 17

state 1

    (18) frac -> FRAC . content content
    (5) content -> . chars
    (6) content -> . block
    (7) content -> . scripted
    (8) content -> . command
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (4) block -> . BEGINBLOCK content ENDBLOCK
    (16) scripted -> . content SUP content
    (17) scripted -> . content SUB content
    (13) command -> . frac
    (14) command -> . root
    (15) command -> . binop
    (12) ord -> . ORD
    (18) frac -> . FRAC content content
    (19) root -> . ROOT content
    (20) root -> . ROOT sblock content
    (21) binop -> . BINOP
    (22) binop -> . KBINOP

    CHAR            shift and go to state 2
    BEGINBLOCK      shift and go to state 15
    ORD             shift and go to state 16
    FRAC            shift and go to state 1
    ROOT            shift and go to state 10
    BINOP           shift and go to state 7
    KBINOP          shift and go to state 3

    frac                           shift and go to state 4
    binop                          shift and go to state 5
    chars                          shift and go to state 6
    content                        shift and go to state 18
    command                        shift and go to state 11
    block                          shift and go to state 12
    ord                            shift and go to state 14
    root                           shift and go to state 13
    scripted                       shift and go to state 17

state 2

    (9) chars -> CHAR .

    CHAR            reduce using rule 9 (chars -> CHAR .)
    ORD             reduce using rule 9 (chars -> CHAR .)
    SUP             reduce using rule 9 (chars -> CHAR .)
    SUB             reduce using rule 9 (chars -> CHAR .)
    BEGINBLOCK      reduce using rule 9 (chars -> CHAR .)
    FRAC            reduce using rule 9 (chars -> CHAR .)
    ROOT            reduce using rule 9 (chars -> CHAR .)
    BINOP           reduce using rule 9 (chars -> CHAR .)
    KBINOP          reduce using rule 9 (chars -> CHAR .)
    $end            reduce using rule 9 (chars -> CHAR .)
    ENDBLOCK        reduce using rule 9 (chars -> CHAR .)
    ENDSBLOCK       reduce using rule 9 (chars -> CHAR .)


state 3

    (22) binop -> KBINOP .

    SUP             reduce using rule 22 (binop -> KBINOP .)
    SUB             reduce using rule 22 (binop -> KBINOP .)
    CHAR            reduce using rule 22 (binop -> KBINOP .)
    BEGINBLOCK      reduce using rule 22 (binop -> KBINOP .)
    ORD             reduce using rule 22 (binop -> KBINOP .)
    FRAC            reduce using rule 22 (binop -> KBINOP .)
    ROOT            reduce using rule 22 (binop -> KBINOP .)
    BINOP           reduce using rule 22 (binop -> KBINOP .)
    KBINOP          reduce using rule 22 (binop -> KBINOP .)
    $end            reduce using rule 22 (binop -> KBINOP .)
    ENDSBLOCK       reduce using rule 22 (binop -> KBINOP .)
    ENDBLOCK        reduce using rule 22 (binop -> KBINOP .)


state 4

    (13) command -> frac .

    SUP             reduce using rule 13 (command -> frac .)
    SUB             reduce using rule 13 (command -> frac .)
    CHAR            reduce using rule 13 (command -> frac .)
    BEGINBLOCK      reduce using rule 13 (command -> frac .)
    ORD             reduce using rule 13 (command -> frac .)
    FRAC            reduce using rule 13 (command -> frac .)
    ROOT            reduce using rule 13 (command -> frac .)
    BINOP           reduce using rule 13 (command -> frac .)
    KBINOP          reduce using rule 13 (command -> frac .)
    $end            reduce using rule 13 (command -> frac .)
    ENDBLOCK        reduce using rule 13 (command -> frac .)
    ENDSBLOCK       reduce using rule 13 (command -> frac .)


state 5

    (15) command -> binop .

    SUP             reduce using rule 15 (command -> binop .)
    SUB             reduce using rule 15 (command -> binop .)
    CHAR            reduce using rule 15 (command -> binop .)
    BEGINBLOCK      reduce using rule 15 (command -> binop .)
    ORD             reduce using rule 15 (command -> binop .)
    FRAC            reduce using rule 15 (command -> binop .)
    ROOT            reduce using rule 15 (command -> binop .)
    BINOP           reduce using rule 15 (command -> binop .)
    KBINOP          reduce using rule 15 (command -> binop .)
    $end            reduce using rule 15 (command -> binop .)
    ENDBLOCK        reduce using rule 15 (command -> binop .)
    ENDSBLOCK       reduce using rule 15 (command -> binop .)


state 6

    (5) content -> chars .
    (11) chars -> chars . chars
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (12) ord -> . ORD

  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    ENDSBLOCK       reduce using rule 5 (content -> chars .)
    SUP             reduce using rule 5 (content -> chars .)
    SUB             reduce using rule 5 (content -> chars .)
    BEGINBLOCK      reduce using rule 5 (content -> chars .)
    FRAC            reduce using rule 5 (content -> chars .)
    ROOT            reduce using rule 5 (content -> chars .)
    BINOP           reduce using rule 5 (content -> chars .)
    KBINOP          reduce using rule 5 (content -> chars .)
    $end            reduce using rule 5 (content -> chars .)
    ENDBLOCK        reduce using rule 5 (content -> chars .)
    CHAR            shift and go to state 2
    ORD             shift and go to state 16

  ! CHAR            [ reduce using rule 5 (content -> chars .) ]
  ! ORD             [ reduce using rule 5 (content -> chars .) ]

    chars                          shift and go to state 19
    ord                            shift and go to state 14

state 7

    (21) binop -> BINOP .

    SUP             reduce using rule 21 (binop -> BINOP .)
    SUB             reduce using rule 21 (binop -> BINOP .)
    CHAR            reduce using rule 21 (binop -> BINOP .)
    BEGINBLOCK      reduce using rule 21 (binop -> BINOP .)
    ORD             reduce using rule 21 (binop -> BINOP .)
    FRAC            reduce using rule 21 (binop -> BINOP .)
    ROOT            reduce using rule 21 (binop -> BINOP .)
    BINOP           reduce using rule 21 (binop -> BINOP .)
    KBINOP          reduce using rule 21 (binop -> BINOP .)
    $end            reduce using rule 21 (binop -> BINOP .)
    ENDSBLOCK       reduce using rule 21 (binop -> BINOP .)
    ENDBLOCK        reduce using rule 21 (binop -> BINOP .)


state 8

    (1) start -> content .
    (16) scripted -> content . SUP content
    (17) scripted -> content . SUB content

    CHAR            reduce using rule 1 (start -> content .)
    BEGINBLOCK      reduce using rule 1 (start -> content .)
    ORD             reduce using rule 1 (start -> content .)
    FRAC            reduce using rule 1 (start -> content .)
    ROOT            reduce using rule 1 (start -> content .)
    BINOP           reduce using rule 1 (start -> content .)
    KBINOP          reduce using rule 1 (start -> content .)
    $end            reduce using rule 1 (start -> content .)
    SUP             shift and go to state 21
    SUB             shift and go to state 20


state 9

    (0) S' -> start .
    (2) start -> start . content
    (5) content -> . chars
    (6) content -> . block
    (7) content -> . scripted
    (8) content -> . command
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (4) block -> . BEGINBLOCK content ENDBLOCK
    (16) scripted -> . content SUP content
    (17) scripted -> . content SUB content
    (13) command -> . frac
    (14) command -> . root
    (15) command -> . binop
    (12) ord -> . ORD
    (18) frac -> . FRAC content content
    (19) root -> . ROOT content
    (20) root -> . ROOT sblock content
    (21) binop -> . BINOP
    (22) binop -> . KBINOP

    CHAR            shift and go to state 2
    BEGINBLOCK      shift and go to state 15
    ORD             shift and go to state 16
    FRAC            shift and go to state 1
    ROOT            shift and go to state 10
    BINOP           shift and go to state 7
    KBINOP          shift and go to state 3

    frac                           shift and go to state 4
    binop                          shift and go to state 5
    chars                          shift and go to state 6
    content                        shift and go to state 22
    command                        shift and go to state 11
    block                          shift and go to state 12
    ord                            shift and go to state 14
    root                           shift and go to state 13
    scripted                       shift and go to state 17

state 10

    (19) root -> ROOT . content
    (20) root -> ROOT . sblock content
    (5) content -> . chars
    (6) content -> . block
    (7) content -> . scripted
    (8) content -> . command
    (3) sblock -> . BEGINSBLOCK content ENDSBLOCK
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (4) block -> . BEGINBLOCK content ENDBLOCK
    (16) scripted -> . content SUP content
    (17) scripted -> . content SUB content
    (13) command -> . frac
    (14) command -> . root
    (15) command -> . binop
    (12) ord -> . ORD
    (18) frac -> . FRAC content content
    (19) root -> . ROOT content
    (20) root -> . ROOT sblock content
    (21) binop -> . BINOP
    (22) binop -> . KBINOP

    BEGINSBLOCK     shift and go to state 24
    CHAR            shift and go to state 2
    BEGINBLOCK      shift and go to state 15
    ORD             shift and go to state 16
    FRAC            shift and go to state 1
    ROOT            shift and go to state 10
    BINOP           shift and go to state 7
    KBINOP          shift and go to state 3

    frac                           shift and go to state 4
    binop                          shift and go to state 5
    chars                          shift and go to state 6
    sblock                         shift and go to state 25
    content                        shift and go to state 23
    command                        shift and go to state 11
    block                          shift and go to state 12
    ord                            shift and go to state 14
    root                           shift and go to state 13
    scripted                       shift and go to state 17

state 11

    (8) content -> command .

    ENDSBLOCK       reduce using rule 8 (content -> command .)
    SUP             reduce using rule 8 (content -> command .)
    SUB             reduce using rule 8 (content -> command .)
    CHAR            reduce using rule 8 (content -> command .)
    BEGINBLOCK      reduce using rule 8 (content -> command .)
    ORD             reduce using rule 8 (content -> command .)
    FRAC            reduce using rule 8 (content -> command .)
    ROOT            reduce using rule 8 (content -> command .)
    BINOP           reduce using rule 8 (content -> command .)
    KBINOP          reduce using rule 8 (content -> command .)
    $end            reduce using rule 8 (content -> command .)
    ENDBLOCK        reduce using rule 8 (content -> command .)


state 12

    (6) content -> block .

    ENDSBLOCK       reduce using rule 6 (content -> block .)
    SUP             reduce using rule 6 (content -> block .)
    SUB             reduce using rule 6 (content -> block .)
    CHAR            reduce using rule 6 (content -> block .)
    BEGINBLOCK      reduce using rule 6 (content -> block .)
    ORD             reduce using rule 6 (content -> block .)
    FRAC            reduce using rule 6 (content -> block .)
    ROOT            reduce using rule 6 (content -> block .)
    BINOP           reduce using rule 6 (content -> block .)
    KBINOP          reduce using rule 6 (content -> block .)
    $end            reduce using rule 6 (content -> block .)
    ENDBLOCK        reduce using rule 6 (content -> block .)


state 13

    (14) command -> root .

    SUP             reduce using rule 14 (command -> root .)
    SUB             reduce using rule 14 (command -> root .)
    CHAR            reduce using rule 14 (command -> root .)
    BEGINBLOCK      reduce using rule 14 (command -> root .)
    ORD             reduce using rule 14 (command -> root .)
    FRAC            reduce using rule 14 (command -> root .)
    ROOT            reduce using rule 14 (command -> root .)
    BINOP           reduce using rule 14 (command -> root .)
    KBINOP          reduce using rule 14 (command -> root .)
    $end            reduce using rule 14 (command -> root .)
    ENDBLOCK        reduce using rule 14 (command -> root .)
    ENDSBLOCK       reduce using rule 14 (command -> root .)


state 14

    (10) chars -> ord .

    CHAR            reduce using rule 10 (chars -> ord .)
    ORD             reduce using rule 10 (chars -> ord .)
    SUP             reduce using rule 10 (chars -> ord .)
    SUB             reduce using rule 10 (chars -> ord .)
    BEGINBLOCK      reduce using rule 10 (chars -> ord .)
    FRAC            reduce using rule 10 (chars -> ord .)
    ROOT            reduce using rule 10 (chars -> ord .)
    BINOP           reduce using rule 10 (chars -> ord .)
    KBINOP          reduce using rule 10 (chars -> ord .)
    $end            reduce using rule 10 (chars -> ord .)
    ENDBLOCK        reduce using rule 10 (chars -> ord .)
    ENDSBLOCK       reduce using rule 10 (chars -> ord .)


state 15

    (4) block -> BEGINBLOCK . content ENDBLOCK
    (5) content -> . chars
    (6) content -> . block
    (7) content -> . scripted
    (8) content -> . command
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (4) block -> . BEGINBLOCK content ENDBLOCK
    (16) scripted -> . content SUP content
    (17) scripted -> . content SUB content
    (13) command -> . frac
    (14) command -> . root
    (15) command -> . binop
    (12) ord -> . ORD
    (18) frac -> . FRAC content content
    (19) root -> . ROOT content
    (20) root -> . ROOT sblock content
    (21) binop -> . BINOP
    (22) binop -> . KBINOP

    CHAR            shift and go to state 2
    BEGINBLOCK      shift and go to state 15
    ORD             shift and go to state 16
    FRAC            shift and go to state 1
    ROOT            shift and go to state 10
    BINOP           shift and go to state 7
    KBINOP          shift and go to state 3

    frac                           shift and go to state 4
    binop                          shift and go to state 5
    chars                          shift and go to state 6
    content                        shift and go to state 26
    command                        shift and go to state 11
    block                          shift and go to state 12
    ord                            shift and go to state 14
    root                           shift and go to state 13
    scripted                       shift and go to state 17

state 16

    (12) ord -> ORD .

    CHAR            reduce using rule 12 (ord -> ORD .)
    ORD             reduce using rule 12 (ord -> ORD .)
    SUP             reduce using rule 12 (ord -> ORD .)
    SUB             reduce using rule 12 (ord -> ORD .)
    BEGINBLOCK      reduce using rule 12 (ord -> ORD .)
    FRAC            reduce using rule 12 (ord -> ORD .)
    ROOT            reduce using rule 12 (ord -> ORD .)
    BINOP           reduce using rule 12 (ord -> ORD .)
    KBINOP          reduce using rule 12 (ord -> ORD .)
    $end            reduce using rule 12 (ord -> ORD .)
    ENDBLOCK        reduce using rule 12 (ord -> ORD .)
    ENDSBLOCK       reduce using rule 12 (ord -> ORD .)


state 17

    (7) content -> scripted .

    ENDSBLOCK       reduce using rule 7 (content -> scripted .)
    SUP             reduce using rule 7 (content -> scripted .)
    SUB             reduce using rule 7 (content -> scripted .)
    CHAR            reduce using rule 7 (content -> scripted .)
    BEGINBLOCK      reduce using rule 7 (content -> scripted .)
    ORD             reduce using rule 7 (content -> scripted .)
    FRAC            reduce using rule 7 (content -> scripted .)
    ROOT            reduce using rule 7 (content -> scripted .)
    BINOP           reduce using rule 7 (content -> scripted .)
    KBINOP          reduce using rule 7 (content -> scripted .)
    $end            reduce using rule 7 (content -> scripted .)
    ENDBLOCK        reduce using rule 7 (content -> scripted .)


state 18

    (18) frac -> FRAC content . content
    (16) scripted -> content . SUP content
    (17) scripted -> content . SUB content
    (5) content -> . chars
    (6) content -> . block
    (7) content -> . scripted
    (8) content -> . command
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (4) block -> . BEGINBLOCK content ENDBLOCK
    (16) scripted -> . content SUP content
    (17) scripted -> . content SUB content
    (13) command -> . frac
    (14) command -> . root
    (15) command -> . binop
    (12) ord -> . ORD
    (18) frac -> . FRAC content content
    (19) root -> . ROOT content
    (20) root -> . ROOT sblock content
    (21) binop -> . BINOP
    (22) binop -> . KBINOP

    SUP             shift and go to state 21
    SUB             shift and go to state 20
    CHAR            shift and go to state 2
    BEGINBLOCK      shift and go to state 15
    ORD             shift and go to state 16
    FRAC            shift and go to state 1
    ROOT            shift and go to state 10
    BINOP           shift and go to state 7
    KBINOP          shift and go to state 3

    frac                           shift and go to state 4
    binop                          shift and go to state 5
    chars                          shift and go to state 6
    content                        shift and go to state 27
    command                        shift and go to state 11
    block                          shift and go to state 12
    ord                            shift and go to state 14
    root                           shift and go to state 13
    scripted                       shift and go to state 17

state 19

    (11) chars -> chars chars .
    (11) chars -> chars . chars
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (12) ord -> . ORD

  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    SUP             reduce using rule 11 (chars -> chars chars .)
    SUB             reduce using rule 11 (chars -> chars chars .)
    BEGINBLOCK      reduce using rule 11 (chars -> chars chars .)
    FRAC            reduce using rule 11 (chars -> chars chars .)
    ROOT            reduce using rule 11 (chars -> chars chars .)
    BINOP           reduce using rule 11 (chars -> chars chars .)
    KBINOP          reduce using rule 11 (chars -> chars chars .)
    $end            reduce using rule 11 (chars -> chars chars .)
    ENDBLOCK        reduce using rule 11 (chars -> chars chars .)
    ENDSBLOCK       reduce using rule 11 (chars -> chars chars .)
    CHAR            shift and go to state 2
    ORD             shift and go to state 16

  ! CHAR            [ reduce using rule 11 (chars -> chars chars .) ]
  ! ORD             [ reduce using rule 11 (chars -> chars chars .) ]

    chars                          shift and go to state 19
    ord                            shift and go to state 14

state 20

    (17) scripted -> content SUB . content
    (5) content -> . chars
    (6) content -> . block
    (7) content -> . scripted
    (8) content -> . command
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (4) block -> . BEGINBLOCK content ENDBLOCK
    (16) scripted -> . content SUP content
    (17) scripted -> . content SUB content
    (13) command -> . frac
    (14) command -> . root
    (15) command -> . binop
    (12) ord -> . ORD
    (18) frac -> . FRAC content content
    (19) root -> . ROOT content
    (20) root -> . ROOT sblock content
    (21) binop -> . BINOP
    (22) binop -> . KBINOP

    CHAR            shift and go to state 2
    BEGINBLOCK      shift and go to state 15
    ORD             shift and go to state 16
    FRAC            shift and go to state 1
    ROOT            shift and go to state 10
    BINOP           shift and go to state 7
    KBINOP          shift and go to state 3

    frac                           shift and go to state 4
    binop                          shift and go to state 5
    chars                          shift and go to state 6
    content                        shift and go to state 28
    command                        shift and go to state 11
    block                          shift and go to state 12
    ord                            shift and go to state 14
    root                           shift and go to state 13
    scripted                       shift and go to state 17

state 21

    (16) scripted -> content SUP . content
    (5) content -> . chars
    (6) content -> . block
    (7) content -> . scripted
    (8) content -> . command
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (4) block -> . BEGINBLOCK content ENDBLOCK
    (16) scripted -> . content SUP content
    (17) scripted -> . content SUB content
    (13) command -> . frac
    (14) command -> . root
    (15) command -> . binop
    (12) ord -> . ORD
    (18) frac -> . FRAC content content
    (19) root -> . ROOT content
    (20) root -> . ROOT sblock content
    (21) binop -> . BINOP
    (22) binop -> . KBINOP

    CHAR            shift and go to state 2
    BEGINBLOCK      shift and go to state 15
    ORD             shift and go to state 16
    FRAC            shift and go to state 1
    ROOT            shift and go to state 10
    BINOP           shift and go to state 7
    KBINOP          shift and go to state 3

    frac                           shift and go to state 4
    binop                          shift and go to state 5
    chars                          shift and go to state 6
    content                        shift and go to state 29
    command                        shift and go to state 11
    block                          shift and go to state 12
    ord                            shift and go to state 14
    root                           shift and go to state 13
    scripted                       shift and go to state 17

state 22

    (2) start -> start content .
    (16) scripted -> content . SUP content
    (17) scripted -> content . SUB content

    CHAR            reduce using rule 2 (start -> start content .)
    BEGINBLOCK      reduce using rule 2 (start -> start content .)
    ORD             reduce using rule 2 (start -> start content .)
    FRAC            reduce using rule 2 (start -> start content .)
    ROOT            reduce using rule 2 (start -> start content .)
    BINOP           reduce using rule 2 (start -> start content .)
    KBINOP          reduce using rule 2 (start -> start content .)
    $end            reduce using rule 2 (start -> start content .)
    SUP             shift and go to state 21
    SUB             shift and go to state 20


state 23

    (19) root -> ROOT content .
    (16) scripted -> content . SUP content
    (17) scripted -> content . SUB content

    SUP             reduce using rule 19 (root -> ROOT content .)
    SUB             reduce using rule 19 (root -> ROOT content .)
    CHAR            reduce using rule 19 (root -> ROOT content .)
    BEGINBLOCK      reduce using rule 19 (root -> ROOT content .)
    ORD             reduce using rule 19 (root -> ROOT content .)
    FRAC            reduce using rule 19 (root -> ROOT content .)
    ROOT            reduce using rule 19 (root -> ROOT content .)
    BINOP           reduce using rule 19 (root -> ROOT content .)
    KBINOP          reduce using rule 19 (root -> ROOT content .)
    $end            reduce using rule 19 (root -> ROOT content .)
    ENDBLOCK        reduce using rule 19 (root -> ROOT content .)
    ENDSBLOCK       reduce using rule 19 (root -> ROOT content .)

  ! SUP             [ shift and go to state 21 ]
  ! SUB             [ shift and go to state 20 ]


state 24

    (3) sblock -> BEGINSBLOCK . content ENDSBLOCK
    (5) content -> . chars
    (6) content -> . block
    (7) content -> . scripted
    (8) content -> . command
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (4) block -> . BEGINBLOCK content ENDBLOCK
    (16) scripted -> . content SUP content
    (17) scripted -> . content SUB content
    (13) command -> . frac
    (14) command -> . root
    (15) command -> . binop
    (12) ord -> . ORD
    (18) frac -> . FRAC content content
    (19) root -> . ROOT content
    (20) root -> . ROOT sblock content
    (21) binop -> . BINOP
    (22) binop -> . KBINOP

    CHAR            shift and go to state 2
    BEGINBLOCK      shift and go to state 15
    ORD             shift and go to state 16
    FRAC            shift and go to state 1
    ROOT            shift and go to state 10
    BINOP           shift and go to state 7
    KBINOP          shift and go to state 3

    frac                           shift and go to state 4
    binop                          shift and go to state 5
    chars                          shift and go to state 6
    content                        shift and go to state 30
    command                        shift and go to state 11
    block                          shift and go to state 12
    ord                            shift and go to state 14
    root                           shift and go to state 13
    scripted                       shift and go to state 17

state 25

    (20) root -> ROOT sblock . content
    (5) content -> . chars
    (6) content -> . block
    (7) content -> . scripted
    (8) content -> . command
    (9) chars -> . CHAR
    (10) chars -> . ord
    (11) chars -> . chars chars
    (4) block -> . BEGINBLOCK content ENDBLOCK
    (16) scripted -> . content SUP content
    (17) scripted -> . content SUB content
    (13) command -> . frac
    (14) command -> . root
    (15) command -> . binop
    (12) ord -> . ORD
    (18) frac -> . FRAC content content
    (19) root -> . ROOT content
    (20) root -> . ROOT sblock content
    (21) binop -> . BINOP
    (22) binop -> . KBINOP

    CHAR            shift and go to state 2
    BEGINBLOCK      shift and go to state 15
    ORD             shift and go to state 16
    FRAC            shift and go to state 1
    ROOT            shift and go to state 10
    BINOP           shift and go to state 7
    KBINOP          shift and go to state 3

    frac                           shift and go to state 4
    binop                          shift and go to state 5
    chars                          shift and go to state 6
    content                        shift and go to state 31
    command                        shift and go to state 11
    block                          shift and go to state 12
    ord                            shift and go to state 14
    root                           shift and go to state 13
    scripted                       shift and go to state 17

state 26

    (4) block -> BEGINBLOCK content . ENDBLOCK
    (16) scripted -> content . SUP content
    (17) scripted -> content . SUB content

    ENDBLOCK        shift and go to state 32
    SUP             shift and go to state 21
    SUB             shift and go to state 20


state 27

    (18) frac -> FRAC content content .
    (16) scripted -> content . SUP content
    (17) scripted -> content . SUB content

    SUP             reduce using rule 18 (frac -> FRAC content content .)
    SUB             reduce using rule 18 (frac -> FRAC content content .)
    CHAR            reduce using rule 18 (frac -> FRAC content content .)
    BEGINBLOCK      reduce using rule 18 (frac -> FRAC content content .)
    ORD             reduce using rule 18 (frac -> FRAC content content .)
    FRAC            reduce using rule 18 (frac -> FRAC content content .)
    ROOT            reduce using rule 18 (frac -> FRAC content content .)
    BINOP           reduce using rule 18 (frac -> FRAC content content .)
    KBINOP          reduce using rule 18 (frac -> FRAC content content .)
    $end            reduce using rule 18 (frac -> FRAC content content .)
    ENDBLOCK        reduce using rule 18 (frac -> FRAC content content .)
    ENDSBLOCK       reduce using rule 18 (frac -> FRAC content content .)

  ! SUP             [ shift and go to state 21 ]
  ! SUB             [ shift and go to state 20 ]


state 28

    (17) scripted -> content SUB content .
    (16) scripted -> content . SUP content
    (17) scripted -> content . SUB content

    SUP             reduce using rule 17 (scripted -> content SUB content .)
    SUB             reduce using rule 17 (scripted -> content SUB content .)
    CHAR            reduce using rule 17 (scripted -> content SUB content .)
    BEGINBLOCK      reduce using rule 17 (scripted -> content SUB content .)
    ORD             reduce using rule 17 (scripted -> content SUB content .)
    FRAC            reduce using rule 17 (scripted -> content SUB content .)
    ROOT            reduce using rule 17 (scripted -> content SUB content .)
    BINOP           reduce using rule 17 (scripted -> content SUB content .)
    KBINOP          reduce using rule 17 (scripted -> content SUB content .)
    $end            reduce using rule 17 (scripted -> content SUB content .)
    ENDBLOCK        reduce using rule 17 (scripted -> content SUB content .)
    ENDSBLOCK       reduce using rule 17 (scripted -> content SUB content .)

  ! SUP             [ shift and go to state 21 ]
  ! SUB             [ shift and go to state 20 ]


state 29

    (16) scripted -> content SUP content .
    (16) scripted -> content . SUP content
    (17) scripted -> content . SUB content

    SUP             reduce using rule 16 (scripted -> content SUP content .)
    SUB             reduce using rule 16 (scripted -> content SUP content .)
    CHAR            reduce using rule 16 (scripted -> content SUP content .)
    BEGINBLOCK      reduce using rule 16 (scripted -> content SUP content .)
    ORD             reduce using rule 16 (scripted -> content SUP content .)
    FRAC            reduce using rule 16 (scripted -> content SUP content .)
    ROOT            reduce using rule 16 (scripted -> content SUP content .)
    BINOP           reduce using rule 16 (scripted -> content SUP content .)
    KBINOP          reduce using rule 16 (scripted -> content SUP content .)
    $end            reduce using rule 16 (scripted -> content SUP content .)
    ENDBLOCK        reduce using rule 16 (scripted -> content SUP content .)
    ENDSBLOCK       reduce using rule 16 (scripted -> content SUP content .)

  ! SUP             [ shift and go to state 21 ]
  ! SUB             [ shift and go to state 20 ]


state 30

    (3) sblock -> BEGINSBLOCK content . ENDSBLOCK
    (16) scripted -> content . SUP content
    (17) scripted -> content . SUB content

    ENDSBLOCK       shift and go to state 33
    SUP             shift and go to state 21
    SUB             shift and go to state 20


state 31

    (20) root -> ROOT sblock content .
    (16) scripted -> content . SUP content
    (17) scripted -> content . SUB content

    SUP             reduce using rule 20 (root -> ROOT sblock content .)
    SUB             reduce using rule 20 (root -> ROOT sblock content .)
    CHAR            reduce using rule 20 (root -> ROOT sblock content .)
    BEGINBLOCK      reduce using rule 20 (root -> ROOT sblock content .)
    ORD             reduce using rule 20 (root -> ROOT sblock content .)
    FRAC            reduce using rule 20 (root -> ROOT sblock content .)
    ROOT            reduce using rule 20 (root -> ROOT sblock content .)
    BINOP           reduce using rule 20 (root -> ROOT sblock content .)
    KBINOP          reduce using rule 20 (root -> ROOT sblock content .)
    $end            reduce using rule 20 (root -> ROOT sblock content .)
    ENDBLOCK        reduce using rule 20 (root -> ROOT sblock content .)
    ENDSBLOCK       reduce using rule 20 (root -> ROOT sblock content .)

  ! SUP             [ shift and go to state 21 ]
  ! SUB             [ shift and go to state 20 ]


state 32

    (4) block -> BEGINBLOCK content ENDBLOCK .

    SUP             reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)
    SUB             reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)
    CHAR            reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)
    BEGINBLOCK      reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)
    ORD             reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)
    FRAC            reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)
    ROOT            reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)
    BINOP           reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)
    KBINOP          reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)
    ENDSBLOCK       reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)
    $end            reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)
    ENDBLOCK        reduce using rule 4 (block -> BEGINBLOCK content ENDBLOCK .)


state 33

    (3) sblock -> BEGINSBLOCK content ENDSBLOCK .

    CHAR            reduce using rule 3 (sblock -> BEGINSBLOCK content ENDSBLOCK .)
    BEGINBLOCK      reduce using rule 3 (sblock -> BEGINSBLOCK content ENDSBLOCK .)
    ORD             reduce using rule 3 (sblock -> BEGINSBLOCK content ENDSBLOCK .)
    FRAC            reduce using rule 3 (sblock -> BEGINSBLOCK content ENDSBLOCK .)
    ROOT            reduce using rule 3 (sblock -> BEGINSBLOCK content ENDSBLOCK .)
    BINOP           reduce using rule 3 (sblock -> BEGINSBLOCK content ENDSBLOCK .)
    KBINOP          reduce using rule 3 (sblock -> BEGINSBLOCK content ENDSBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CHAR in state 6 resolved as shift
WARNING: shift/reduce conflict for ORD in state 6 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 19 resolved as shift
WARNING: shift/reduce conflict for ORD in state 19 resolved as shift
