Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> content
Rule 2     start -> start content
Rule 3     block -> BEGINBLOCK content ENDBLOCK
Rule 4     content -> chars
Rule 5     content -> block
Rule 6     content -> scripted
Rule 7     content -> command
Rule 8     content -> content content
Rule 9     chars -> char
Rule 10    chars -> char chars
Rule 11    char -> CHAR
Rule 12    char -> ord
Rule 13    ord -> ORD
Rule 14    command -> frac
Rule 15    command -> root
Rule 16    command -> binop
Rule 17    command -> binrel
Rule 18    command -> not
Rule 19    command -> function
Rule 20    command -> larop
Rule 21    command -> arrow
Rule 22    command -> delimiter
Rule 23    scripted -> char SUP char
Rule 24    scripted -> char SUP block
Rule 25    scripted -> block SUP char
Rule 26    scripted -> block SUP block
Rule 27    scripted -> char SUB char
Rule 28    scripted -> char SUB block
Rule 29    scripted -> block SUB char
Rule 30    scripted -> block SUB block
Rule 31    scripted -> char SUP char SUB char
Rule 32    scripted -> char SUP char SUB block
Rule 33    scripted -> char SUP block SUB char
Rule 34    scripted -> char SUP block SUB block
Rule 35    scripted -> block SUP char SUB char
Rule 36    scripted -> block SUP char SUB block
Rule 37    scripted -> block SUP block SUB char
Rule 38    scripted -> block SUP block SUB block
Rule 39    scripted -> char SUB char SUP char
Rule 40    scripted -> char SUB char SUP block
Rule 41    scripted -> char SUB block SUP char
Rule 42    scripted -> char SUB block SUP block
Rule 43    scripted -> block SUB char SUP char
Rule 44    scripted -> block SUB char SUP block
Rule 45    scripted -> block SUB block SUP char
Rule 46    scripted -> block SUB block SUP block
Rule 47    frac -> FRAC char char
Rule 48    frac -> FRAC char block
Rule 49    frac -> FRAC block char
Rule 50    frac -> FRAC block block
Rule 51    root -> ROOT char
Rule 52    root -> ROOT block
Rule 53    root -> ROOT KDELIMITER content KDELIMITER char
Rule 54    root -> ROOT KDELIMITER content KDELIMITER block
Rule 55    binop -> BINOP
Rule 56    binop -> KBINOP
Rule 57    binrel -> BINREL
Rule 58    binrel -> KBINREL
Rule 59    not -> NOT
Rule 60    function -> FUNC
Rule 61    larop -> LARGEOP SUB char SUP char
Rule 62    larop -> LARGEOP SUB char SUP block
Rule 63    larop -> LARGEOP SUB block SUP char
Rule 64    larop -> LARGEOP SUB block SUP block
Rule 65    larop -> LARGEOP SUP char SUB char
Rule 66    larop -> LARGEOP SUP char SUB block
Rule 67    larop -> LARGEOP SUP block SUB char
Rule 68    larop -> LARGEOP SUP block SUB block
Rule 69    larop -> LARGEOP
Rule 70    larop -> LARGEOP SUB char
Rule 71    larop -> LARGEOP SUB block
Rule 72    arrow -> ARROW
Rule 73    delimiter -> DELIMITER
Rule 74    delimiter -> KDELIMITER

Terminals, with rules where they appear

ARROW                : 72
BEGINBLOCK           : 3
BINOP                : 55
BINREL               : 57
CHAR                 : 11
DELIMITER            : 73
ENDBLOCK             : 3
FRAC                 : 47 48 49 50
FUNC                 : 60
KBINOP               : 56
KBINREL              : 58
KDELIMITER           : 53 53 54 54 74
LARGEOP              : 61 62 63 64 65 66 67 68 69 70 71
NOT                  : 59
ORD                  : 13
ROOT                 : 51 52 53 54
SUB                  : 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 61 62 63 64 65 66 67 68 70 71
SUP                  : 23 24 25 26 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 61 62 63 64 65 66 67 68
error                : 

Nonterminals, with rules where they appear

arrow                : 21
binop                : 16
binrel               : 17
block                : 5 24 25 26 26 28 29 30 30 32 33 34 34 35 36 36 37 37 38 38 38 40 41 42 42 43 44 44 45 45 46 46 46 48 49 50 50 52 54 62 63 64 64 66 67 68 68 71
char                 : 9 10 23 23 24 25 27 27 28 29 31 31 31 32 32 33 33 34 35 35 36 37 39 39 39 40 40 41 41 42 43 43 44 45 47 47 48 49 51 53 61 61 62 63 65 65 66 67 70
chars                : 4 10
command              : 7
content              : 1 2 3 8 8 53 54
delimiter            : 22
frac                 : 14
function             : 19
larop                : 20
not                  : 18
ord                  : 12
root                 : 15
scripted             : 6
start                : 2 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . content
    (2) start -> . start content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (23) scripted -> . char SUP char
    (24) scripted -> . char SUP block
    (25) scripted -> . block SUP char
    (26) scripted -> . block SUP block
    (27) scripted -> . char SUB char
    (28) scripted -> . char SUB block
    (29) scripted -> . block SUB char
    (30) scripted -> . block SUB block
    (31) scripted -> . char SUP char SUB char
    (32) scripted -> . char SUP char SUB block
    (33) scripted -> . char SUP block SUB char
    (34) scripted -> . char SUP block SUB block
    (35) scripted -> . block SUP char SUB char
    (36) scripted -> . block SUP char SUB block
    (37) scripted -> . block SUP block SUB char
    (38) scripted -> . block SUP block SUB block
    (39) scripted -> . char SUB char SUP char
    (40) scripted -> . char SUB char SUP block
    (41) scripted -> . char SUB block SUP char
    (42) scripted -> . char SUB block SUP block
    (43) scripted -> . block SUB char SUP char
    (44) scripted -> . block SUB char SUP block
    (45) scripted -> . block SUB block SUP char
    (46) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (11) char -> . CHAR
    (12) char -> . ord
    (47) frac -> . FRAC char char
    (48) frac -> . FRAC char block
    (49) frac -> . FRAC block char
    (50) frac -> . FRAC block block
    (51) root -> . ROOT char
    (52) root -> . ROOT block
    (53) root -> . ROOT KDELIMITER content KDELIMITER char
    (54) root -> . ROOT KDELIMITER content KDELIMITER block
    (55) binop -> . BINOP
    (56) binop -> . KBINOP
    (57) binrel -> . BINREL
    (58) binrel -> . KBINREL
    (59) not -> . NOT
    (60) function -> . FUNC
    (61) larop -> . LARGEOP SUB char SUP char
    (62) larop -> . LARGEOP SUB char SUP block
    (63) larop -> . LARGEOP SUB block SUP char
    (64) larop -> . LARGEOP SUB block SUP block
    (65) larop -> . LARGEOP SUP char SUB char
    (66) larop -> . LARGEOP SUP char SUB block
    (67) larop -> . LARGEOP SUP block SUB char
    (68) larop -> . LARGEOP SUP block SUB block
    (69) larop -> . LARGEOP
    (70) larop -> . LARGEOP SUB char
    (71) larop -> . LARGEOP SUB block
    (72) arrow -> . ARROW
    (73) delimiter -> . DELIMITER
    (74) delimiter -> . KDELIMITER
    (13) ord -> . ORD

    BEGINBLOCK      shift and go to state 5
    CHAR            shift and go to state 23
    FRAC            shift and go to state 4
    ROOT            shift and go to state 10
    BINOP           shift and go to state 24
    KBINOP          shift and go to state 20
    BINREL          shift and go to state 14
    KBINREL         shift and go to state 25
    NOT             shift and go to state 30
    FUNC            shift and go to state 18
    LARGEOP         shift and go to state 7
    ARROW           shift and go to state 1
    DELIMITER       shift and go to state 17
    KDELIMITER      shift and go to state 6
    ORD             shift and go to state 31

    function                       shift and go to state 12
    char                           shift and go to state 2
    frac                           shift and go to state 13
    arrow                          shift and go to state 29
    binop                          shift and go to state 15
    chars                          shift and go to state 16
    content                        shift and go to state 8
    start                          shift and go to state 9
    delimiter                      shift and go to state 26
    command                        shift and go to state 27
    block                          shift and go to state 28
    binrel                         shift and go to state 3
    not                            shift and go to state 19
    ord                            shift and go to state 21
    root                           shift and go to state 32
    larop                          shift and go to state 22
    scripted                       shift and go to state 11

state 1

    (72) arrow -> ARROW .

    BEGINBLOCK      reduce using rule 72 (arrow -> ARROW .)
    CHAR            reduce using rule 72 (arrow -> ARROW .)
    FRAC            reduce using rule 72 (arrow -> ARROW .)
    ROOT            reduce using rule 72 (arrow -> ARROW .)
    BINOP           reduce using rule 72 (arrow -> ARROW .)
    KBINOP          reduce using rule 72 (arrow -> ARROW .)
    BINREL          reduce using rule 72 (arrow -> ARROW .)
    KBINREL         reduce using rule 72 (arrow -> ARROW .)
    NOT             reduce using rule 72 (arrow -> ARROW .)
    FUNC            reduce using rule 72 (arrow -> ARROW .)
    LARGEOP         reduce using rule 72 (arrow -> ARROW .)
    ARROW           reduce using rule 72 (arrow -> ARROW .)
    DELIMITER       reduce using rule 72 (arrow -> ARROW .)
    KDELIMITER      reduce using rule 72 (arrow -> ARROW .)
    ORD             reduce using rule 72 (arrow -> ARROW .)
    $end            reduce using rule 72 (arrow -> ARROW .)
    ENDBLOCK        reduce using rule 72 (arrow -> ARROW .)


state 2

    (9) chars -> char .
    (10) chars -> char . chars
    (23) scripted -> char . SUP char
    (24) scripted -> char . SUP block
    (27) scripted -> char . SUB char
    (28) scripted -> char . SUB block
    (31) scripted -> char . SUP char SUB char
    (32) scripted -> char . SUP char SUB block
    (33) scripted -> char . SUP block SUB char
    (34) scripted -> char . SUP block SUB block
    (39) scripted -> char . SUB char SUP char
    (40) scripted -> char . SUB char SUP block
    (41) scripted -> char . SUB block SUP char
    (42) scripted -> char . SUB block SUP block
    (9) chars -> . char
    (10) chars -> . char chars
    (11) char -> . CHAR
    (12) char -> . ord
    (13) ord -> . ORD

  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    BEGINBLOCK      reduce using rule 9 (chars -> char .)
    FRAC            reduce using rule 9 (chars -> char .)
    ROOT            reduce using rule 9 (chars -> char .)
    BINOP           reduce using rule 9 (chars -> char .)
    KBINOP          reduce using rule 9 (chars -> char .)
    BINREL          reduce using rule 9 (chars -> char .)
    KBINREL         reduce using rule 9 (chars -> char .)
    NOT             reduce using rule 9 (chars -> char .)
    FUNC            reduce using rule 9 (chars -> char .)
    LARGEOP         reduce using rule 9 (chars -> char .)
    ARROW           reduce using rule 9 (chars -> char .)
    DELIMITER       reduce using rule 9 (chars -> char .)
    KDELIMITER      reduce using rule 9 (chars -> char .)
    ENDBLOCK        reduce using rule 9 (chars -> char .)
    $end            reduce using rule 9 (chars -> char .)
    SUP             shift and go to state 36
    SUB             shift and go to state 33
    CHAR            shift and go to state 23
    ORD             shift and go to state 31

  ! CHAR            [ reduce using rule 9 (chars -> char .) ]
  ! ORD             [ reduce using rule 9 (chars -> char .) ]

    char                           shift and go to state 35
    chars                          shift and go to state 34
    ord                            shift and go to state 21

state 3

    (17) command -> binrel .

    BEGINBLOCK      reduce using rule 17 (command -> binrel .)
    CHAR            reduce using rule 17 (command -> binrel .)
    FRAC            reduce using rule 17 (command -> binrel .)
    ROOT            reduce using rule 17 (command -> binrel .)
    BINOP           reduce using rule 17 (command -> binrel .)
    KBINOP          reduce using rule 17 (command -> binrel .)
    BINREL          reduce using rule 17 (command -> binrel .)
    KBINREL         reduce using rule 17 (command -> binrel .)
    NOT             reduce using rule 17 (command -> binrel .)
    FUNC            reduce using rule 17 (command -> binrel .)
    LARGEOP         reduce using rule 17 (command -> binrel .)
    ARROW           reduce using rule 17 (command -> binrel .)
    DELIMITER       reduce using rule 17 (command -> binrel .)
    KDELIMITER      reduce using rule 17 (command -> binrel .)
    ORD             reduce using rule 17 (command -> binrel .)
    $end            reduce using rule 17 (command -> binrel .)
    ENDBLOCK        reduce using rule 17 (command -> binrel .)


state 4

    (47) frac -> FRAC . char char
    (48) frac -> FRAC . char block
    (49) frac -> FRAC . block char
    (50) frac -> FRAC . block block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 37
    ord                            shift and go to state 21
    block                          shift and go to state 38

state 5

    (3) block -> BEGINBLOCK . content ENDBLOCK
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (23) scripted -> . char SUP char
    (24) scripted -> . char SUP block
    (25) scripted -> . block SUP char
    (26) scripted -> . block SUP block
    (27) scripted -> . char SUB char
    (28) scripted -> . char SUB block
    (29) scripted -> . block SUB char
    (30) scripted -> . block SUB block
    (31) scripted -> . char SUP char SUB char
    (32) scripted -> . char SUP char SUB block
    (33) scripted -> . char SUP block SUB char
    (34) scripted -> . char SUP block SUB block
    (35) scripted -> . block SUP char SUB char
    (36) scripted -> . block SUP char SUB block
    (37) scripted -> . block SUP block SUB char
    (38) scripted -> . block SUP block SUB block
    (39) scripted -> . char SUB char SUP char
    (40) scripted -> . char SUB char SUP block
    (41) scripted -> . char SUB block SUP char
    (42) scripted -> . char SUB block SUP block
    (43) scripted -> . block SUB char SUP char
    (44) scripted -> . block SUB char SUP block
    (45) scripted -> . block SUB block SUP char
    (46) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (11) char -> . CHAR
    (12) char -> . ord
    (47) frac -> . FRAC char char
    (48) frac -> . FRAC char block
    (49) frac -> . FRAC block char
    (50) frac -> . FRAC block block
    (51) root -> . ROOT char
    (52) root -> . ROOT block
    (53) root -> . ROOT KDELIMITER content KDELIMITER char
    (54) root -> . ROOT KDELIMITER content KDELIMITER block
    (55) binop -> . BINOP
    (56) binop -> . KBINOP
    (57) binrel -> . BINREL
    (58) binrel -> . KBINREL
    (59) not -> . NOT
    (60) function -> . FUNC
    (61) larop -> . LARGEOP SUB char SUP char
    (62) larop -> . LARGEOP SUB char SUP block
    (63) larop -> . LARGEOP SUB block SUP char
    (64) larop -> . LARGEOP SUB block SUP block
    (65) larop -> . LARGEOP SUP char SUB char
    (66) larop -> . LARGEOP SUP char SUB block
    (67) larop -> . LARGEOP SUP block SUB char
    (68) larop -> . LARGEOP SUP block SUB block
    (69) larop -> . LARGEOP
    (70) larop -> . LARGEOP SUB char
    (71) larop -> . LARGEOP SUB block
    (72) arrow -> . ARROW
    (73) delimiter -> . DELIMITER
    (74) delimiter -> . KDELIMITER
    (13) ord -> . ORD

    BEGINBLOCK      shift and go to state 5
    CHAR            shift and go to state 23
    FRAC            shift and go to state 4
    ROOT            shift and go to state 10
    BINOP           shift and go to state 24
    KBINOP          shift and go to state 20
    BINREL          shift and go to state 14
    KBINREL         shift and go to state 25
    NOT             shift and go to state 30
    FUNC            shift and go to state 18
    LARGEOP         shift and go to state 7
    ARROW           shift and go to state 1
    DELIMITER       shift and go to state 17
    KDELIMITER      shift and go to state 6
    ORD             shift and go to state 31

    function                       shift and go to state 12
    char                           shift and go to state 2
    frac                           shift and go to state 13
    arrow                          shift and go to state 29
    binop                          shift and go to state 15
    chars                          shift and go to state 16
    content                        shift and go to state 39
    delimiter                      shift and go to state 26
    command                        shift and go to state 27
    block                          shift and go to state 28
    binrel                         shift and go to state 3
    not                            shift and go to state 19
    ord                            shift and go to state 21
    root                           shift and go to state 32
    larop                          shift and go to state 22
    scripted                       shift and go to state 11

state 6

    (74) delimiter -> KDELIMITER .

    BEGINBLOCK      reduce using rule 74 (delimiter -> KDELIMITER .)
    CHAR            reduce using rule 74 (delimiter -> KDELIMITER .)
    FRAC            reduce using rule 74 (delimiter -> KDELIMITER .)
    ROOT            reduce using rule 74 (delimiter -> KDELIMITER .)
    BINOP           reduce using rule 74 (delimiter -> KDELIMITER .)
    KBINOP          reduce using rule 74 (delimiter -> KDELIMITER .)
    BINREL          reduce using rule 74 (delimiter -> KDELIMITER .)
    KBINREL         reduce using rule 74 (delimiter -> KDELIMITER .)
    NOT             reduce using rule 74 (delimiter -> KDELIMITER .)
    FUNC            reduce using rule 74 (delimiter -> KDELIMITER .)
    LARGEOP         reduce using rule 74 (delimiter -> KDELIMITER .)
    ARROW           reduce using rule 74 (delimiter -> KDELIMITER .)
    DELIMITER       reduce using rule 74 (delimiter -> KDELIMITER .)
    KDELIMITER      reduce using rule 74 (delimiter -> KDELIMITER .)
    ORD             reduce using rule 74 (delimiter -> KDELIMITER .)
    $end            reduce using rule 74 (delimiter -> KDELIMITER .)
    ENDBLOCK        reduce using rule 74 (delimiter -> KDELIMITER .)


state 7

    (61) larop -> LARGEOP . SUB char SUP char
    (62) larop -> LARGEOP . SUB char SUP block
    (63) larop -> LARGEOP . SUB block SUP char
    (64) larop -> LARGEOP . SUB block SUP block
    (65) larop -> LARGEOP . SUP char SUB char
    (66) larop -> LARGEOP . SUP char SUB block
    (67) larop -> LARGEOP . SUP block SUB char
    (68) larop -> LARGEOP . SUP block SUB block
    (69) larop -> LARGEOP .
    (70) larop -> LARGEOP . SUB char
    (71) larop -> LARGEOP . SUB block

    SUB             shift and go to state 41
    SUP             shift and go to state 40
    BEGINBLOCK      reduce using rule 69 (larop -> LARGEOP .)
    CHAR            reduce using rule 69 (larop -> LARGEOP .)
    FRAC            reduce using rule 69 (larop -> LARGEOP .)
    ROOT            reduce using rule 69 (larop -> LARGEOP .)
    BINOP           reduce using rule 69 (larop -> LARGEOP .)
    KBINOP          reduce using rule 69 (larop -> LARGEOP .)
    BINREL          reduce using rule 69 (larop -> LARGEOP .)
    KBINREL         reduce using rule 69 (larop -> LARGEOP .)
    NOT             reduce using rule 69 (larop -> LARGEOP .)
    FUNC            reduce using rule 69 (larop -> LARGEOP .)
    LARGEOP         reduce using rule 69 (larop -> LARGEOP .)
    ARROW           reduce using rule 69 (larop -> LARGEOP .)
    DELIMITER       reduce using rule 69 (larop -> LARGEOP .)
    KDELIMITER      reduce using rule 69 (larop -> LARGEOP .)
    ORD             reduce using rule 69 (larop -> LARGEOP .)
    $end            reduce using rule 69 (larop -> LARGEOP .)
    ENDBLOCK        reduce using rule 69 (larop -> LARGEOP .)


state 8

    (1) start -> content .
    (8) content -> content . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (23) scripted -> . char SUP char
    (24) scripted -> . char SUP block
    (25) scripted -> . block SUP char
    (26) scripted -> . block SUP block
    (27) scripted -> . char SUB char
    (28) scripted -> . char SUB block
    (29) scripted -> . block SUB char
    (30) scripted -> . block SUB block
    (31) scripted -> . char SUP char SUB char
    (32) scripted -> . char SUP char SUB block
    (33) scripted -> . char SUP block SUB char
    (34) scripted -> . char SUP block SUB block
    (35) scripted -> . block SUP char SUB char
    (36) scripted -> . block SUP char SUB block
    (37) scripted -> . block SUP block SUB char
    (38) scripted -> . block SUP block SUB block
    (39) scripted -> . char SUB char SUP char
    (40) scripted -> . char SUB char SUP block
    (41) scripted -> . char SUB block SUP char
    (42) scripted -> . char SUB block SUP block
    (43) scripted -> . block SUB char SUP char
    (44) scripted -> . block SUB char SUP block
    (45) scripted -> . block SUB block SUP char
    (46) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (11) char -> . CHAR
    (12) char -> . ord
    (47) frac -> . FRAC char char
    (48) frac -> . FRAC char block
    (49) frac -> . FRAC block char
    (50) frac -> . FRAC block block
    (51) root -> . ROOT char
    (52) root -> . ROOT block
    (53) root -> . ROOT KDELIMITER content KDELIMITER char
    (54) root -> . ROOT KDELIMITER content KDELIMITER block
    (55) binop -> . BINOP
    (56) binop -> . KBINOP
    (57) binrel -> . BINREL
    (58) binrel -> . KBINREL
    (59) not -> . NOT
    (60) function -> . FUNC
    (61) larop -> . LARGEOP SUB char SUP char
    (62) larop -> . LARGEOP SUB char SUP block
    (63) larop -> . LARGEOP SUB block SUP char
    (64) larop -> . LARGEOP SUB block SUP block
    (65) larop -> . LARGEOP SUP char SUB char
    (66) larop -> . LARGEOP SUP char SUB block
    (67) larop -> . LARGEOP SUP block SUB char
    (68) larop -> . LARGEOP SUP block SUB block
    (69) larop -> . LARGEOP
    (70) larop -> . LARGEOP SUB char
    (71) larop -> . LARGEOP SUB block
    (72) arrow -> . ARROW
    (73) delimiter -> . DELIMITER
    (74) delimiter -> . KDELIMITER
    (13) ord -> . ORD

  ! shift/reduce conflict for BEGINBLOCK resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FRAC resolved as shift
  ! shift/reduce conflict for ROOT resolved as shift
  ! shift/reduce conflict for BINOP resolved as shift
  ! shift/reduce conflict for KBINOP resolved as shift
  ! shift/reduce conflict for BINREL resolved as shift
  ! shift/reduce conflict for KBINREL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for LARGEOP resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for DELIMITER resolved as shift
  ! shift/reduce conflict for KDELIMITER resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    $end            reduce using rule 1 (start -> content .)
    BEGINBLOCK      shift and go to state 5
    CHAR            shift and go to state 23
    FRAC            shift and go to state 4
    ROOT            shift and go to state 10
    BINOP           shift and go to state 24
    KBINOP          shift and go to state 20
    BINREL          shift and go to state 14
    KBINREL         shift and go to state 25
    NOT             shift and go to state 30
    FUNC            shift and go to state 18
    LARGEOP         shift and go to state 7
    ARROW           shift and go to state 1
    DELIMITER       shift and go to state 17
    KDELIMITER      shift and go to state 6
    ORD             shift and go to state 31

  ! BEGINBLOCK      [ reduce using rule 1 (start -> content .) ]
  ! CHAR            [ reduce using rule 1 (start -> content .) ]
  ! FRAC            [ reduce using rule 1 (start -> content .) ]
  ! ROOT            [ reduce using rule 1 (start -> content .) ]
  ! BINOP           [ reduce using rule 1 (start -> content .) ]
  ! KBINOP          [ reduce using rule 1 (start -> content .) ]
  ! BINREL          [ reduce using rule 1 (start -> content .) ]
  ! KBINREL         [ reduce using rule 1 (start -> content .) ]
  ! NOT             [ reduce using rule 1 (start -> content .) ]
  ! FUNC            [ reduce using rule 1 (start -> content .) ]
  ! LARGEOP         [ reduce using rule 1 (start -> content .) ]
  ! ARROW           [ reduce using rule 1 (start -> content .) ]
  ! DELIMITER       [ reduce using rule 1 (start -> content .) ]
  ! KDELIMITER      [ reduce using rule 1 (start -> content .) ]
  ! ORD             [ reduce using rule 1 (start -> content .) ]

    function                       shift and go to state 12
    char                           shift and go to state 2
    frac                           shift and go to state 13
    arrow                          shift and go to state 29
    binop                          shift and go to state 15
    chars                          shift and go to state 16
    content                        shift and go to state 42
    delimiter                      shift and go to state 26
    command                        shift and go to state 27
    block                          shift and go to state 28
    binrel                         shift and go to state 3
    not                            shift and go to state 19
    ord                            shift and go to state 21
    root                           shift and go to state 32
    larop                          shift and go to state 22
    scripted                       shift and go to state 11

state 9

    (0) S' -> start .
    (2) start -> start . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (23) scripted -> . char SUP char
    (24) scripted -> . char SUP block
    (25) scripted -> . block SUP char
    (26) scripted -> . block SUP block
    (27) scripted -> . char SUB char
    (28) scripted -> . char SUB block
    (29) scripted -> . block SUB char
    (30) scripted -> . block SUB block
    (31) scripted -> . char SUP char SUB char
    (32) scripted -> . char SUP char SUB block
    (33) scripted -> . char SUP block SUB char
    (34) scripted -> . char SUP block SUB block
    (35) scripted -> . block SUP char SUB char
    (36) scripted -> . block SUP char SUB block
    (37) scripted -> . block SUP block SUB char
    (38) scripted -> . block SUP block SUB block
    (39) scripted -> . char SUB char SUP char
    (40) scripted -> . char SUB char SUP block
    (41) scripted -> . char SUB block SUP char
    (42) scripted -> . char SUB block SUP block
    (43) scripted -> . block SUB char SUP char
    (44) scripted -> . block SUB char SUP block
    (45) scripted -> . block SUB block SUP char
    (46) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (11) char -> . CHAR
    (12) char -> . ord
    (47) frac -> . FRAC char char
    (48) frac -> . FRAC char block
    (49) frac -> . FRAC block char
    (50) frac -> . FRAC block block
    (51) root -> . ROOT char
    (52) root -> . ROOT block
    (53) root -> . ROOT KDELIMITER content KDELIMITER char
    (54) root -> . ROOT KDELIMITER content KDELIMITER block
    (55) binop -> . BINOP
    (56) binop -> . KBINOP
    (57) binrel -> . BINREL
    (58) binrel -> . KBINREL
    (59) not -> . NOT
    (60) function -> . FUNC
    (61) larop -> . LARGEOP SUB char SUP char
    (62) larop -> . LARGEOP SUB char SUP block
    (63) larop -> . LARGEOP SUB block SUP char
    (64) larop -> . LARGEOP SUB block SUP block
    (65) larop -> . LARGEOP SUP char SUB char
    (66) larop -> . LARGEOP SUP char SUB block
    (67) larop -> . LARGEOP SUP block SUB char
    (68) larop -> . LARGEOP SUP block SUB block
    (69) larop -> . LARGEOP
    (70) larop -> . LARGEOP SUB char
    (71) larop -> . LARGEOP SUB block
    (72) arrow -> . ARROW
    (73) delimiter -> . DELIMITER
    (74) delimiter -> . KDELIMITER
    (13) ord -> . ORD

    BEGINBLOCK      shift and go to state 5
    CHAR            shift and go to state 23
    FRAC            shift and go to state 4
    ROOT            shift and go to state 10
    BINOP           shift and go to state 24
    KBINOP          shift and go to state 20
    BINREL          shift and go to state 14
    KBINREL         shift and go to state 25
    NOT             shift and go to state 30
    FUNC            shift and go to state 18
    LARGEOP         shift and go to state 7
    ARROW           shift and go to state 1
    DELIMITER       shift and go to state 17
    KDELIMITER      shift and go to state 6
    ORD             shift and go to state 31

    function                       shift and go to state 12
    char                           shift and go to state 2
    frac                           shift and go to state 13
    arrow                          shift and go to state 29
    binop                          shift and go to state 15
    chars                          shift and go to state 16
    content                        shift and go to state 43
    delimiter                      shift and go to state 26
    command                        shift and go to state 27
    block                          shift and go to state 28
    binrel                         shift and go to state 3
    not                            shift and go to state 19
    ord                            shift and go to state 21
    root                           shift and go to state 32
    larop                          shift and go to state 22
    scripted                       shift and go to state 11

state 10

    (51) root -> ROOT . char
    (52) root -> ROOT . block
    (53) root -> ROOT . KDELIMITER content KDELIMITER char
    (54) root -> ROOT . KDELIMITER content KDELIMITER block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    KDELIMITER      shift and go to state 44
    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 45
    ord                            shift and go to state 21
    block                          shift and go to state 46

state 11

    (6) content -> scripted .

    BEGINBLOCK      reduce using rule 6 (content -> scripted .)
    CHAR            reduce using rule 6 (content -> scripted .)
    FRAC            reduce using rule 6 (content -> scripted .)
    ROOT            reduce using rule 6 (content -> scripted .)
    BINOP           reduce using rule 6 (content -> scripted .)
    KBINOP          reduce using rule 6 (content -> scripted .)
    BINREL          reduce using rule 6 (content -> scripted .)
    KBINREL         reduce using rule 6 (content -> scripted .)
    NOT             reduce using rule 6 (content -> scripted .)
    FUNC            reduce using rule 6 (content -> scripted .)
    LARGEOP         reduce using rule 6 (content -> scripted .)
    ARROW           reduce using rule 6 (content -> scripted .)
    DELIMITER       reduce using rule 6 (content -> scripted .)
    KDELIMITER      reduce using rule 6 (content -> scripted .)
    ORD             reduce using rule 6 (content -> scripted .)
    $end            reduce using rule 6 (content -> scripted .)
    ENDBLOCK        reduce using rule 6 (content -> scripted .)


state 12

    (19) command -> function .

    BEGINBLOCK      reduce using rule 19 (command -> function .)
    CHAR            reduce using rule 19 (command -> function .)
    FRAC            reduce using rule 19 (command -> function .)
    ROOT            reduce using rule 19 (command -> function .)
    BINOP           reduce using rule 19 (command -> function .)
    KBINOP          reduce using rule 19 (command -> function .)
    BINREL          reduce using rule 19 (command -> function .)
    KBINREL         reduce using rule 19 (command -> function .)
    NOT             reduce using rule 19 (command -> function .)
    FUNC            reduce using rule 19 (command -> function .)
    LARGEOP         reduce using rule 19 (command -> function .)
    ARROW           reduce using rule 19 (command -> function .)
    DELIMITER       reduce using rule 19 (command -> function .)
    KDELIMITER      reduce using rule 19 (command -> function .)
    ORD             reduce using rule 19 (command -> function .)
    $end            reduce using rule 19 (command -> function .)
    ENDBLOCK        reduce using rule 19 (command -> function .)


state 13

    (14) command -> frac .

    BEGINBLOCK      reduce using rule 14 (command -> frac .)
    CHAR            reduce using rule 14 (command -> frac .)
    FRAC            reduce using rule 14 (command -> frac .)
    ROOT            reduce using rule 14 (command -> frac .)
    BINOP           reduce using rule 14 (command -> frac .)
    KBINOP          reduce using rule 14 (command -> frac .)
    BINREL          reduce using rule 14 (command -> frac .)
    KBINREL         reduce using rule 14 (command -> frac .)
    NOT             reduce using rule 14 (command -> frac .)
    FUNC            reduce using rule 14 (command -> frac .)
    LARGEOP         reduce using rule 14 (command -> frac .)
    ARROW           reduce using rule 14 (command -> frac .)
    DELIMITER       reduce using rule 14 (command -> frac .)
    KDELIMITER      reduce using rule 14 (command -> frac .)
    ORD             reduce using rule 14 (command -> frac .)
    $end            reduce using rule 14 (command -> frac .)
    ENDBLOCK        reduce using rule 14 (command -> frac .)


state 14

    (57) binrel -> BINREL .

    KDELIMITER      reduce using rule 57 (binrel -> BINREL .)
    BEGINBLOCK      reduce using rule 57 (binrel -> BINREL .)
    CHAR            reduce using rule 57 (binrel -> BINREL .)
    FRAC            reduce using rule 57 (binrel -> BINREL .)
    ROOT            reduce using rule 57 (binrel -> BINREL .)
    BINOP           reduce using rule 57 (binrel -> BINREL .)
    KBINOP          reduce using rule 57 (binrel -> BINREL .)
    BINREL          reduce using rule 57 (binrel -> BINREL .)
    KBINREL         reduce using rule 57 (binrel -> BINREL .)
    NOT             reduce using rule 57 (binrel -> BINREL .)
    FUNC            reduce using rule 57 (binrel -> BINREL .)
    LARGEOP         reduce using rule 57 (binrel -> BINREL .)
    ARROW           reduce using rule 57 (binrel -> BINREL .)
    DELIMITER       reduce using rule 57 (binrel -> BINREL .)
    ORD             reduce using rule 57 (binrel -> BINREL .)
    $end            reduce using rule 57 (binrel -> BINREL .)
    ENDBLOCK        reduce using rule 57 (binrel -> BINREL .)


state 15

    (16) command -> binop .

    BEGINBLOCK      reduce using rule 16 (command -> binop .)
    CHAR            reduce using rule 16 (command -> binop .)
    FRAC            reduce using rule 16 (command -> binop .)
    ROOT            reduce using rule 16 (command -> binop .)
    BINOP           reduce using rule 16 (command -> binop .)
    KBINOP          reduce using rule 16 (command -> binop .)
    BINREL          reduce using rule 16 (command -> binop .)
    KBINREL         reduce using rule 16 (command -> binop .)
    NOT             reduce using rule 16 (command -> binop .)
    FUNC            reduce using rule 16 (command -> binop .)
    LARGEOP         reduce using rule 16 (command -> binop .)
    ARROW           reduce using rule 16 (command -> binop .)
    DELIMITER       reduce using rule 16 (command -> binop .)
    KDELIMITER      reduce using rule 16 (command -> binop .)
    ORD             reduce using rule 16 (command -> binop .)
    $end            reduce using rule 16 (command -> binop .)
    ENDBLOCK        reduce using rule 16 (command -> binop .)


state 16

    (4) content -> chars .

    BEGINBLOCK      reduce using rule 4 (content -> chars .)
    CHAR            reduce using rule 4 (content -> chars .)
    FRAC            reduce using rule 4 (content -> chars .)
    ROOT            reduce using rule 4 (content -> chars .)
    BINOP           reduce using rule 4 (content -> chars .)
    KBINOP          reduce using rule 4 (content -> chars .)
    BINREL          reduce using rule 4 (content -> chars .)
    KBINREL         reduce using rule 4 (content -> chars .)
    NOT             reduce using rule 4 (content -> chars .)
    FUNC            reduce using rule 4 (content -> chars .)
    LARGEOP         reduce using rule 4 (content -> chars .)
    ARROW           reduce using rule 4 (content -> chars .)
    DELIMITER       reduce using rule 4 (content -> chars .)
    KDELIMITER      reduce using rule 4 (content -> chars .)
    ORD             reduce using rule 4 (content -> chars .)
    $end            reduce using rule 4 (content -> chars .)
    ENDBLOCK        reduce using rule 4 (content -> chars .)


state 17

    (73) delimiter -> DELIMITER .

    BEGINBLOCK      reduce using rule 73 (delimiter -> DELIMITER .)
    CHAR            reduce using rule 73 (delimiter -> DELIMITER .)
    FRAC            reduce using rule 73 (delimiter -> DELIMITER .)
    ROOT            reduce using rule 73 (delimiter -> DELIMITER .)
    BINOP           reduce using rule 73 (delimiter -> DELIMITER .)
    KBINOP          reduce using rule 73 (delimiter -> DELIMITER .)
    BINREL          reduce using rule 73 (delimiter -> DELIMITER .)
    KBINREL         reduce using rule 73 (delimiter -> DELIMITER .)
    NOT             reduce using rule 73 (delimiter -> DELIMITER .)
    FUNC            reduce using rule 73 (delimiter -> DELIMITER .)
    LARGEOP         reduce using rule 73 (delimiter -> DELIMITER .)
    ARROW           reduce using rule 73 (delimiter -> DELIMITER .)
    DELIMITER       reduce using rule 73 (delimiter -> DELIMITER .)
    KDELIMITER      reduce using rule 73 (delimiter -> DELIMITER .)
    ORD             reduce using rule 73 (delimiter -> DELIMITER .)
    $end            reduce using rule 73 (delimiter -> DELIMITER .)
    ENDBLOCK        reduce using rule 73 (delimiter -> DELIMITER .)


state 18

    (60) function -> FUNC .

    BEGINBLOCK      reduce using rule 60 (function -> FUNC .)
    CHAR            reduce using rule 60 (function -> FUNC .)
    FRAC            reduce using rule 60 (function -> FUNC .)
    ROOT            reduce using rule 60 (function -> FUNC .)
    BINOP           reduce using rule 60 (function -> FUNC .)
    KBINOP          reduce using rule 60 (function -> FUNC .)
    BINREL          reduce using rule 60 (function -> FUNC .)
    KBINREL         reduce using rule 60 (function -> FUNC .)
    NOT             reduce using rule 60 (function -> FUNC .)
    FUNC            reduce using rule 60 (function -> FUNC .)
    LARGEOP         reduce using rule 60 (function -> FUNC .)
    ARROW           reduce using rule 60 (function -> FUNC .)
    DELIMITER       reduce using rule 60 (function -> FUNC .)
    KDELIMITER      reduce using rule 60 (function -> FUNC .)
    ORD             reduce using rule 60 (function -> FUNC .)
    $end            reduce using rule 60 (function -> FUNC .)
    ENDBLOCK        reduce using rule 60 (function -> FUNC .)


state 19

    (18) command -> not .

    BEGINBLOCK      reduce using rule 18 (command -> not .)
    CHAR            reduce using rule 18 (command -> not .)
    FRAC            reduce using rule 18 (command -> not .)
    ROOT            reduce using rule 18 (command -> not .)
    BINOP           reduce using rule 18 (command -> not .)
    KBINOP          reduce using rule 18 (command -> not .)
    BINREL          reduce using rule 18 (command -> not .)
    KBINREL         reduce using rule 18 (command -> not .)
    NOT             reduce using rule 18 (command -> not .)
    FUNC            reduce using rule 18 (command -> not .)
    LARGEOP         reduce using rule 18 (command -> not .)
    ARROW           reduce using rule 18 (command -> not .)
    DELIMITER       reduce using rule 18 (command -> not .)
    KDELIMITER      reduce using rule 18 (command -> not .)
    ORD             reduce using rule 18 (command -> not .)
    $end            reduce using rule 18 (command -> not .)
    ENDBLOCK        reduce using rule 18 (command -> not .)


state 20

    (56) binop -> KBINOP .

    BEGINBLOCK      reduce using rule 56 (binop -> KBINOP .)
    CHAR            reduce using rule 56 (binop -> KBINOP .)
    FRAC            reduce using rule 56 (binop -> KBINOP .)
    ROOT            reduce using rule 56 (binop -> KBINOP .)
    BINOP           reduce using rule 56 (binop -> KBINOP .)
    KBINOP          reduce using rule 56 (binop -> KBINOP .)
    BINREL          reduce using rule 56 (binop -> KBINOP .)
    KBINREL         reduce using rule 56 (binop -> KBINOP .)
    NOT             reduce using rule 56 (binop -> KBINOP .)
    FUNC            reduce using rule 56 (binop -> KBINOP .)
    LARGEOP         reduce using rule 56 (binop -> KBINOP .)
    ARROW           reduce using rule 56 (binop -> KBINOP .)
    DELIMITER       reduce using rule 56 (binop -> KBINOP .)
    KDELIMITER      reduce using rule 56 (binop -> KBINOP .)
    ORD             reduce using rule 56 (binop -> KBINOP .)
    ENDBLOCK        reduce using rule 56 (binop -> KBINOP .)
    $end            reduce using rule 56 (binop -> KBINOP .)


state 21

    (12) char -> ord .

    BEGINBLOCK      reduce using rule 12 (char -> ord .)
    CHAR            reduce using rule 12 (char -> ord .)
    FRAC            reduce using rule 12 (char -> ord .)
    ROOT            reduce using rule 12 (char -> ord .)
    BINOP           reduce using rule 12 (char -> ord .)
    KBINOP          reduce using rule 12 (char -> ord .)
    BINREL          reduce using rule 12 (char -> ord .)
    KBINREL         reduce using rule 12 (char -> ord .)
    NOT             reduce using rule 12 (char -> ord .)
    FUNC            reduce using rule 12 (char -> ord .)
    LARGEOP         reduce using rule 12 (char -> ord .)
    ARROW           reduce using rule 12 (char -> ord .)
    DELIMITER       reduce using rule 12 (char -> ord .)
    KDELIMITER      reduce using rule 12 (char -> ord .)
    ORD             reduce using rule 12 (char -> ord .)
    $end            reduce using rule 12 (char -> ord .)
    ENDBLOCK        reduce using rule 12 (char -> ord .)
    SUP             reduce using rule 12 (char -> ord .)
    SUB             reduce using rule 12 (char -> ord .)


state 22

    (20) command -> larop .

    BEGINBLOCK      reduce using rule 20 (command -> larop .)
    CHAR            reduce using rule 20 (command -> larop .)
    FRAC            reduce using rule 20 (command -> larop .)
    ROOT            reduce using rule 20 (command -> larop .)
    BINOP           reduce using rule 20 (command -> larop .)
    KBINOP          reduce using rule 20 (command -> larop .)
    BINREL          reduce using rule 20 (command -> larop .)
    KBINREL         reduce using rule 20 (command -> larop .)
    NOT             reduce using rule 20 (command -> larop .)
    FUNC            reduce using rule 20 (command -> larop .)
    LARGEOP         reduce using rule 20 (command -> larop .)
    ARROW           reduce using rule 20 (command -> larop .)
    DELIMITER       reduce using rule 20 (command -> larop .)
    KDELIMITER      reduce using rule 20 (command -> larop .)
    ORD             reduce using rule 20 (command -> larop .)
    $end            reduce using rule 20 (command -> larop .)
    ENDBLOCK        reduce using rule 20 (command -> larop .)


state 23

    (11) char -> CHAR .

    BEGINBLOCK      reduce using rule 11 (char -> CHAR .)
    CHAR            reduce using rule 11 (char -> CHAR .)
    FRAC            reduce using rule 11 (char -> CHAR .)
    ROOT            reduce using rule 11 (char -> CHAR .)
    BINOP           reduce using rule 11 (char -> CHAR .)
    KBINOP          reduce using rule 11 (char -> CHAR .)
    BINREL          reduce using rule 11 (char -> CHAR .)
    KBINREL         reduce using rule 11 (char -> CHAR .)
    NOT             reduce using rule 11 (char -> CHAR .)
    FUNC            reduce using rule 11 (char -> CHAR .)
    LARGEOP         reduce using rule 11 (char -> CHAR .)
    ARROW           reduce using rule 11 (char -> CHAR .)
    DELIMITER       reduce using rule 11 (char -> CHAR .)
    KDELIMITER      reduce using rule 11 (char -> CHAR .)
    ORD             reduce using rule 11 (char -> CHAR .)
    $end            reduce using rule 11 (char -> CHAR .)
    ENDBLOCK        reduce using rule 11 (char -> CHAR .)
    SUP             reduce using rule 11 (char -> CHAR .)
    SUB             reduce using rule 11 (char -> CHAR .)


state 24

    (55) binop -> BINOP .

    BEGINBLOCK      reduce using rule 55 (binop -> BINOP .)
    CHAR            reduce using rule 55 (binop -> BINOP .)
    FRAC            reduce using rule 55 (binop -> BINOP .)
    ROOT            reduce using rule 55 (binop -> BINOP .)
    BINOP           reduce using rule 55 (binop -> BINOP .)
    KBINOP          reduce using rule 55 (binop -> BINOP .)
    BINREL          reduce using rule 55 (binop -> BINOP .)
    KBINREL         reduce using rule 55 (binop -> BINOP .)
    NOT             reduce using rule 55 (binop -> BINOP .)
    FUNC            reduce using rule 55 (binop -> BINOP .)
    LARGEOP         reduce using rule 55 (binop -> BINOP .)
    ARROW           reduce using rule 55 (binop -> BINOP .)
    DELIMITER       reduce using rule 55 (binop -> BINOP .)
    KDELIMITER      reduce using rule 55 (binop -> BINOP .)
    ORD             reduce using rule 55 (binop -> BINOP .)
    ENDBLOCK        reduce using rule 55 (binop -> BINOP .)
    $end            reduce using rule 55 (binop -> BINOP .)


state 25

    (58) binrel -> KBINREL .

    KDELIMITER      reduce using rule 58 (binrel -> KBINREL .)
    BEGINBLOCK      reduce using rule 58 (binrel -> KBINREL .)
    CHAR            reduce using rule 58 (binrel -> KBINREL .)
    FRAC            reduce using rule 58 (binrel -> KBINREL .)
    ROOT            reduce using rule 58 (binrel -> KBINREL .)
    BINOP           reduce using rule 58 (binrel -> KBINREL .)
    KBINOP          reduce using rule 58 (binrel -> KBINREL .)
    BINREL          reduce using rule 58 (binrel -> KBINREL .)
    KBINREL         reduce using rule 58 (binrel -> KBINREL .)
    NOT             reduce using rule 58 (binrel -> KBINREL .)
    FUNC            reduce using rule 58 (binrel -> KBINREL .)
    LARGEOP         reduce using rule 58 (binrel -> KBINREL .)
    ARROW           reduce using rule 58 (binrel -> KBINREL .)
    DELIMITER       reduce using rule 58 (binrel -> KBINREL .)
    ORD             reduce using rule 58 (binrel -> KBINREL .)
    $end            reduce using rule 58 (binrel -> KBINREL .)
    ENDBLOCK        reduce using rule 58 (binrel -> KBINREL .)


state 26

    (22) command -> delimiter .

    BEGINBLOCK      reduce using rule 22 (command -> delimiter .)
    CHAR            reduce using rule 22 (command -> delimiter .)
    FRAC            reduce using rule 22 (command -> delimiter .)
    ROOT            reduce using rule 22 (command -> delimiter .)
    BINOP           reduce using rule 22 (command -> delimiter .)
    KBINOP          reduce using rule 22 (command -> delimiter .)
    BINREL          reduce using rule 22 (command -> delimiter .)
    KBINREL         reduce using rule 22 (command -> delimiter .)
    NOT             reduce using rule 22 (command -> delimiter .)
    FUNC            reduce using rule 22 (command -> delimiter .)
    LARGEOP         reduce using rule 22 (command -> delimiter .)
    ARROW           reduce using rule 22 (command -> delimiter .)
    DELIMITER       reduce using rule 22 (command -> delimiter .)
    KDELIMITER      reduce using rule 22 (command -> delimiter .)
    ORD             reduce using rule 22 (command -> delimiter .)
    $end            reduce using rule 22 (command -> delimiter .)
    ENDBLOCK        reduce using rule 22 (command -> delimiter .)


state 27

    (7) content -> command .

    BEGINBLOCK      reduce using rule 7 (content -> command .)
    CHAR            reduce using rule 7 (content -> command .)
    FRAC            reduce using rule 7 (content -> command .)
    ROOT            reduce using rule 7 (content -> command .)
    BINOP           reduce using rule 7 (content -> command .)
    KBINOP          reduce using rule 7 (content -> command .)
    BINREL          reduce using rule 7 (content -> command .)
    KBINREL         reduce using rule 7 (content -> command .)
    NOT             reduce using rule 7 (content -> command .)
    FUNC            reduce using rule 7 (content -> command .)
    LARGEOP         reduce using rule 7 (content -> command .)
    ARROW           reduce using rule 7 (content -> command .)
    DELIMITER       reduce using rule 7 (content -> command .)
    KDELIMITER      reduce using rule 7 (content -> command .)
    ORD             reduce using rule 7 (content -> command .)
    $end            reduce using rule 7 (content -> command .)
    ENDBLOCK        reduce using rule 7 (content -> command .)


state 28

    (5) content -> block .
    (25) scripted -> block . SUP char
    (26) scripted -> block . SUP block
    (29) scripted -> block . SUB char
    (30) scripted -> block . SUB block
    (35) scripted -> block . SUP char SUB char
    (36) scripted -> block . SUP char SUB block
    (37) scripted -> block . SUP block SUB char
    (38) scripted -> block . SUP block SUB block
    (43) scripted -> block . SUB char SUP char
    (44) scripted -> block . SUB char SUP block
    (45) scripted -> block . SUB block SUP char
    (46) scripted -> block . SUB block SUP block

    BEGINBLOCK      reduce using rule 5 (content -> block .)
    CHAR            reduce using rule 5 (content -> block .)
    FRAC            reduce using rule 5 (content -> block .)
    ROOT            reduce using rule 5 (content -> block .)
    BINOP           reduce using rule 5 (content -> block .)
    KBINOP          reduce using rule 5 (content -> block .)
    BINREL          reduce using rule 5 (content -> block .)
    KBINREL         reduce using rule 5 (content -> block .)
    NOT             reduce using rule 5 (content -> block .)
    FUNC            reduce using rule 5 (content -> block .)
    LARGEOP         reduce using rule 5 (content -> block .)
    ARROW           reduce using rule 5 (content -> block .)
    DELIMITER       reduce using rule 5 (content -> block .)
    KDELIMITER      reduce using rule 5 (content -> block .)
    ORD             reduce using rule 5 (content -> block .)
    $end            reduce using rule 5 (content -> block .)
    ENDBLOCK        reduce using rule 5 (content -> block .)
    SUP             shift and go to state 48
    SUB             shift and go to state 47


state 29

    (21) command -> arrow .

    BEGINBLOCK      reduce using rule 21 (command -> arrow .)
    CHAR            reduce using rule 21 (command -> arrow .)
    FRAC            reduce using rule 21 (command -> arrow .)
    ROOT            reduce using rule 21 (command -> arrow .)
    BINOP           reduce using rule 21 (command -> arrow .)
    KBINOP          reduce using rule 21 (command -> arrow .)
    BINREL          reduce using rule 21 (command -> arrow .)
    KBINREL         reduce using rule 21 (command -> arrow .)
    NOT             reduce using rule 21 (command -> arrow .)
    FUNC            reduce using rule 21 (command -> arrow .)
    LARGEOP         reduce using rule 21 (command -> arrow .)
    ARROW           reduce using rule 21 (command -> arrow .)
    DELIMITER       reduce using rule 21 (command -> arrow .)
    KDELIMITER      reduce using rule 21 (command -> arrow .)
    ORD             reduce using rule 21 (command -> arrow .)
    $end            reduce using rule 21 (command -> arrow .)
    ENDBLOCK        reduce using rule 21 (command -> arrow .)


state 30

    (59) not -> NOT .

    BEGINBLOCK      reduce using rule 59 (not -> NOT .)
    CHAR            reduce using rule 59 (not -> NOT .)
    FRAC            reduce using rule 59 (not -> NOT .)
    ROOT            reduce using rule 59 (not -> NOT .)
    BINOP           reduce using rule 59 (not -> NOT .)
    KBINOP          reduce using rule 59 (not -> NOT .)
    BINREL          reduce using rule 59 (not -> NOT .)
    KBINREL         reduce using rule 59 (not -> NOT .)
    NOT             reduce using rule 59 (not -> NOT .)
    FUNC            reduce using rule 59 (not -> NOT .)
    LARGEOP         reduce using rule 59 (not -> NOT .)
    ARROW           reduce using rule 59 (not -> NOT .)
    DELIMITER       reduce using rule 59 (not -> NOT .)
    KDELIMITER      reduce using rule 59 (not -> NOT .)
    ORD             reduce using rule 59 (not -> NOT .)
    $end            reduce using rule 59 (not -> NOT .)
    ENDBLOCK        reduce using rule 59 (not -> NOT .)


state 31

    (13) ord -> ORD .

    BEGINBLOCK      reduce using rule 13 (ord -> ORD .)
    CHAR            reduce using rule 13 (ord -> ORD .)
    FRAC            reduce using rule 13 (ord -> ORD .)
    ROOT            reduce using rule 13 (ord -> ORD .)
    BINOP           reduce using rule 13 (ord -> ORD .)
    KBINOP          reduce using rule 13 (ord -> ORD .)
    BINREL          reduce using rule 13 (ord -> ORD .)
    KBINREL         reduce using rule 13 (ord -> ORD .)
    NOT             reduce using rule 13 (ord -> ORD .)
    FUNC            reduce using rule 13 (ord -> ORD .)
    LARGEOP         reduce using rule 13 (ord -> ORD .)
    ARROW           reduce using rule 13 (ord -> ORD .)
    DELIMITER       reduce using rule 13 (ord -> ORD .)
    KDELIMITER      reduce using rule 13 (ord -> ORD .)
    ORD             reduce using rule 13 (ord -> ORD .)
    $end            reduce using rule 13 (ord -> ORD .)
    ENDBLOCK        reduce using rule 13 (ord -> ORD .)
    SUB             reduce using rule 13 (ord -> ORD .)
    SUP             reduce using rule 13 (ord -> ORD .)


state 32

    (15) command -> root .

    BEGINBLOCK      reduce using rule 15 (command -> root .)
    CHAR            reduce using rule 15 (command -> root .)
    FRAC            reduce using rule 15 (command -> root .)
    ROOT            reduce using rule 15 (command -> root .)
    BINOP           reduce using rule 15 (command -> root .)
    KBINOP          reduce using rule 15 (command -> root .)
    BINREL          reduce using rule 15 (command -> root .)
    KBINREL         reduce using rule 15 (command -> root .)
    NOT             reduce using rule 15 (command -> root .)
    FUNC            reduce using rule 15 (command -> root .)
    LARGEOP         reduce using rule 15 (command -> root .)
    ARROW           reduce using rule 15 (command -> root .)
    DELIMITER       reduce using rule 15 (command -> root .)
    KDELIMITER      reduce using rule 15 (command -> root .)
    ORD             reduce using rule 15 (command -> root .)
    $end            reduce using rule 15 (command -> root .)
    ENDBLOCK        reduce using rule 15 (command -> root .)


state 33

    (27) scripted -> char SUB . char
    (28) scripted -> char SUB . block
    (39) scripted -> char SUB . char SUP char
    (40) scripted -> char SUB . char SUP block
    (41) scripted -> char SUB . block SUP char
    (42) scripted -> char SUB . block SUP block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 49
    ord                            shift and go to state 21
    block                          shift and go to state 50

state 34

    (10) chars -> char chars .

    BEGINBLOCK      reduce using rule 10 (chars -> char chars .)
    CHAR            reduce using rule 10 (chars -> char chars .)
    FRAC            reduce using rule 10 (chars -> char chars .)
    ROOT            reduce using rule 10 (chars -> char chars .)
    BINOP           reduce using rule 10 (chars -> char chars .)
    KBINOP          reduce using rule 10 (chars -> char chars .)
    BINREL          reduce using rule 10 (chars -> char chars .)
    KBINREL         reduce using rule 10 (chars -> char chars .)
    NOT             reduce using rule 10 (chars -> char chars .)
    FUNC            reduce using rule 10 (chars -> char chars .)
    LARGEOP         reduce using rule 10 (chars -> char chars .)
    ARROW           reduce using rule 10 (chars -> char chars .)
    DELIMITER       reduce using rule 10 (chars -> char chars .)
    KDELIMITER      reduce using rule 10 (chars -> char chars .)
    ORD             reduce using rule 10 (chars -> char chars .)
    ENDBLOCK        reduce using rule 10 (chars -> char chars .)
    $end            reduce using rule 10 (chars -> char chars .)


state 35

    (9) chars -> char .
    (10) chars -> char . chars
    (9) chars -> . char
    (10) chars -> . char chars
    (11) char -> . CHAR
    (12) char -> . ord
    (13) ord -> . ORD

  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    BEGINBLOCK      reduce using rule 9 (chars -> char .)
    FRAC            reduce using rule 9 (chars -> char .)
    ROOT            reduce using rule 9 (chars -> char .)
    BINOP           reduce using rule 9 (chars -> char .)
    KBINOP          reduce using rule 9 (chars -> char .)
    BINREL          reduce using rule 9 (chars -> char .)
    KBINREL         reduce using rule 9 (chars -> char .)
    NOT             reduce using rule 9 (chars -> char .)
    FUNC            reduce using rule 9 (chars -> char .)
    LARGEOP         reduce using rule 9 (chars -> char .)
    ARROW           reduce using rule 9 (chars -> char .)
    DELIMITER       reduce using rule 9 (chars -> char .)
    KDELIMITER      reduce using rule 9 (chars -> char .)
    $end            reduce using rule 9 (chars -> char .)
    ENDBLOCK        reduce using rule 9 (chars -> char .)
    CHAR            shift and go to state 23
    ORD             shift and go to state 31

  ! CHAR            [ reduce using rule 9 (chars -> char .) ]
  ! ORD             [ reduce using rule 9 (chars -> char .) ]

    char                           shift and go to state 35
    chars                          shift and go to state 34
    ord                            shift and go to state 21

state 36

    (23) scripted -> char SUP . char
    (24) scripted -> char SUP . block
    (31) scripted -> char SUP . char SUB char
    (32) scripted -> char SUP . char SUB block
    (33) scripted -> char SUP . block SUB char
    (34) scripted -> char SUP . block SUB block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 51
    ord                            shift and go to state 21
    block                          shift and go to state 52

state 37

    (47) frac -> FRAC char . char
    (48) frac -> FRAC char . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 53
    ord                            shift and go to state 21
    block                          shift and go to state 54

state 38

    (49) frac -> FRAC block . char
    (50) frac -> FRAC block . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 55
    ord                            shift and go to state 21
    block                          shift and go to state 56

state 39

    (3) block -> BEGINBLOCK content . ENDBLOCK
    (8) content -> content . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (23) scripted -> . char SUP char
    (24) scripted -> . char SUP block
    (25) scripted -> . block SUP char
    (26) scripted -> . block SUP block
    (27) scripted -> . char SUB char
    (28) scripted -> . char SUB block
    (29) scripted -> . block SUB char
    (30) scripted -> . block SUB block
    (31) scripted -> . char SUP char SUB char
    (32) scripted -> . char SUP char SUB block
    (33) scripted -> . char SUP block SUB char
    (34) scripted -> . char SUP block SUB block
    (35) scripted -> . block SUP char SUB char
    (36) scripted -> . block SUP char SUB block
    (37) scripted -> . block SUP block SUB char
    (38) scripted -> . block SUP block SUB block
    (39) scripted -> . char SUB char SUP char
    (40) scripted -> . char SUB char SUP block
    (41) scripted -> . char SUB block SUP char
    (42) scripted -> . char SUB block SUP block
    (43) scripted -> . block SUB char SUP char
    (44) scripted -> . block SUB char SUP block
    (45) scripted -> . block SUB block SUP char
    (46) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (11) char -> . CHAR
    (12) char -> . ord
    (47) frac -> . FRAC char char
    (48) frac -> . FRAC char block
    (49) frac -> . FRAC block char
    (50) frac -> . FRAC block block
    (51) root -> . ROOT char
    (52) root -> . ROOT block
    (53) root -> . ROOT KDELIMITER content KDELIMITER char
    (54) root -> . ROOT KDELIMITER content KDELIMITER block
    (55) binop -> . BINOP
    (56) binop -> . KBINOP
    (57) binrel -> . BINREL
    (58) binrel -> . KBINREL
    (59) not -> . NOT
    (60) function -> . FUNC
    (61) larop -> . LARGEOP SUB char SUP char
    (62) larop -> . LARGEOP SUB char SUP block
    (63) larop -> . LARGEOP SUB block SUP char
    (64) larop -> . LARGEOP SUB block SUP block
    (65) larop -> . LARGEOP SUP char SUB char
    (66) larop -> . LARGEOP SUP char SUB block
    (67) larop -> . LARGEOP SUP block SUB char
    (68) larop -> . LARGEOP SUP block SUB block
    (69) larop -> . LARGEOP
    (70) larop -> . LARGEOP SUB char
    (71) larop -> . LARGEOP SUB block
    (72) arrow -> . ARROW
    (73) delimiter -> . DELIMITER
    (74) delimiter -> . KDELIMITER
    (13) ord -> . ORD

    ENDBLOCK        shift and go to state 57
    BEGINBLOCK      shift and go to state 5
    CHAR            shift and go to state 23
    FRAC            shift and go to state 4
    ROOT            shift and go to state 10
    BINOP           shift and go to state 24
    KBINOP          shift and go to state 20
    BINREL          shift and go to state 14
    KBINREL         shift and go to state 25
    NOT             shift and go to state 30
    FUNC            shift and go to state 18
    LARGEOP         shift and go to state 7
    ARROW           shift and go to state 1
    DELIMITER       shift and go to state 17
    KDELIMITER      shift and go to state 6
    ORD             shift and go to state 31

    function                       shift and go to state 12
    char                           shift and go to state 2
    frac                           shift and go to state 13
    arrow                          shift and go to state 29
    binop                          shift and go to state 15
    chars                          shift and go to state 16
    content                        shift and go to state 42
    delimiter                      shift and go to state 26
    command                        shift and go to state 27
    block                          shift and go to state 28
    binrel                         shift and go to state 3
    not                            shift and go to state 19
    ord                            shift and go to state 21
    root                           shift and go to state 32
    larop                          shift and go to state 22
    scripted                       shift and go to state 11

state 40

    (65) larop -> LARGEOP SUP . char SUB char
    (66) larop -> LARGEOP SUP . char SUB block
    (67) larop -> LARGEOP SUP . block SUB char
    (68) larop -> LARGEOP SUP . block SUB block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 58
    ord                            shift and go to state 21
    block                          shift and go to state 59

state 41

    (61) larop -> LARGEOP SUB . char SUP char
    (62) larop -> LARGEOP SUB . char SUP block
    (63) larop -> LARGEOP SUB . block SUP char
    (64) larop -> LARGEOP SUB . block SUP block
    (70) larop -> LARGEOP SUB . char
    (71) larop -> LARGEOP SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 60
    ord                            shift and go to state 21
    block                          shift and go to state 61

state 42

    (8) content -> content content .
    (8) content -> content . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (23) scripted -> . char SUP char
    (24) scripted -> . char SUP block
    (25) scripted -> . block SUP char
    (26) scripted -> . block SUP block
    (27) scripted -> . char SUB char
    (28) scripted -> . char SUB block
    (29) scripted -> . block SUB char
    (30) scripted -> . block SUB block
    (31) scripted -> . char SUP char SUB char
    (32) scripted -> . char SUP char SUB block
    (33) scripted -> . char SUP block SUB char
    (34) scripted -> . char SUP block SUB block
    (35) scripted -> . block SUP char SUB char
    (36) scripted -> . block SUP char SUB block
    (37) scripted -> . block SUP block SUB char
    (38) scripted -> . block SUP block SUB block
    (39) scripted -> . char SUB char SUP char
    (40) scripted -> . char SUB char SUP block
    (41) scripted -> . char SUB block SUP char
    (42) scripted -> . char SUB block SUP block
    (43) scripted -> . block SUB char SUP char
    (44) scripted -> . block SUB char SUP block
    (45) scripted -> . block SUB block SUP char
    (46) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (11) char -> . CHAR
    (12) char -> . ord
    (47) frac -> . FRAC char char
    (48) frac -> . FRAC char block
    (49) frac -> . FRAC block char
    (50) frac -> . FRAC block block
    (51) root -> . ROOT char
    (52) root -> . ROOT block
    (53) root -> . ROOT KDELIMITER content KDELIMITER char
    (54) root -> . ROOT KDELIMITER content KDELIMITER block
    (55) binop -> . BINOP
    (56) binop -> . KBINOP
    (57) binrel -> . BINREL
    (58) binrel -> . KBINREL
    (59) not -> . NOT
    (60) function -> . FUNC
    (61) larop -> . LARGEOP SUB char SUP char
    (62) larop -> . LARGEOP SUB char SUP block
    (63) larop -> . LARGEOP SUB block SUP char
    (64) larop -> . LARGEOP SUB block SUP block
    (65) larop -> . LARGEOP SUP char SUB char
    (66) larop -> . LARGEOP SUP char SUB block
    (67) larop -> . LARGEOP SUP block SUB char
    (68) larop -> . LARGEOP SUP block SUB block
    (69) larop -> . LARGEOP
    (70) larop -> . LARGEOP SUB char
    (71) larop -> . LARGEOP SUB block
    (72) arrow -> . ARROW
    (73) delimiter -> . DELIMITER
    (74) delimiter -> . KDELIMITER
    (13) ord -> . ORD

  ! shift/reduce conflict for BEGINBLOCK resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FRAC resolved as shift
  ! shift/reduce conflict for ROOT resolved as shift
  ! shift/reduce conflict for BINOP resolved as shift
  ! shift/reduce conflict for KBINOP resolved as shift
  ! shift/reduce conflict for BINREL resolved as shift
  ! shift/reduce conflict for KBINREL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for LARGEOP resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for DELIMITER resolved as shift
  ! shift/reduce conflict for KDELIMITER resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    $end            reduce using rule 8 (content -> content content .)
    ENDBLOCK        reduce using rule 8 (content -> content content .)
    BEGINBLOCK      shift and go to state 5
    CHAR            shift and go to state 23
    FRAC            shift and go to state 4
    ROOT            shift and go to state 10
    BINOP           shift and go to state 24
    KBINOP          shift and go to state 20
    BINREL          shift and go to state 14
    KBINREL         shift and go to state 25
    NOT             shift and go to state 30
    FUNC            shift and go to state 18
    LARGEOP         shift and go to state 7
    ARROW           shift and go to state 1
    DELIMITER       shift and go to state 17
    KDELIMITER      shift and go to state 6
    ORD             shift and go to state 31

  ! BEGINBLOCK      [ reduce using rule 8 (content -> content content .) ]
  ! CHAR            [ reduce using rule 8 (content -> content content .) ]
  ! FRAC            [ reduce using rule 8 (content -> content content .) ]
  ! ROOT            [ reduce using rule 8 (content -> content content .) ]
  ! BINOP           [ reduce using rule 8 (content -> content content .) ]
  ! KBINOP          [ reduce using rule 8 (content -> content content .) ]
  ! BINREL          [ reduce using rule 8 (content -> content content .) ]
  ! KBINREL         [ reduce using rule 8 (content -> content content .) ]
  ! NOT             [ reduce using rule 8 (content -> content content .) ]
  ! FUNC            [ reduce using rule 8 (content -> content content .) ]
  ! LARGEOP         [ reduce using rule 8 (content -> content content .) ]
  ! ARROW           [ reduce using rule 8 (content -> content content .) ]
  ! DELIMITER       [ reduce using rule 8 (content -> content content .) ]
  ! KDELIMITER      [ reduce using rule 8 (content -> content content .) ]
  ! ORD             [ reduce using rule 8 (content -> content content .) ]

    function                       shift and go to state 12
    char                           shift and go to state 2
    frac                           shift and go to state 13
    arrow                          shift and go to state 29
    binop                          shift and go to state 15
    chars                          shift and go to state 16
    content                        shift and go to state 42
    delimiter                      shift and go to state 26
    command                        shift and go to state 27
    block                          shift and go to state 28
    binrel                         shift and go to state 3
    not                            shift and go to state 19
    ord                            shift and go to state 21
    root                           shift and go to state 32
    larop                          shift and go to state 22
    scripted                       shift and go to state 11

state 43

    (2) start -> start content .
    (8) content -> content . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (23) scripted -> . char SUP char
    (24) scripted -> . char SUP block
    (25) scripted -> . block SUP char
    (26) scripted -> . block SUP block
    (27) scripted -> . char SUB char
    (28) scripted -> . char SUB block
    (29) scripted -> . block SUB char
    (30) scripted -> . block SUB block
    (31) scripted -> . char SUP char SUB char
    (32) scripted -> . char SUP char SUB block
    (33) scripted -> . char SUP block SUB char
    (34) scripted -> . char SUP block SUB block
    (35) scripted -> . block SUP char SUB char
    (36) scripted -> . block SUP char SUB block
    (37) scripted -> . block SUP block SUB char
    (38) scripted -> . block SUP block SUB block
    (39) scripted -> . char SUB char SUP char
    (40) scripted -> . char SUB char SUP block
    (41) scripted -> . char SUB block SUP char
    (42) scripted -> . char SUB block SUP block
    (43) scripted -> . block SUB char SUP char
    (44) scripted -> . block SUB char SUP block
    (45) scripted -> . block SUB block SUP char
    (46) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (11) char -> . CHAR
    (12) char -> . ord
    (47) frac -> . FRAC char char
    (48) frac -> . FRAC char block
    (49) frac -> . FRAC block char
    (50) frac -> . FRAC block block
    (51) root -> . ROOT char
    (52) root -> . ROOT block
    (53) root -> . ROOT KDELIMITER content KDELIMITER char
    (54) root -> . ROOT KDELIMITER content KDELIMITER block
    (55) binop -> . BINOP
    (56) binop -> . KBINOP
    (57) binrel -> . BINREL
    (58) binrel -> . KBINREL
    (59) not -> . NOT
    (60) function -> . FUNC
    (61) larop -> . LARGEOP SUB char SUP char
    (62) larop -> . LARGEOP SUB char SUP block
    (63) larop -> . LARGEOP SUB block SUP char
    (64) larop -> . LARGEOP SUB block SUP block
    (65) larop -> . LARGEOP SUP char SUB char
    (66) larop -> . LARGEOP SUP char SUB block
    (67) larop -> . LARGEOP SUP block SUB char
    (68) larop -> . LARGEOP SUP block SUB block
    (69) larop -> . LARGEOP
    (70) larop -> . LARGEOP SUB char
    (71) larop -> . LARGEOP SUB block
    (72) arrow -> . ARROW
    (73) delimiter -> . DELIMITER
    (74) delimiter -> . KDELIMITER
    (13) ord -> . ORD

  ! shift/reduce conflict for BEGINBLOCK resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FRAC resolved as shift
  ! shift/reduce conflict for ROOT resolved as shift
  ! shift/reduce conflict for BINOP resolved as shift
  ! shift/reduce conflict for KBINOP resolved as shift
  ! shift/reduce conflict for BINREL resolved as shift
  ! shift/reduce conflict for KBINREL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for LARGEOP resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for DELIMITER resolved as shift
  ! shift/reduce conflict for KDELIMITER resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    $end            reduce using rule 2 (start -> start content .)
    BEGINBLOCK      shift and go to state 5
    CHAR            shift and go to state 23
    FRAC            shift and go to state 4
    ROOT            shift and go to state 10
    BINOP           shift and go to state 24
    KBINOP          shift and go to state 20
    BINREL          shift and go to state 14
    KBINREL         shift and go to state 25
    NOT             shift and go to state 30
    FUNC            shift and go to state 18
    LARGEOP         shift and go to state 7
    ARROW           shift and go to state 1
    DELIMITER       shift and go to state 17
    KDELIMITER      shift and go to state 6
    ORD             shift and go to state 31

  ! BEGINBLOCK      [ reduce using rule 2 (start -> start content .) ]
  ! CHAR            [ reduce using rule 2 (start -> start content .) ]
  ! FRAC            [ reduce using rule 2 (start -> start content .) ]
  ! ROOT            [ reduce using rule 2 (start -> start content .) ]
  ! BINOP           [ reduce using rule 2 (start -> start content .) ]
  ! KBINOP          [ reduce using rule 2 (start -> start content .) ]
  ! BINREL          [ reduce using rule 2 (start -> start content .) ]
  ! KBINREL         [ reduce using rule 2 (start -> start content .) ]
  ! NOT             [ reduce using rule 2 (start -> start content .) ]
  ! FUNC            [ reduce using rule 2 (start -> start content .) ]
  ! LARGEOP         [ reduce using rule 2 (start -> start content .) ]
  ! ARROW           [ reduce using rule 2 (start -> start content .) ]
  ! DELIMITER       [ reduce using rule 2 (start -> start content .) ]
  ! KDELIMITER      [ reduce using rule 2 (start -> start content .) ]
  ! ORD             [ reduce using rule 2 (start -> start content .) ]

    function                       shift and go to state 12
    char                           shift and go to state 2
    frac                           shift and go to state 13
    arrow                          shift and go to state 29
    binop                          shift and go to state 15
    chars                          shift and go to state 16
    content                        shift and go to state 42
    delimiter                      shift and go to state 26
    command                        shift and go to state 27
    block                          shift and go to state 28
    binrel                         shift and go to state 3
    not                            shift and go to state 19
    ord                            shift and go to state 21
    root                           shift and go to state 32
    larop                          shift and go to state 22
    scripted                       shift and go to state 11

state 44

    (53) root -> ROOT KDELIMITER . content KDELIMITER char
    (54) root -> ROOT KDELIMITER . content KDELIMITER block
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (23) scripted -> . char SUP char
    (24) scripted -> . char SUP block
    (25) scripted -> . block SUP char
    (26) scripted -> . block SUP block
    (27) scripted -> . char SUB char
    (28) scripted -> . char SUB block
    (29) scripted -> . block SUB char
    (30) scripted -> . block SUB block
    (31) scripted -> . char SUP char SUB char
    (32) scripted -> . char SUP char SUB block
    (33) scripted -> . char SUP block SUB char
    (34) scripted -> . char SUP block SUB block
    (35) scripted -> . block SUP char SUB char
    (36) scripted -> . block SUP char SUB block
    (37) scripted -> . block SUP block SUB char
    (38) scripted -> . block SUP block SUB block
    (39) scripted -> . char SUB char SUP char
    (40) scripted -> . char SUB char SUP block
    (41) scripted -> . char SUB block SUP char
    (42) scripted -> . char SUB block SUP block
    (43) scripted -> . block SUB char SUP char
    (44) scripted -> . block SUB char SUP block
    (45) scripted -> . block SUB block SUP char
    (46) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (11) char -> . CHAR
    (12) char -> . ord
    (47) frac -> . FRAC char char
    (48) frac -> . FRAC char block
    (49) frac -> . FRAC block char
    (50) frac -> . FRAC block block
    (51) root -> . ROOT char
    (52) root -> . ROOT block
    (53) root -> . ROOT KDELIMITER content KDELIMITER char
    (54) root -> . ROOT KDELIMITER content KDELIMITER block
    (55) binop -> . BINOP
    (56) binop -> . KBINOP
    (57) binrel -> . BINREL
    (58) binrel -> . KBINREL
    (59) not -> . NOT
    (60) function -> . FUNC
    (61) larop -> . LARGEOP SUB char SUP char
    (62) larop -> . LARGEOP SUB char SUP block
    (63) larop -> . LARGEOP SUB block SUP char
    (64) larop -> . LARGEOP SUB block SUP block
    (65) larop -> . LARGEOP SUP char SUB char
    (66) larop -> . LARGEOP SUP char SUB block
    (67) larop -> . LARGEOP SUP block SUB char
    (68) larop -> . LARGEOP SUP block SUB block
    (69) larop -> . LARGEOP
    (70) larop -> . LARGEOP SUB char
    (71) larop -> . LARGEOP SUB block
    (72) arrow -> . ARROW
    (73) delimiter -> . DELIMITER
    (74) delimiter -> . KDELIMITER
    (13) ord -> . ORD

    BEGINBLOCK      shift and go to state 5
    CHAR            shift and go to state 23
    FRAC            shift and go to state 4
    ROOT            shift and go to state 10
    BINOP           shift and go to state 24
    KBINOP          shift and go to state 20
    BINREL          shift and go to state 14
    KBINREL         shift and go to state 25
    NOT             shift and go to state 30
    FUNC            shift and go to state 18
    LARGEOP         shift and go to state 7
    ARROW           shift and go to state 1
    DELIMITER       shift and go to state 17
    KDELIMITER      shift and go to state 6
    ORD             shift and go to state 31

    function                       shift and go to state 12
    char                           shift and go to state 2
    frac                           shift and go to state 13
    arrow                          shift and go to state 29
    binop                          shift and go to state 15
    chars                          shift and go to state 16
    content                        shift and go to state 62
    delimiter                      shift and go to state 26
    command                        shift and go to state 27
    block                          shift and go to state 28
    binrel                         shift and go to state 3
    not                            shift and go to state 19
    ord                            shift and go to state 21
    root                           shift and go to state 32
    larop                          shift and go to state 22
    scripted                       shift and go to state 11

state 45

    (51) root -> ROOT char .

    BEGINBLOCK      reduce using rule 51 (root -> ROOT char .)
    CHAR            reduce using rule 51 (root -> ROOT char .)
    FRAC            reduce using rule 51 (root -> ROOT char .)
    ROOT            reduce using rule 51 (root -> ROOT char .)
    BINOP           reduce using rule 51 (root -> ROOT char .)
    KBINOP          reduce using rule 51 (root -> ROOT char .)
    BINREL          reduce using rule 51 (root -> ROOT char .)
    KBINREL         reduce using rule 51 (root -> ROOT char .)
    NOT             reduce using rule 51 (root -> ROOT char .)
    FUNC            reduce using rule 51 (root -> ROOT char .)
    LARGEOP         reduce using rule 51 (root -> ROOT char .)
    ARROW           reduce using rule 51 (root -> ROOT char .)
    DELIMITER       reduce using rule 51 (root -> ROOT char .)
    KDELIMITER      reduce using rule 51 (root -> ROOT char .)
    ORD             reduce using rule 51 (root -> ROOT char .)
    ENDBLOCK        reduce using rule 51 (root -> ROOT char .)
    $end            reduce using rule 51 (root -> ROOT char .)


state 46

    (52) root -> ROOT block .

    BEGINBLOCK      reduce using rule 52 (root -> ROOT block .)
    CHAR            reduce using rule 52 (root -> ROOT block .)
    FRAC            reduce using rule 52 (root -> ROOT block .)
    ROOT            reduce using rule 52 (root -> ROOT block .)
    BINOP           reduce using rule 52 (root -> ROOT block .)
    KBINOP          reduce using rule 52 (root -> ROOT block .)
    BINREL          reduce using rule 52 (root -> ROOT block .)
    KBINREL         reduce using rule 52 (root -> ROOT block .)
    NOT             reduce using rule 52 (root -> ROOT block .)
    FUNC            reduce using rule 52 (root -> ROOT block .)
    LARGEOP         reduce using rule 52 (root -> ROOT block .)
    ARROW           reduce using rule 52 (root -> ROOT block .)
    DELIMITER       reduce using rule 52 (root -> ROOT block .)
    KDELIMITER      reduce using rule 52 (root -> ROOT block .)
    ORD             reduce using rule 52 (root -> ROOT block .)
    ENDBLOCK        reduce using rule 52 (root -> ROOT block .)
    $end            reduce using rule 52 (root -> ROOT block .)


state 47

    (29) scripted -> block SUB . char
    (30) scripted -> block SUB . block
    (43) scripted -> block SUB . char SUP char
    (44) scripted -> block SUB . char SUP block
    (45) scripted -> block SUB . block SUP char
    (46) scripted -> block SUB . block SUP block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 63
    ord                            shift and go to state 21
    block                          shift and go to state 64

state 48

    (25) scripted -> block SUP . char
    (26) scripted -> block SUP . block
    (35) scripted -> block SUP . char SUB char
    (36) scripted -> block SUP . char SUB block
    (37) scripted -> block SUP . block SUB char
    (38) scripted -> block SUP . block SUB block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 65
    ord                            shift and go to state 21
    block                          shift and go to state 66

state 49

    (27) scripted -> char SUB char .
    (39) scripted -> char SUB char . SUP char
    (40) scripted -> char SUB char . SUP block

    BEGINBLOCK      reduce using rule 27 (scripted -> char SUB char .)
    CHAR            reduce using rule 27 (scripted -> char SUB char .)
    FRAC            reduce using rule 27 (scripted -> char SUB char .)
    ROOT            reduce using rule 27 (scripted -> char SUB char .)
    BINOP           reduce using rule 27 (scripted -> char SUB char .)
    KBINOP          reduce using rule 27 (scripted -> char SUB char .)
    BINREL          reduce using rule 27 (scripted -> char SUB char .)
    KBINREL         reduce using rule 27 (scripted -> char SUB char .)
    NOT             reduce using rule 27 (scripted -> char SUB char .)
    FUNC            reduce using rule 27 (scripted -> char SUB char .)
    LARGEOP         reduce using rule 27 (scripted -> char SUB char .)
    ARROW           reduce using rule 27 (scripted -> char SUB char .)
    DELIMITER       reduce using rule 27 (scripted -> char SUB char .)
    KDELIMITER      reduce using rule 27 (scripted -> char SUB char .)
    ORD             reduce using rule 27 (scripted -> char SUB char .)
    $end            reduce using rule 27 (scripted -> char SUB char .)
    ENDBLOCK        reduce using rule 27 (scripted -> char SUB char .)
    SUP             shift and go to state 67


state 50

    (28) scripted -> char SUB block .
    (41) scripted -> char SUB block . SUP char
    (42) scripted -> char SUB block . SUP block

    BEGINBLOCK      reduce using rule 28 (scripted -> char SUB block .)
    CHAR            reduce using rule 28 (scripted -> char SUB block .)
    FRAC            reduce using rule 28 (scripted -> char SUB block .)
    ROOT            reduce using rule 28 (scripted -> char SUB block .)
    BINOP           reduce using rule 28 (scripted -> char SUB block .)
    KBINOP          reduce using rule 28 (scripted -> char SUB block .)
    BINREL          reduce using rule 28 (scripted -> char SUB block .)
    KBINREL         reduce using rule 28 (scripted -> char SUB block .)
    NOT             reduce using rule 28 (scripted -> char SUB block .)
    FUNC            reduce using rule 28 (scripted -> char SUB block .)
    LARGEOP         reduce using rule 28 (scripted -> char SUB block .)
    ARROW           reduce using rule 28 (scripted -> char SUB block .)
    DELIMITER       reduce using rule 28 (scripted -> char SUB block .)
    KDELIMITER      reduce using rule 28 (scripted -> char SUB block .)
    ORD             reduce using rule 28 (scripted -> char SUB block .)
    $end            reduce using rule 28 (scripted -> char SUB block .)
    ENDBLOCK        reduce using rule 28 (scripted -> char SUB block .)
    SUP             shift and go to state 68


state 51

    (23) scripted -> char SUP char .
    (31) scripted -> char SUP char . SUB char
    (32) scripted -> char SUP char . SUB block

    BEGINBLOCK      reduce using rule 23 (scripted -> char SUP char .)
    CHAR            reduce using rule 23 (scripted -> char SUP char .)
    FRAC            reduce using rule 23 (scripted -> char SUP char .)
    ROOT            reduce using rule 23 (scripted -> char SUP char .)
    BINOP           reduce using rule 23 (scripted -> char SUP char .)
    KBINOP          reduce using rule 23 (scripted -> char SUP char .)
    BINREL          reduce using rule 23 (scripted -> char SUP char .)
    KBINREL         reduce using rule 23 (scripted -> char SUP char .)
    NOT             reduce using rule 23 (scripted -> char SUP char .)
    FUNC            reduce using rule 23 (scripted -> char SUP char .)
    LARGEOP         reduce using rule 23 (scripted -> char SUP char .)
    ARROW           reduce using rule 23 (scripted -> char SUP char .)
    DELIMITER       reduce using rule 23 (scripted -> char SUP char .)
    KDELIMITER      reduce using rule 23 (scripted -> char SUP char .)
    ORD             reduce using rule 23 (scripted -> char SUP char .)
    $end            reduce using rule 23 (scripted -> char SUP char .)
    ENDBLOCK        reduce using rule 23 (scripted -> char SUP char .)
    SUB             shift and go to state 69


state 52

    (24) scripted -> char SUP block .
    (33) scripted -> char SUP block . SUB char
    (34) scripted -> char SUP block . SUB block

    BEGINBLOCK      reduce using rule 24 (scripted -> char SUP block .)
    CHAR            reduce using rule 24 (scripted -> char SUP block .)
    FRAC            reduce using rule 24 (scripted -> char SUP block .)
    ROOT            reduce using rule 24 (scripted -> char SUP block .)
    BINOP           reduce using rule 24 (scripted -> char SUP block .)
    KBINOP          reduce using rule 24 (scripted -> char SUP block .)
    BINREL          reduce using rule 24 (scripted -> char SUP block .)
    KBINREL         reduce using rule 24 (scripted -> char SUP block .)
    NOT             reduce using rule 24 (scripted -> char SUP block .)
    FUNC            reduce using rule 24 (scripted -> char SUP block .)
    LARGEOP         reduce using rule 24 (scripted -> char SUP block .)
    ARROW           reduce using rule 24 (scripted -> char SUP block .)
    DELIMITER       reduce using rule 24 (scripted -> char SUP block .)
    KDELIMITER      reduce using rule 24 (scripted -> char SUP block .)
    ORD             reduce using rule 24 (scripted -> char SUP block .)
    $end            reduce using rule 24 (scripted -> char SUP block .)
    ENDBLOCK        reduce using rule 24 (scripted -> char SUP block .)
    SUB             shift and go to state 70


state 53

    (47) frac -> FRAC char char .

    BEGINBLOCK      reduce using rule 47 (frac -> FRAC char char .)
    CHAR            reduce using rule 47 (frac -> FRAC char char .)
    FRAC            reduce using rule 47 (frac -> FRAC char char .)
    ROOT            reduce using rule 47 (frac -> FRAC char char .)
    BINOP           reduce using rule 47 (frac -> FRAC char char .)
    KBINOP          reduce using rule 47 (frac -> FRAC char char .)
    BINREL          reduce using rule 47 (frac -> FRAC char char .)
    KBINREL         reduce using rule 47 (frac -> FRAC char char .)
    NOT             reduce using rule 47 (frac -> FRAC char char .)
    FUNC            reduce using rule 47 (frac -> FRAC char char .)
    LARGEOP         reduce using rule 47 (frac -> FRAC char char .)
    ARROW           reduce using rule 47 (frac -> FRAC char char .)
    DELIMITER       reduce using rule 47 (frac -> FRAC char char .)
    KDELIMITER      reduce using rule 47 (frac -> FRAC char char .)
    ORD             reduce using rule 47 (frac -> FRAC char char .)
    $end            reduce using rule 47 (frac -> FRAC char char .)
    ENDBLOCK        reduce using rule 47 (frac -> FRAC char char .)


state 54

    (48) frac -> FRAC char block .

    BEGINBLOCK      reduce using rule 48 (frac -> FRAC char block .)
    CHAR            reduce using rule 48 (frac -> FRAC char block .)
    FRAC            reduce using rule 48 (frac -> FRAC char block .)
    ROOT            reduce using rule 48 (frac -> FRAC char block .)
    BINOP           reduce using rule 48 (frac -> FRAC char block .)
    KBINOP          reduce using rule 48 (frac -> FRAC char block .)
    BINREL          reduce using rule 48 (frac -> FRAC char block .)
    KBINREL         reduce using rule 48 (frac -> FRAC char block .)
    NOT             reduce using rule 48 (frac -> FRAC char block .)
    FUNC            reduce using rule 48 (frac -> FRAC char block .)
    LARGEOP         reduce using rule 48 (frac -> FRAC char block .)
    ARROW           reduce using rule 48 (frac -> FRAC char block .)
    DELIMITER       reduce using rule 48 (frac -> FRAC char block .)
    KDELIMITER      reduce using rule 48 (frac -> FRAC char block .)
    ORD             reduce using rule 48 (frac -> FRAC char block .)
    $end            reduce using rule 48 (frac -> FRAC char block .)
    ENDBLOCK        reduce using rule 48 (frac -> FRAC char block .)


state 55

    (49) frac -> FRAC block char .

    BEGINBLOCK      reduce using rule 49 (frac -> FRAC block char .)
    CHAR            reduce using rule 49 (frac -> FRAC block char .)
    FRAC            reduce using rule 49 (frac -> FRAC block char .)
    ROOT            reduce using rule 49 (frac -> FRAC block char .)
    BINOP           reduce using rule 49 (frac -> FRAC block char .)
    KBINOP          reduce using rule 49 (frac -> FRAC block char .)
    BINREL          reduce using rule 49 (frac -> FRAC block char .)
    KBINREL         reduce using rule 49 (frac -> FRAC block char .)
    NOT             reduce using rule 49 (frac -> FRAC block char .)
    FUNC            reduce using rule 49 (frac -> FRAC block char .)
    LARGEOP         reduce using rule 49 (frac -> FRAC block char .)
    ARROW           reduce using rule 49 (frac -> FRAC block char .)
    DELIMITER       reduce using rule 49 (frac -> FRAC block char .)
    KDELIMITER      reduce using rule 49 (frac -> FRAC block char .)
    ORD             reduce using rule 49 (frac -> FRAC block char .)
    $end            reduce using rule 49 (frac -> FRAC block char .)
    ENDBLOCK        reduce using rule 49 (frac -> FRAC block char .)


state 56

    (50) frac -> FRAC block block .

    BEGINBLOCK      reduce using rule 50 (frac -> FRAC block block .)
    CHAR            reduce using rule 50 (frac -> FRAC block block .)
    FRAC            reduce using rule 50 (frac -> FRAC block block .)
    ROOT            reduce using rule 50 (frac -> FRAC block block .)
    BINOP           reduce using rule 50 (frac -> FRAC block block .)
    KBINOP          reduce using rule 50 (frac -> FRAC block block .)
    BINREL          reduce using rule 50 (frac -> FRAC block block .)
    KBINREL         reduce using rule 50 (frac -> FRAC block block .)
    NOT             reduce using rule 50 (frac -> FRAC block block .)
    FUNC            reduce using rule 50 (frac -> FRAC block block .)
    LARGEOP         reduce using rule 50 (frac -> FRAC block block .)
    ARROW           reduce using rule 50 (frac -> FRAC block block .)
    DELIMITER       reduce using rule 50 (frac -> FRAC block block .)
    KDELIMITER      reduce using rule 50 (frac -> FRAC block block .)
    ORD             reduce using rule 50 (frac -> FRAC block block .)
    $end            reduce using rule 50 (frac -> FRAC block block .)
    ENDBLOCK        reduce using rule 50 (frac -> FRAC block block .)


state 57

    (3) block -> BEGINBLOCK content ENDBLOCK .

    BEGINBLOCK      reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    CHAR            reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    FRAC            reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    ROOT            reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    BINOP           reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    KBINOP          reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    BINREL          reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    KBINREL         reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    NOT             reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    FUNC            reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    LARGEOP         reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    ARROW           reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    DELIMITER       reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    KDELIMITER      reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    ORD             reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    $end            reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    ENDBLOCK        reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    SUB             reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    SUP             reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)


state 58

    (65) larop -> LARGEOP SUP char . SUB char
    (66) larop -> LARGEOP SUP char . SUB block

    SUB             shift and go to state 71


state 59

    (67) larop -> LARGEOP SUP block . SUB char
    (68) larop -> LARGEOP SUP block . SUB block

    SUB             shift and go to state 72


state 60

    (61) larop -> LARGEOP SUB char . SUP char
    (62) larop -> LARGEOP SUB char . SUP block
    (70) larop -> LARGEOP SUB char .

    SUP             shift and go to state 73
    BEGINBLOCK      reduce using rule 70 (larop -> LARGEOP SUB char .)
    CHAR            reduce using rule 70 (larop -> LARGEOP SUB char .)
    FRAC            reduce using rule 70 (larop -> LARGEOP SUB char .)
    ROOT            reduce using rule 70 (larop -> LARGEOP SUB char .)
    BINOP           reduce using rule 70 (larop -> LARGEOP SUB char .)
    KBINOP          reduce using rule 70 (larop -> LARGEOP SUB char .)
    BINREL          reduce using rule 70 (larop -> LARGEOP SUB char .)
    KBINREL         reduce using rule 70 (larop -> LARGEOP SUB char .)
    NOT             reduce using rule 70 (larop -> LARGEOP SUB char .)
    FUNC            reduce using rule 70 (larop -> LARGEOP SUB char .)
    LARGEOP         reduce using rule 70 (larop -> LARGEOP SUB char .)
    ARROW           reduce using rule 70 (larop -> LARGEOP SUB char .)
    DELIMITER       reduce using rule 70 (larop -> LARGEOP SUB char .)
    KDELIMITER      reduce using rule 70 (larop -> LARGEOP SUB char .)
    ORD             reduce using rule 70 (larop -> LARGEOP SUB char .)
    $end            reduce using rule 70 (larop -> LARGEOP SUB char .)
    ENDBLOCK        reduce using rule 70 (larop -> LARGEOP SUB char .)


state 61

    (63) larop -> LARGEOP SUB block . SUP char
    (64) larop -> LARGEOP SUB block . SUP block
    (71) larop -> LARGEOP SUB block .

    SUP             shift and go to state 74
    BEGINBLOCK      reduce using rule 71 (larop -> LARGEOP SUB block .)
    CHAR            reduce using rule 71 (larop -> LARGEOP SUB block .)
    FRAC            reduce using rule 71 (larop -> LARGEOP SUB block .)
    ROOT            reduce using rule 71 (larop -> LARGEOP SUB block .)
    BINOP           reduce using rule 71 (larop -> LARGEOP SUB block .)
    KBINOP          reduce using rule 71 (larop -> LARGEOP SUB block .)
    BINREL          reduce using rule 71 (larop -> LARGEOP SUB block .)
    KBINREL         reduce using rule 71 (larop -> LARGEOP SUB block .)
    NOT             reduce using rule 71 (larop -> LARGEOP SUB block .)
    FUNC            reduce using rule 71 (larop -> LARGEOP SUB block .)
    LARGEOP         reduce using rule 71 (larop -> LARGEOP SUB block .)
    ARROW           reduce using rule 71 (larop -> LARGEOP SUB block .)
    DELIMITER       reduce using rule 71 (larop -> LARGEOP SUB block .)
    KDELIMITER      reduce using rule 71 (larop -> LARGEOP SUB block .)
    ORD             reduce using rule 71 (larop -> LARGEOP SUB block .)
    $end            reduce using rule 71 (larop -> LARGEOP SUB block .)
    ENDBLOCK        reduce using rule 71 (larop -> LARGEOP SUB block .)


state 62

    (53) root -> ROOT KDELIMITER content . KDELIMITER char
    (54) root -> ROOT KDELIMITER content . KDELIMITER block
    (8) content -> content . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (23) scripted -> . char SUP char
    (24) scripted -> . char SUP block
    (25) scripted -> . block SUP char
    (26) scripted -> . block SUP block
    (27) scripted -> . char SUB char
    (28) scripted -> . char SUB block
    (29) scripted -> . block SUB char
    (30) scripted -> . block SUB block
    (31) scripted -> . char SUP char SUB char
    (32) scripted -> . char SUP char SUB block
    (33) scripted -> . char SUP block SUB char
    (34) scripted -> . char SUP block SUB block
    (35) scripted -> . block SUP char SUB char
    (36) scripted -> . block SUP char SUB block
    (37) scripted -> . block SUP block SUB char
    (38) scripted -> . block SUP block SUB block
    (39) scripted -> . char SUB char SUP char
    (40) scripted -> . char SUB char SUP block
    (41) scripted -> . char SUB block SUP char
    (42) scripted -> . char SUB block SUP block
    (43) scripted -> . block SUB char SUP char
    (44) scripted -> . block SUB char SUP block
    (45) scripted -> . block SUB block SUP char
    (46) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (11) char -> . CHAR
    (12) char -> . ord
    (47) frac -> . FRAC char char
    (48) frac -> . FRAC char block
    (49) frac -> . FRAC block char
    (50) frac -> . FRAC block block
    (51) root -> . ROOT char
    (52) root -> . ROOT block
    (53) root -> . ROOT KDELIMITER content KDELIMITER char
    (54) root -> . ROOT KDELIMITER content KDELIMITER block
    (55) binop -> . BINOP
    (56) binop -> . KBINOP
    (57) binrel -> . BINREL
    (58) binrel -> . KBINREL
    (59) not -> . NOT
    (60) function -> . FUNC
    (61) larop -> . LARGEOP SUB char SUP char
    (62) larop -> . LARGEOP SUB char SUP block
    (63) larop -> . LARGEOP SUB block SUP char
    (64) larop -> . LARGEOP SUB block SUP block
    (65) larop -> . LARGEOP SUP char SUB char
    (66) larop -> . LARGEOP SUP char SUB block
    (67) larop -> . LARGEOP SUP block SUB char
    (68) larop -> . LARGEOP SUP block SUB block
    (69) larop -> . LARGEOP
    (70) larop -> . LARGEOP SUB char
    (71) larop -> . LARGEOP SUB block
    (72) arrow -> . ARROW
    (73) delimiter -> . DELIMITER
    (74) delimiter -> . KDELIMITER
    (13) ord -> . ORD

    KDELIMITER      shift and go to state 75
    BEGINBLOCK      shift and go to state 5
    CHAR            shift and go to state 23
    FRAC            shift and go to state 4
    ROOT            shift and go to state 10
    BINOP           shift and go to state 24
    KBINOP          shift and go to state 20
    BINREL          shift and go to state 14
    KBINREL         shift and go to state 25
    NOT             shift and go to state 30
    FUNC            shift and go to state 18
    LARGEOP         shift and go to state 7
    ARROW           shift and go to state 1
    DELIMITER       shift and go to state 17
    ORD             shift and go to state 31

    function                       shift and go to state 12
    char                           shift and go to state 2
    frac                           shift and go to state 13
    arrow                          shift and go to state 29
    binop                          shift and go to state 15
    chars                          shift and go to state 16
    content                        shift and go to state 42
    delimiter                      shift and go to state 26
    command                        shift and go to state 27
    block                          shift and go to state 28
    binrel                         shift and go to state 3
    not                            shift and go to state 19
    ord                            shift and go to state 21
    root                           shift and go to state 32
    larop                          shift and go to state 22
    scripted                       shift and go to state 11

state 63

    (29) scripted -> block SUB char .
    (43) scripted -> block SUB char . SUP char
    (44) scripted -> block SUB char . SUP block

    BEGINBLOCK      reduce using rule 29 (scripted -> block SUB char .)
    CHAR            reduce using rule 29 (scripted -> block SUB char .)
    FRAC            reduce using rule 29 (scripted -> block SUB char .)
    ROOT            reduce using rule 29 (scripted -> block SUB char .)
    BINOP           reduce using rule 29 (scripted -> block SUB char .)
    KBINOP          reduce using rule 29 (scripted -> block SUB char .)
    BINREL          reduce using rule 29 (scripted -> block SUB char .)
    KBINREL         reduce using rule 29 (scripted -> block SUB char .)
    NOT             reduce using rule 29 (scripted -> block SUB char .)
    FUNC            reduce using rule 29 (scripted -> block SUB char .)
    LARGEOP         reduce using rule 29 (scripted -> block SUB char .)
    ARROW           reduce using rule 29 (scripted -> block SUB char .)
    DELIMITER       reduce using rule 29 (scripted -> block SUB char .)
    KDELIMITER      reduce using rule 29 (scripted -> block SUB char .)
    ORD             reduce using rule 29 (scripted -> block SUB char .)
    $end            reduce using rule 29 (scripted -> block SUB char .)
    ENDBLOCK        reduce using rule 29 (scripted -> block SUB char .)
    SUP             shift and go to state 76


state 64

    (30) scripted -> block SUB block .
    (45) scripted -> block SUB block . SUP char
    (46) scripted -> block SUB block . SUP block

    BEGINBLOCK      reduce using rule 30 (scripted -> block SUB block .)
    CHAR            reduce using rule 30 (scripted -> block SUB block .)
    FRAC            reduce using rule 30 (scripted -> block SUB block .)
    ROOT            reduce using rule 30 (scripted -> block SUB block .)
    BINOP           reduce using rule 30 (scripted -> block SUB block .)
    KBINOP          reduce using rule 30 (scripted -> block SUB block .)
    BINREL          reduce using rule 30 (scripted -> block SUB block .)
    KBINREL         reduce using rule 30 (scripted -> block SUB block .)
    NOT             reduce using rule 30 (scripted -> block SUB block .)
    FUNC            reduce using rule 30 (scripted -> block SUB block .)
    LARGEOP         reduce using rule 30 (scripted -> block SUB block .)
    ARROW           reduce using rule 30 (scripted -> block SUB block .)
    DELIMITER       reduce using rule 30 (scripted -> block SUB block .)
    KDELIMITER      reduce using rule 30 (scripted -> block SUB block .)
    ORD             reduce using rule 30 (scripted -> block SUB block .)
    $end            reduce using rule 30 (scripted -> block SUB block .)
    ENDBLOCK        reduce using rule 30 (scripted -> block SUB block .)
    SUP             shift and go to state 77


state 65

    (25) scripted -> block SUP char .
    (35) scripted -> block SUP char . SUB char
    (36) scripted -> block SUP char . SUB block

    BEGINBLOCK      reduce using rule 25 (scripted -> block SUP char .)
    CHAR            reduce using rule 25 (scripted -> block SUP char .)
    FRAC            reduce using rule 25 (scripted -> block SUP char .)
    ROOT            reduce using rule 25 (scripted -> block SUP char .)
    BINOP           reduce using rule 25 (scripted -> block SUP char .)
    KBINOP          reduce using rule 25 (scripted -> block SUP char .)
    BINREL          reduce using rule 25 (scripted -> block SUP char .)
    KBINREL         reduce using rule 25 (scripted -> block SUP char .)
    NOT             reduce using rule 25 (scripted -> block SUP char .)
    FUNC            reduce using rule 25 (scripted -> block SUP char .)
    LARGEOP         reduce using rule 25 (scripted -> block SUP char .)
    ARROW           reduce using rule 25 (scripted -> block SUP char .)
    DELIMITER       reduce using rule 25 (scripted -> block SUP char .)
    KDELIMITER      reduce using rule 25 (scripted -> block SUP char .)
    ORD             reduce using rule 25 (scripted -> block SUP char .)
    $end            reduce using rule 25 (scripted -> block SUP char .)
    ENDBLOCK        reduce using rule 25 (scripted -> block SUP char .)
    SUB             shift and go to state 78


state 66

    (26) scripted -> block SUP block .
    (37) scripted -> block SUP block . SUB char
    (38) scripted -> block SUP block . SUB block

    BEGINBLOCK      reduce using rule 26 (scripted -> block SUP block .)
    CHAR            reduce using rule 26 (scripted -> block SUP block .)
    FRAC            reduce using rule 26 (scripted -> block SUP block .)
    ROOT            reduce using rule 26 (scripted -> block SUP block .)
    BINOP           reduce using rule 26 (scripted -> block SUP block .)
    KBINOP          reduce using rule 26 (scripted -> block SUP block .)
    BINREL          reduce using rule 26 (scripted -> block SUP block .)
    KBINREL         reduce using rule 26 (scripted -> block SUP block .)
    NOT             reduce using rule 26 (scripted -> block SUP block .)
    FUNC            reduce using rule 26 (scripted -> block SUP block .)
    LARGEOP         reduce using rule 26 (scripted -> block SUP block .)
    ARROW           reduce using rule 26 (scripted -> block SUP block .)
    DELIMITER       reduce using rule 26 (scripted -> block SUP block .)
    KDELIMITER      reduce using rule 26 (scripted -> block SUP block .)
    ORD             reduce using rule 26 (scripted -> block SUP block .)
    $end            reduce using rule 26 (scripted -> block SUP block .)
    ENDBLOCK        reduce using rule 26 (scripted -> block SUP block .)
    SUB             shift and go to state 79


state 67

    (39) scripted -> char SUB char SUP . char
    (40) scripted -> char SUB char SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 80
    ord                            shift and go to state 21
    block                          shift and go to state 81

state 68

    (41) scripted -> char SUB block SUP . char
    (42) scripted -> char SUB block SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 82
    ord                            shift and go to state 21
    block                          shift and go to state 83

state 69

    (31) scripted -> char SUP char SUB . char
    (32) scripted -> char SUP char SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 84
    ord                            shift and go to state 21
    block                          shift and go to state 85

state 70

    (33) scripted -> char SUP block SUB . char
    (34) scripted -> char SUP block SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 86
    ord                            shift and go to state 21
    block                          shift and go to state 87

state 71

    (65) larop -> LARGEOP SUP char SUB . char
    (66) larop -> LARGEOP SUP char SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 88
    ord                            shift and go to state 21
    block                          shift and go to state 89

state 72

    (67) larop -> LARGEOP SUP block SUB . char
    (68) larop -> LARGEOP SUP block SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 90
    ord                            shift and go to state 21
    block                          shift and go to state 91

state 73

    (61) larop -> LARGEOP SUB char SUP . char
    (62) larop -> LARGEOP SUB char SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 92
    ord                            shift and go to state 21
    block                          shift and go to state 93

state 74

    (63) larop -> LARGEOP SUB block SUP . char
    (64) larop -> LARGEOP SUB block SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 94
    ord                            shift and go to state 21
    block                          shift and go to state 95

state 75

    (53) root -> ROOT KDELIMITER content KDELIMITER . char
    (54) root -> ROOT KDELIMITER content KDELIMITER . block
    (74) delimiter -> KDELIMITER .
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BEGINBLOCK resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    FRAC            reduce using rule 74 (delimiter -> KDELIMITER .)
    ROOT            reduce using rule 74 (delimiter -> KDELIMITER .)
    BINOP           reduce using rule 74 (delimiter -> KDELIMITER .)
    KBINOP          reduce using rule 74 (delimiter -> KDELIMITER .)
    BINREL          reduce using rule 74 (delimiter -> KDELIMITER .)
    KBINREL         reduce using rule 74 (delimiter -> KDELIMITER .)
    NOT             reduce using rule 74 (delimiter -> KDELIMITER .)
    FUNC            reduce using rule 74 (delimiter -> KDELIMITER .)
    LARGEOP         reduce using rule 74 (delimiter -> KDELIMITER .)
    ARROW           reduce using rule 74 (delimiter -> KDELIMITER .)
    DELIMITER       reduce using rule 74 (delimiter -> KDELIMITER .)
    KDELIMITER      reduce using rule 74 (delimiter -> KDELIMITER .)
    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

  ! BEGINBLOCK      [ reduce using rule 74 (delimiter -> KDELIMITER .) ]
  ! CHAR            [ reduce using rule 74 (delimiter -> KDELIMITER .) ]
  ! ORD             [ reduce using rule 74 (delimiter -> KDELIMITER .) ]

    char                           shift and go to state 96
    ord                            shift and go to state 21
    block                          shift and go to state 97

state 76

    (43) scripted -> block SUB char SUP . char
    (44) scripted -> block SUB char SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 98
    ord                            shift and go to state 21
    block                          shift and go to state 99

state 77

    (45) scripted -> block SUB block SUP . char
    (46) scripted -> block SUB block SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 100
    ord                            shift and go to state 21
    block                          shift and go to state 101

state 78

    (35) scripted -> block SUP char SUB . char
    (36) scripted -> block SUP char SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 102
    ord                            shift and go to state 21
    block                          shift and go to state 103

state 79

    (37) scripted -> block SUP block SUB . char
    (38) scripted -> block SUP block SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 23
    BEGINBLOCK      shift and go to state 5
    ORD             shift and go to state 31

    char                           shift and go to state 104
    ord                            shift and go to state 21
    block                          shift and go to state 105

state 80

    (39) scripted -> char SUB char SUP char .

    BEGINBLOCK      reduce using rule 39 (scripted -> char SUB char SUP char .)
    CHAR            reduce using rule 39 (scripted -> char SUB char SUP char .)
    FRAC            reduce using rule 39 (scripted -> char SUB char SUP char .)
    ROOT            reduce using rule 39 (scripted -> char SUB char SUP char .)
    BINOP           reduce using rule 39 (scripted -> char SUB char SUP char .)
    KBINOP          reduce using rule 39 (scripted -> char SUB char SUP char .)
    BINREL          reduce using rule 39 (scripted -> char SUB char SUP char .)
    KBINREL         reduce using rule 39 (scripted -> char SUB char SUP char .)
    NOT             reduce using rule 39 (scripted -> char SUB char SUP char .)
    FUNC            reduce using rule 39 (scripted -> char SUB char SUP char .)
    LARGEOP         reduce using rule 39 (scripted -> char SUB char SUP char .)
    ARROW           reduce using rule 39 (scripted -> char SUB char SUP char .)
    DELIMITER       reduce using rule 39 (scripted -> char SUB char SUP char .)
    KDELIMITER      reduce using rule 39 (scripted -> char SUB char SUP char .)
    ORD             reduce using rule 39 (scripted -> char SUB char SUP char .)
    $end            reduce using rule 39 (scripted -> char SUB char SUP char .)
    ENDBLOCK        reduce using rule 39 (scripted -> char SUB char SUP char .)


state 81

    (40) scripted -> char SUB char SUP block .

    BEGINBLOCK      reduce using rule 40 (scripted -> char SUB char SUP block .)
    CHAR            reduce using rule 40 (scripted -> char SUB char SUP block .)
    FRAC            reduce using rule 40 (scripted -> char SUB char SUP block .)
    ROOT            reduce using rule 40 (scripted -> char SUB char SUP block .)
    BINOP           reduce using rule 40 (scripted -> char SUB char SUP block .)
    KBINOP          reduce using rule 40 (scripted -> char SUB char SUP block .)
    BINREL          reduce using rule 40 (scripted -> char SUB char SUP block .)
    KBINREL         reduce using rule 40 (scripted -> char SUB char SUP block .)
    NOT             reduce using rule 40 (scripted -> char SUB char SUP block .)
    FUNC            reduce using rule 40 (scripted -> char SUB char SUP block .)
    LARGEOP         reduce using rule 40 (scripted -> char SUB char SUP block .)
    ARROW           reduce using rule 40 (scripted -> char SUB char SUP block .)
    DELIMITER       reduce using rule 40 (scripted -> char SUB char SUP block .)
    KDELIMITER      reduce using rule 40 (scripted -> char SUB char SUP block .)
    ORD             reduce using rule 40 (scripted -> char SUB char SUP block .)
    $end            reduce using rule 40 (scripted -> char SUB char SUP block .)
    ENDBLOCK        reduce using rule 40 (scripted -> char SUB char SUP block .)


state 82

    (41) scripted -> char SUB block SUP char .

    BEGINBLOCK      reduce using rule 41 (scripted -> char SUB block SUP char .)
    CHAR            reduce using rule 41 (scripted -> char SUB block SUP char .)
    FRAC            reduce using rule 41 (scripted -> char SUB block SUP char .)
    ROOT            reduce using rule 41 (scripted -> char SUB block SUP char .)
    BINOP           reduce using rule 41 (scripted -> char SUB block SUP char .)
    KBINOP          reduce using rule 41 (scripted -> char SUB block SUP char .)
    BINREL          reduce using rule 41 (scripted -> char SUB block SUP char .)
    KBINREL         reduce using rule 41 (scripted -> char SUB block SUP char .)
    NOT             reduce using rule 41 (scripted -> char SUB block SUP char .)
    FUNC            reduce using rule 41 (scripted -> char SUB block SUP char .)
    LARGEOP         reduce using rule 41 (scripted -> char SUB block SUP char .)
    ARROW           reduce using rule 41 (scripted -> char SUB block SUP char .)
    DELIMITER       reduce using rule 41 (scripted -> char SUB block SUP char .)
    KDELIMITER      reduce using rule 41 (scripted -> char SUB block SUP char .)
    ORD             reduce using rule 41 (scripted -> char SUB block SUP char .)
    $end            reduce using rule 41 (scripted -> char SUB block SUP char .)
    ENDBLOCK        reduce using rule 41 (scripted -> char SUB block SUP char .)


state 83

    (42) scripted -> char SUB block SUP block .

    BEGINBLOCK      reduce using rule 42 (scripted -> char SUB block SUP block .)
    CHAR            reduce using rule 42 (scripted -> char SUB block SUP block .)
    FRAC            reduce using rule 42 (scripted -> char SUB block SUP block .)
    ROOT            reduce using rule 42 (scripted -> char SUB block SUP block .)
    BINOP           reduce using rule 42 (scripted -> char SUB block SUP block .)
    KBINOP          reduce using rule 42 (scripted -> char SUB block SUP block .)
    BINREL          reduce using rule 42 (scripted -> char SUB block SUP block .)
    KBINREL         reduce using rule 42 (scripted -> char SUB block SUP block .)
    NOT             reduce using rule 42 (scripted -> char SUB block SUP block .)
    FUNC            reduce using rule 42 (scripted -> char SUB block SUP block .)
    LARGEOP         reduce using rule 42 (scripted -> char SUB block SUP block .)
    ARROW           reduce using rule 42 (scripted -> char SUB block SUP block .)
    DELIMITER       reduce using rule 42 (scripted -> char SUB block SUP block .)
    KDELIMITER      reduce using rule 42 (scripted -> char SUB block SUP block .)
    ORD             reduce using rule 42 (scripted -> char SUB block SUP block .)
    $end            reduce using rule 42 (scripted -> char SUB block SUP block .)
    ENDBLOCK        reduce using rule 42 (scripted -> char SUB block SUP block .)


state 84

    (31) scripted -> char SUP char SUB char .

    BEGINBLOCK      reduce using rule 31 (scripted -> char SUP char SUB char .)
    CHAR            reduce using rule 31 (scripted -> char SUP char SUB char .)
    FRAC            reduce using rule 31 (scripted -> char SUP char SUB char .)
    ROOT            reduce using rule 31 (scripted -> char SUP char SUB char .)
    BINOP           reduce using rule 31 (scripted -> char SUP char SUB char .)
    KBINOP          reduce using rule 31 (scripted -> char SUP char SUB char .)
    BINREL          reduce using rule 31 (scripted -> char SUP char SUB char .)
    KBINREL         reduce using rule 31 (scripted -> char SUP char SUB char .)
    NOT             reduce using rule 31 (scripted -> char SUP char SUB char .)
    FUNC            reduce using rule 31 (scripted -> char SUP char SUB char .)
    LARGEOP         reduce using rule 31 (scripted -> char SUP char SUB char .)
    ARROW           reduce using rule 31 (scripted -> char SUP char SUB char .)
    DELIMITER       reduce using rule 31 (scripted -> char SUP char SUB char .)
    KDELIMITER      reduce using rule 31 (scripted -> char SUP char SUB char .)
    ORD             reduce using rule 31 (scripted -> char SUP char SUB char .)
    $end            reduce using rule 31 (scripted -> char SUP char SUB char .)
    ENDBLOCK        reduce using rule 31 (scripted -> char SUP char SUB char .)


state 85

    (32) scripted -> char SUP char SUB block .

    BEGINBLOCK      reduce using rule 32 (scripted -> char SUP char SUB block .)
    CHAR            reduce using rule 32 (scripted -> char SUP char SUB block .)
    FRAC            reduce using rule 32 (scripted -> char SUP char SUB block .)
    ROOT            reduce using rule 32 (scripted -> char SUP char SUB block .)
    BINOP           reduce using rule 32 (scripted -> char SUP char SUB block .)
    KBINOP          reduce using rule 32 (scripted -> char SUP char SUB block .)
    BINREL          reduce using rule 32 (scripted -> char SUP char SUB block .)
    KBINREL         reduce using rule 32 (scripted -> char SUP char SUB block .)
    NOT             reduce using rule 32 (scripted -> char SUP char SUB block .)
    FUNC            reduce using rule 32 (scripted -> char SUP char SUB block .)
    LARGEOP         reduce using rule 32 (scripted -> char SUP char SUB block .)
    ARROW           reduce using rule 32 (scripted -> char SUP char SUB block .)
    DELIMITER       reduce using rule 32 (scripted -> char SUP char SUB block .)
    KDELIMITER      reduce using rule 32 (scripted -> char SUP char SUB block .)
    ORD             reduce using rule 32 (scripted -> char SUP char SUB block .)
    $end            reduce using rule 32 (scripted -> char SUP char SUB block .)
    ENDBLOCK        reduce using rule 32 (scripted -> char SUP char SUB block .)


state 86

    (33) scripted -> char SUP block SUB char .

    BEGINBLOCK      reduce using rule 33 (scripted -> char SUP block SUB char .)
    CHAR            reduce using rule 33 (scripted -> char SUP block SUB char .)
    FRAC            reduce using rule 33 (scripted -> char SUP block SUB char .)
    ROOT            reduce using rule 33 (scripted -> char SUP block SUB char .)
    BINOP           reduce using rule 33 (scripted -> char SUP block SUB char .)
    KBINOP          reduce using rule 33 (scripted -> char SUP block SUB char .)
    BINREL          reduce using rule 33 (scripted -> char SUP block SUB char .)
    KBINREL         reduce using rule 33 (scripted -> char SUP block SUB char .)
    NOT             reduce using rule 33 (scripted -> char SUP block SUB char .)
    FUNC            reduce using rule 33 (scripted -> char SUP block SUB char .)
    LARGEOP         reduce using rule 33 (scripted -> char SUP block SUB char .)
    ARROW           reduce using rule 33 (scripted -> char SUP block SUB char .)
    DELIMITER       reduce using rule 33 (scripted -> char SUP block SUB char .)
    KDELIMITER      reduce using rule 33 (scripted -> char SUP block SUB char .)
    ORD             reduce using rule 33 (scripted -> char SUP block SUB char .)
    $end            reduce using rule 33 (scripted -> char SUP block SUB char .)
    ENDBLOCK        reduce using rule 33 (scripted -> char SUP block SUB char .)


state 87

    (34) scripted -> char SUP block SUB block .

    BEGINBLOCK      reduce using rule 34 (scripted -> char SUP block SUB block .)
    CHAR            reduce using rule 34 (scripted -> char SUP block SUB block .)
    FRAC            reduce using rule 34 (scripted -> char SUP block SUB block .)
    ROOT            reduce using rule 34 (scripted -> char SUP block SUB block .)
    BINOP           reduce using rule 34 (scripted -> char SUP block SUB block .)
    KBINOP          reduce using rule 34 (scripted -> char SUP block SUB block .)
    BINREL          reduce using rule 34 (scripted -> char SUP block SUB block .)
    KBINREL         reduce using rule 34 (scripted -> char SUP block SUB block .)
    NOT             reduce using rule 34 (scripted -> char SUP block SUB block .)
    FUNC            reduce using rule 34 (scripted -> char SUP block SUB block .)
    LARGEOP         reduce using rule 34 (scripted -> char SUP block SUB block .)
    ARROW           reduce using rule 34 (scripted -> char SUP block SUB block .)
    DELIMITER       reduce using rule 34 (scripted -> char SUP block SUB block .)
    KDELIMITER      reduce using rule 34 (scripted -> char SUP block SUB block .)
    ORD             reduce using rule 34 (scripted -> char SUP block SUB block .)
    $end            reduce using rule 34 (scripted -> char SUP block SUB block .)
    ENDBLOCK        reduce using rule 34 (scripted -> char SUP block SUB block .)


state 88

    (65) larop -> LARGEOP SUP char SUB char .

    BEGINBLOCK      reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    CHAR            reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    FRAC            reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    ROOT            reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    BINOP           reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    KBINOP          reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    BINREL          reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    KBINREL         reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    NOT             reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    FUNC            reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    LARGEOP         reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    ARROW           reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    DELIMITER       reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    KDELIMITER      reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    ORD             reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    $end            reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)
    ENDBLOCK        reduce using rule 65 (larop -> LARGEOP SUP char SUB char .)


state 89

    (66) larop -> LARGEOP SUP char SUB block .

    BEGINBLOCK      reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    CHAR            reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    FRAC            reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    ROOT            reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    BINOP           reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    KBINOP          reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    BINREL          reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    KBINREL         reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    NOT             reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    FUNC            reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    LARGEOP         reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    ARROW           reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    DELIMITER       reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    KDELIMITER      reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    ORD             reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    $end            reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)
    ENDBLOCK        reduce using rule 66 (larop -> LARGEOP SUP char SUB block .)


state 90

    (67) larop -> LARGEOP SUP block SUB char .

    BEGINBLOCK      reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    CHAR            reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    FRAC            reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    ROOT            reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    BINOP           reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    KBINOP          reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    BINREL          reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    KBINREL         reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    NOT             reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    FUNC            reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    LARGEOP         reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    ARROW           reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    DELIMITER       reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    KDELIMITER      reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    ORD             reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    $end            reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)
    ENDBLOCK        reduce using rule 67 (larop -> LARGEOP SUP block SUB char .)


state 91

    (68) larop -> LARGEOP SUP block SUB block .

    BEGINBLOCK      reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    CHAR            reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    FRAC            reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    ROOT            reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    BINOP           reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    KBINOP          reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    BINREL          reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    KBINREL         reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    NOT             reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    FUNC            reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    LARGEOP         reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    ARROW           reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    DELIMITER       reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    KDELIMITER      reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    ORD             reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    $end            reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)
    ENDBLOCK        reduce using rule 68 (larop -> LARGEOP SUP block SUB block .)


state 92

    (61) larop -> LARGEOP SUB char SUP char .

    BEGINBLOCK      reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    CHAR            reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    FRAC            reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    ROOT            reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    BINOP           reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    KBINOP          reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    BINREL          reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    KBINREL         reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    NOT             reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    FUNC            reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    LARGEOP         reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    ARROW           reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    DELIMITER       reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    KDELIMITER      reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    ORD             reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    $end            reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)
    ENDBLOCK        reduce using rule 61 (larop -> LARGEOP SUB char SUP char .)


state 93

    (62) larop -> LARGEOP SUB char SUP block .

    BEGINBLOCK      reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    CHAR            reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    FRAC            reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    ROOT            reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    BINOP           reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    KBINOP          reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    BINREL          reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    KBINREL         reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    NOT             reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    FUNC            reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    LARGEOP         reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    ARROW           reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    DELIMITER       reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    KDELIMITER      reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    ORD             reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    $end            reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)
    ENDBLOCK        reduce using rule 62 (larop -> LARGEOP SUB char SUP block .)


state 94

    (63) larop -> LARGEOP SUB block SUP char .

    BEGINBLOCK      reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    CHAR            reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    FRAC            reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    ROOT            reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    BINOP           reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    KBINOP          reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    BINREL          reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    KBINREL         reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    NOT             reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    FUNC            reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    LARGEOP         reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    ARROW           reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    DELIMITER       reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    KDELIMITER      reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    ORD             reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    $end            reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)
    ENDBLOCK        reduce using rule 63 (larop -> LARGEOP SUB block SUP char .)


state 95

    (64) larop -> LARGEOP SUB block SUP block .

    BEGINBLOCK      reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    CHAR            reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    FRAC            reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    ROOT            reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    BINOP           reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    KBINOP          reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    BINREL          reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    KBINREL         reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    NOT             reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    FUNC            reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    LARGEOP         reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    ARROW           reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    DELIMITER       reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    KDELIMITER      reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    ORD             reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    $end            reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)
    ENDBLOCK        reduce using rule 64 (larop -> LARGEOP SUB block SUP block .)


state 96

    (53) root -> ROOT KDELIMITER content KDELIMITER char .

    BEGINBLOCK      reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    CHAR            reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    FRAC            reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    ROOT            reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    BINOP           reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    KBINOP          reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    BINREL          reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    KBINREL         reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    NOT             reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    FUNC            reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    LARGEOP         reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    ARROW           reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    DELIMITER       reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    KDELIMITER      reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    ORD             reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    ENDBLOCK        reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)
    $end            reduce using rule 53 (root -> ROOT KDELIMITER content KDELIMITER char .)


state 97

    (54) root -> ROOT KDELIMITER content KDELIMITER block .

    BEGINBLOCK      reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    CHAR            reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    FRAC            reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    ROOT            reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    BINOP           reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    KBINOP          reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    BINREL          reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    KBINREL         reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    NOT             reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    FUNC            reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    LARGEOP         reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    ARROW           reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    DELIMITER       reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    KDELIMITER      reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    ORD             reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    ENDBLOCK        reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)
    $end            reduce using rule 54 (root -> ROOT KDELIMITER content KDELIMITER block .)


state 98

    (43) scripted -> block SUB char SUP char .

    BEGINBLOCK      reduce using rule 43 (scripted -> block SUB char SUP char .)
    CHAR            reduce using rule 43 (scripted -> block SUB char SUP char .)
    FRAC            reduce using rule 43 (scripted -> block SUB char SUP char .)
    ROOT            reduce using rule 43 (scripted -> block SUB char SUP char .)
    BINOP           reduce using rule 43 (scripted -> block SUB char SUP char .)
    KBINOP          reduce using rule 43 (scripted -> block SUB char SUP char .)
    BINREL          reduce using rule 43 (scripted -> block SUB char SUP char .)
    KBINREL         reduce using rule 43 (scripted -> block SUB char SUP char .)
    NOT             reduce using rule 43 (scripted -> block SUB char SUP char .)
    FUNC            reduce using rule 43 (scripted -> block SUB char SUP char .)
    LARGEOP         reduce using rule 43 (scripted -> block SUB char SUP char .)
    ARROW           reduce using rule 43 (scripted -> block SUB char SUP char .)
    DELIMITER       reduce using rule 43 (scripted -> block SUB char SUP char .)
    KDELIMITER      reduce using rule 43 (scripted -> block SUB char SUP char .)
    ORD             reduce using rule 43 (scripted -> block SUB char SUP char .)
    $end            reduce using rule 43 (scripted -> block SUB char SUP char .)
    ENDBLOCK        reduce using rule 43 (scripted -> block SUB char SUP char .)


state 99

    (44) scripted -> block SUB char SUP block .

    BEGINBLOCK      reduce using rule 44 (scripted -> block SUB char SUP block .)
    CHAR            reduce using rule 44 (scripted -> block SUB char SUP block .)
    FRAC            reduce using rule 44 (scripted -> block SUB char SUP block .)
    ROOT            reduce using rule 44 (scripted -> block SUB char SUP block .)
    BINOP           reduce using rule 44 (scripted -> block SUB char SUP block .)
    KBINOP          reduce using rule 44 (scripted -> block SUB char SUP block .)
    BINREL          reduce using rule 44 (scripted -> block SUB char SUP block .)
    KBINREL         reduce using rule 44 (scripted -> block SUB char SUP block .)
    NOT             reduce using rule 44 (scripted -> block SUB char SUP block .)
    FUNC            reduce using rule 44 (scripted -> block SUB char SUP block .)
    LARGEOP         reduce using rule 44 (scripted -> block SUB char SUP block .)
    ARROW           reduce using rule 44 (scripted -> block SUB char SUP block .)
    DELIMITER       reduce using rule 44 (scripted -> block SUB char SUP block .)
    KDELIMITER      reduce using rule 44 (scripted -> block SUB char SUP block .)
    ORD             reduce using rule 44 (scripted -> block SUB char SUP block .)
    $end            reduce using rule 44 (scripted -> block SUB char SUP block .)
    ENDBLOCK        reduce using rule 44 (scripted -> block SUB char SUP block .)


state 100

    (45) scripted -> block SUB block SUP char .

    BEGINBLOCK      reduce using rule 45 (scripted -> block SUB block SUP char .)
    CHAR            reduce using rule 45 (scripted -> block SUB block SUP char .)
    FRAC            reduce using rule 45 (scripted -> block SUB block SUP char .)
    ROOT            reduce using rule 45 (scripted -> block SUB block SUP char .)
    BINOP           reduce using rule 45 (scripted -> block SUB block SUP char .)
    KBINOP          reduce using rule 45 (scripted -> block SUB block SUP char .)
    BINREL          reduce using rule 45 (scripted -> block SUB block SUP char .)
    KBINREL         reduce using rule 45 (scripted -> block SUB block SUP char .)
    NOT             reduce using rule 45 (scripted -> block SUB block SUP char .)
    FUNC            reduce using rule 45 (scripted -> block SUB block SUP char .)
    LARGEOP         reduce using rule 45 (scripted -> block SUB block SUP char .)
    ARROW           reduce using rule 45 (scripted -> block SUB block SUP char .)
    DELIMITER       reduce using rule 45 (scripted -> block SUB block SUP char .)
    KDELIMITER      reduce using rule 45 (scripted -> block SUB block SUP char .)
    ORD             reduce using rule 45 (scripted -> block SUB block SUP char .)
    $end            reduce using rule 45 (scripted -> block SUB block SUP char .)
    ENDBLOCK        reduce using rule 45 (scripted -> block SUB block SUP char .)


state 101

    (46) scripted -> block SUB block SUP block .

    BEGINBLOCK      reduce using rule 46 (scripted -> block SUB block SUP block .)
    CHAR            reduce using rule 46 (scripted -> block SUB block SUP block .)
    FRAC            reduce using rule 46 (scripted -> block SUB block SUP block .)
    ROOT            reduce using rule 46 (scripted -> block SUB block SUP block .)
    BINOP           reduce using rule 46 (scripted -> block SUB block SUP block .)
    KBINOP          reduce using rule 46 (scripted -> block SUB block SUP block .)
    BINREL          reduce using rule 46 (scripted -> block SUB block SUP block .)
    KBINREL         reduce using rule 46 (scripted -> block SUB block SUP block .)
    NOT             reduce using rule 46 (scripted -> block SUB block SUP block .)
    FUNC            reduce using rule 46 (scripted -> block SUB block SUP block .)
    LARGEOP         reduce using rule 46 (scripted -> block SUB block SUP block .)
    ARROW           reduce using rule 46 (scripted -> block SUB block SUP block .)
    DELIMITER       reduce using rule 46 (scripted -> block SUB block SUP block .)
    KDELIMITER      reduce using rule 46 (scripted -> block SUB block SUP block .)
    ORD             reduce using rule 46 (scripted -> block SUB block SUP block .)
    $end            reduce using rule 46 (scripted -> block SUB block SUP block .)
    ENDBLOCK        reduce using rule 46 (scripted -> block SUB block SUP block .)


state 102

    (35) scripted -> block SUP char SUB char .

    BEGINBLOCK      reduce using rule 35 (scripted -> block SUP char SUB char .)
    CHAR            reduce using rule 35 (scripted -> block SUP char SUB char .)
    FRAC            reduce using rule 35 (scripted -> block SUP char SUB char .)
    ROOT            reduce using rule 35 (scripted -> block SUP char SUB char .)
    BINOP           reduce using rule 35 (scripted -> block SUP char SUB char .)
    KBINOP          reduce using rule 35 (scripted -> block SUP char SUB char .)
    BINREL          reduce using rule 35 (scripted -> block SUP char SUB char .)
    KBINREL         reduce using rule 35 (scripted -> block SUP char SUB char .)
    NOT             reduce using rule 35 (scripted -> block SUP char SUB char .)
    FUNC            reduce using rule 35 (scripted -> block SUP char SUB char .)
    LARGEOP         reduce using rule 35 (scripted -> block SUP char SUB char .)
    ARROW           reduce using rule 35 (scripted -> block SUP char SUB char .)
    DELIMITER       reduce using rule 35 (scripted -> block SUP char SUB char .)
    KDELIMITER      reduce using rule 35 (scripted -> block SUP char SUB char .)
    ORD             reduce using rule 35 (scripted -> block SUP char SUB char .)
    $end            reduce using rule 35 (scripted -> block SUP char SUB char .)
    ENDBLOCK        reduce using rule 35 (scripted -> block SUP char SUB char .)


state 103

    (36) scripted -> block SUP char SUB block .

    BEGINBLOCK      reduce using rule 36 (scripted -> block SUP char SUB block .)
    CHAR            reduce using rule 36 (scripted -> block SUP char SUB block .)
    FRAC            reduce using rule 36 (scripted -> block SUP char SUB block .)
    ROOT            reduce using rule 36 (scripted -> block SUP char SUB block .)
    BINOP           reduce using rule 36 (scripted -> block SUP char SUB block .)
    KBINOP          reduce using rule 36 (scripted -> block SUP char SUB block .)
    BINREL          reduce using rule 36 (scripted -> block SUP char SUB block .)
    KBINREL         reduce using rule 36 (scripted -> block SUP char SUB block .)
    NOT             reduce using rule 36 (scripted -> block SUP char SUB block .)
    FUNC            reduce using rule 36 (scripted -> block SUP char SUB block .)
    LARGEOP         reduce using rule 36 (scripted -> block SUP char SUB block .)
    ARROW           reduce using rule 36 (scripted -> block SUP char SUB block .)
    DELIMITER       reduce using rule 36 (scripted -> block SUP char SUB block .)
    KDELIMITER      reduce using rule 36 (scripted -> block SUP char SUB block .)
    ORD             reduce using rule 36 (scripted -> block SUP char SUB block .)
    $end            reduce using rule 36 (scripted -> block SUP char SUB block .)
    ENDBLOCK        reduce using rule 36 (scripted -> block SUP char SUB block .)


state 104

    (37) scripted -> block SUP block SUB char .

    BEGINBLOCK      reduce using rule 37 (scripted -> block SUP block SUB char .)
    CHAR            reduce using rule 37 (scripted -> block SUP block SUB char .)
    FRAC            reduce using rule 37 (scripted -> block SUP block SUB char .)
    ROOT            reduce using rule 37 (scripted -> block SUP block SUB char .)
    BINOP           reduce using rule 37 (scripted -> block SUP block SUB char .)
    KBINOP          reduce using rule 37 (scripted -> block SUP block SUB char .)
    BINREL          reduce using rule 37 (scripted -> block SUP block SUB char .)
    KBINREL         reduce using rule 37 (scripted -> block SUP block SUB char .)
    NOT             reduce using rule 37 (scripted -> block SUP block SUB char .)
    FUNC            reduce using rule 37 (scripted -> block SUP block SUB char .)
    LARGEOP         reduce using rule 37 (scripted -> block SUP block SUB char .)
    ARROW           reduce using rule 37 (scripted -> block SUP block SUB char .)
    DELIMITER       reduce using rule 37 (scripted -> block SUP block SUB char .)
    KDELIMITER      reduce using rule 37 (scripted -> block SUP block SUB char .)
    ORD             reduce using rule 37 (scripted -> block SUP block SUB char .)
    $end            reduce using rule 37 (scripted -> block SUP block SUB char .)
    ENDBLOCK        reduce using rule 37 (scripted -> block SUP block SUB char .)


state 105

    (38) scripted -> block SUP block SUB block .

    BEGINBLOCK      reduce using rule 38 (scripted -> block SUP block SUB block .)
    CHAR            reduce using rule 38 (scripted -> block SUP block SUB block .)
    FRAC            reduce using rule 38 (scripted -> block SUP block SUB block .)
    ROOT            reduce using rule 38 (scripted -> block SUP block SUB block .)
    BINOP           reduce using rule 38 (scripted -> block SUP block SUB block .)
    KBINOP          reduce using rule 38 (scripted -> block SUP block SUB block .)
    BINREL          reduce using rule 38 (scripted -> block SUP block SUB block .)
    KBINREL         reduce using rule 38 (scripted -> block SUP block SUB block .)
    NOT             reduce using rule 38 (scripted -> block SUP block SUB block .)
    FUNC            reduce using rule 38 (scripted -> block SUP block SUB block .)
    LARGEOP         reduce using rule 38 (scripted -> block SUP block SUB block .)
    ARROW           reduce using rule 38 (scripted -> block SUP block SUB block .)
    DELIMITER       reduce using rule 38 (scripted -> block SUP block SUB block .)
    KDELIMITER      reduce using rule 38 (scripted -> block SUP block SUB block .)
    ORD             reduce using rule 38 (scripted -> block SUP block SUB block .)
    $end            reduce using rule 38 (scripted -> block SUP block SUB block .)
    ENDBLOCK        reduce using rule 38 (scripted -> block SUP block SUB block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CHAR in state 2 resolved as shift
WARNING: shift/reduce conflict for ORD in state 2 resolved as shift
WARNING: shift/reduce conflict for BEGINBLOCK in state 8 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 8 resolved as shift
WARNING: shift/reduce conflict for FRAC in state 8 resolved as shift
WARNING: shift/reduce conflict for ROOT in state 8 resolved as shift
WARNING: shift/reduce conflict for BINOP in state 8 resolved as shift
WARNING: shift/reduce conflict for KBINOP in state 8 resolved as shift
WARNING: shift/reduce conflict for BINREL in state 8 resolved as shift
WARNING: shift/reduce conflict for KBINREL in state 8 resolved as shift
WARNING: shift/reduce conflict for NOT in state 8 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 8 resolved as shift
WARNING: shift/reduce conflict for LARGEOP in state 8 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 8 resolved as shift
WARNING: shift/reduce conflict for DELIMITER in state 8 resolved as shift
WARNING: shift/reduce conflict for KDELIMITER in state 8 resolved as shift
WARNING: shift/reduce conflict for ORD in state 8 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 35 resolved as shift
WARNING: shift/reduce conflict for ORD in state 35 resolved as shift
WARNING: shift/reduce conflict for BEGINBLOCK in state 42 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 42 resolved as shift
WARNING: shift/reduce conflict for FRAC in state 42 resolved as shift
WARNING: shift/reduce conflict for ROOT in state 42 resolved as shift
WARNING: shift/reduce conflict for BINOP in state 42 resolved as shift
WARNING: shift/reduce conflict for KBINOP in state 42 resolved as shift
WARNING: shift/reduce conflict for BINREL in state 42 resolved as shift
WARNING: shift/reduce conflict for KBINREL in state 42 resolved as shift
WARNING: shift/reduce conflict for NOT in state 42 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 42 resolved as shift
WARNING: shift/reduce conflict for LARGEOP in state 42 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 42 resolved as shift
WARNING: shift/reduce conflict for DELIMITER in state 42 resolved as shift
WARNING: shift/reduce conflict for KDELIMITER in state 42 resolved as shift
WARNING: shift/reduce conflict for ORD in state 42 resolved as shift
WARNING: shift/reduce conflict for BEGINBLOCK in state 43 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 43 resolved as shift
WARNING: shift/reduce conflict for FRAC in state 43 resolved as shift
WARNING: shift/reduce conflict for ROOT in state 43 resolved as shift
WARNING: shift/reduce conflict for BINOP in state 43 resolved as shift
WARNING: shift/reduce conflict for KBINOP in state 43 resolved as shift
WARNING: shift/reduce conflict for BINREL in state 43 resolved as shift
WARNING: shift/reduce conflict for KBINREL in state 43 resolved as shift
WARNING: shift/reduce conflict for NOT in state 43 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 43 resolved as shift
WARNING: shift/reduce conflict for LARGEOP in state 43 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 43 resolved as shift
WARNING: shift/reduce conflict for DELIMITER in state 43 resolved as shift
WARNING: shift/reduce conflict for KDELIMITER in state 43 resolved as shift
WARNING: shift/reduce conflict for ORD in state 43 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 75 resolved as shift
WARNING: shift/reduce conflict for BEGINBLOCK in state 75 resolved as shift
WARNING: shift/reduce conflict for ORD in state 75 resolved as shift
