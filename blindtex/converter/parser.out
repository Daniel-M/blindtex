Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> content
Rule 2     start -> start content
Rule 3     block -> BEGINBLOCK content ENDBLOCK
Rule 4     content -> chars
Rule 5     content -> block
Rule 6     content -> scripted
Rule 7     content -> command
Rule 8     content -> content content
Rule 9     chars -> char
Rule 10    chars -> char chars
Rule 11    char -> CHAR
Rule 12    char -> ord
Rule 13    ord -> ORD
Rule 14    command -> frac
Rule 15    command -> root
Rule 16    command -> binop
Rule 17    command -> binrel
Rule 18    command -> not
Rule 19    command -> function
Rule 20    command -> larop
Rule 21    command -> arrow
Rule 22    command -> delimiter
Rule 23    command -> accent
Rule 24    command -> style
Rule 25    command -> dots
Rule 26    command -> lim
Rule 27    command -> unknown
Rule 28    scripted -> char SUP char
Rule 29    scripted -> char SUP block
Rule 30    scripted -> block SUP char
Rule 31    scripted -> block SUP block
Rule 32    scripted -> char SUB char
Rule 33    scripted -> char SUB block
Rule 34    scripted -> block SUB char
Rule 35    scripted -> block SUB block
Rule 36    scripted -> char SUP char SUB char
Rule 37    scripted -> char SUP char SUB block
Rule 38    scripted -> char SUP block SUB char
Rule 39    scripted -> char SUP block SUB block
Rule 40    scripted -> block SUP char SUB char
Rule 41    scripted -> block SUP char SUB block
Rule 42    scripted -> block SUP block SUB char
Rule 43    scripted -> block SUP block SUB block
Rule 44    scripted -> char SUB char SUP char
Rule 45    scripted -> char SUB char SUP block
Rule 46    scripted -> char SUB block SUP char
Rule 47    scripted -> char SUB block SUP block
Rule 48    scripted -> block SUB char SUP char
Rule 49    scripted -> block SUB char SUP block
Rule 50    scripted -> block SUB block SUP char
Rule 51    scripted -> block SUB block SUP block
Rule 52    frac -> FRAC char char
Rule 53    frac -> FRAC char block
Rule 54    frac -> FRAC block char
Rule 55    frac -> FRAC block block
Rule 56    root -> ROOT char
Rule 57    root -> ROOT block
Rule 58    root -> ROOT KDELIMITER content KDELIMITER char
Rule 59    root -> ROOT KDELIMITER content KDELIMITER block
Rule 60    binop -> BINOP
Rule 61    binop -> KBINOP
Rule 62    binrel -> BINREL
Rule 63    binrel -> KBINREL
Rule 64    not -> NOT
Rule 65    function -> FUNC
Rule 66    larop -> LARGEOP SUB char SUP char
Rule 67    larop -> LARGEOP SUB char SUP block
Rule 68    larop -> LARGEOP SUB block SUP char
Rule 69    larop -> LARGEOP SUB block SUP block
Rule 70    larop -> LARGEOP SUP char SUB char
Rule 71    larop -> LARGEOP SUP char SUB block
Rule 72    larop -> LARGEOP SUP block SUB char
Rule 73    larop -> LARGEOP SUP block SUB block
Rule 74    larop -> LARGEOP
Rule 75    larop -> LARGEOP SUB char
Rule 76    larop -> LARGEOP SUB block
Rule 77    arrow -> ARROW
Rule 78    delimiter -> DELIMITER
Rule 79    delimiter -> KDELIMITER
Rule 80    accent -> ACCENT char
Rule 81    accent -> ACCENT block
Rule 82    style -> STYLE char
Rule 83    style -> STYLE block
Rule 84    dots -> DOTS
Rule 85    lim -> LIM
Rule 86    lim -> LIM SUB char
Rule 87    lim -> LIM SUB block
Rule 88    unknown -> UNKNOWN

Terminals, with rules where they appear

ACCENT               : 80 81
ARROW                : 77
BEGINBLOCK           : 3
BINOP                : 60
BINREL               : 62
CHAR                 : 11
DELIMITER            : 78
DOTS                 : 84
ENDBLOCK             : 3
FRAC                 : 52 53 54 55
FUNC                 : 65
KBINOP               : 61
KBINREL              : 63
KDELIMITER           : 58 58 59 59 79
LARGEOP              : 66 67 68 69 70 71 72 73 74 75 76
LIM                  : 85 86 87
NOT                  : 64
ORD                  : 13
ROOT                 : 56 57 58 59
STYLE                : 82 83
SUB                  : 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 66 67 68 69 70 71 72 73 75 76 86 87
SUP                  : 28 29 30 31 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 66 67 68 69 70 71 72 73
UNKNOWN              : 88
error                : 

Nonterminals, with rules where they appear

accent               : 23
arrow                : 21
binop                : 16
binrel               : 17
block                : 5 29 30 31 31 33 34 35 35 37 38 39 39 40 41 41 42 42 43 43 43 45 46 47 47 48 49 49 50 50 51 51 51 53 54 55 55 57 59 67 68 69 69 71 72 73 73 76 81 83 87
char                 : 9 10 28 28 29 30 32 32 33 34 36 36 36 37 37 38 38 39 40 40 41 42 44 44 44 45 45 46 46 47 48 48 49 50 52 52 53 54 56 58 66 66 67 68 70 70 71 72 75 80 82 86
chars                : 4 10
command              : 7
content              : 1 2 3 8 8 58 59
delimiter            : 22
dots                 : 25
frac                 : 14
function             : 19
larop                : 20
lim                  : 26
not                  : 18
ord                  : 12
root                 : 15
scripted             : 6
start                : 2 0
style                : 24
unknown              : 27

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . content
    (2) start -> . start content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (28) scripted -> . char SUP char
    (29) scripted -> . char SUP block
    (30) scripted -> . block SUP char
    (31) scripted -> . block SUP block
    (32) scripted -> . char SUB char
    (33) scripted -> . char SUB block
    (34) scripted -> . block SUB char
    (35) scripted -> . block SUB block
    (36) scripted -> . char SUP char SUB char
    (37) scripted -> . char SUP char SUB block
    (38) scripted -> . char SUP block SUB char
    (39) scripted -> . char SUP block SUB block
    (40) scripted -> . block SUP char SUB char
    (41) scripted -> . block SUP char SUB block
    (42) scripted -> . block SUP block SUB char
    (43) scripted -> . block SUP block SUB block
    (44) scripted -> . char SUB char SUP char
    (45) scripted -> . char SUB char SUP block
    (46) scripted -> . char SUB block SUP char
    (47) scripted -> . char SUB block SUP block
    (48) scripted -> . block SUB char SUP char
    (49) scripted -> . block SUB char SUP block
    (50) scripted -> . block SUB block SUP char
    (51) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (23) command -> . accent
    (24) command -> . style
    (25) command -> . dots
    (26) command -> . lim
    (27) command -> . unknown
    (11) char -> . CHAR
    (12) char -> . ord
    (52) frac -> . FRAC char char
    (53) frac -> . FRAC char block
    (54) frac -> . FRAC block char
    (55) frac -> . FRAC block block
    (56) root -> . ROOT char
    (57) root -> . ROOT block
    (58) root -> . ROOT KDELIMITER content KDELIMITER char
    (59) root -> . ROOT KDELIMITER content KDELIMITER block
    (60) binop -> . BINOP
    (61) binop -> . KBINOP
    (62) binrel -> . BINREL
    (63) binrel -> . KBINREL
    (64) not -> . NOT
    (65) function -> . FUNC
    (66) larop -> . LARGEOP SUB char SUP char
    (67) larop -> . LARGEOP SUB char SUP block
    (68) larop -> . LARGEOP SUB block SUP char
    (69) larop -> . LARGEOP SUB block SUP block
    (70) larop -> . LARGEOP SUP char SUB char
    (71) larop -> . LARGEOP SUP char SUB block
    (72) larop -> . LARGEOP SUP block SUB char
    (73) larop -> . LARGEOP SUP block SUB block
    (74) larop -> . LARGEOP
    (75) larop -> . LARGEOP SUB char
    (76) larop -> . LARGEOP SUB block
    (77) arrow -> . ARROW
    (78) delimiter -> . DELIMITER
    (79) delimiter -> . KDELIMITER
    (80) accent -> . ACCENT char
    (81) accent -> . ACCENT block
    (82) style -> . STYLE char
    (83) style -> . STYLE block
    (84) dots -> . DOTS
    (85) lim -> . LIM
    (86) lim -> . LIM SUB char
    (87) lim -> . LIM SUB block
    (88) unknown -> . UNKNOWN
    (13) ord -> . ORD

    BEGINBLOCK      shift and go to state 8
    CHAR            shift and go to state 32
    FRAC            shift and go to state 7
    ROOT            shift and go to state 17
    BINOP           shift and go to state 33
    KBINOP          shift and go to state 29
    BINREL          shift and go to state 22
    KBINREL         shift and go to state 34
    NOT             shift and go to state 40
    FUNC            shift and go to state 27
    LARGEOP         shift and go to state 12
    ARROW           shift and go to state 3
    DELIMITER       shift and go to state 26
    KDELIMITER      shift and go to state 9
    ACCENT          shift and go to state 2
    STYLE           shift and go to state 20
    DOTS            shift and go to state 5
    LIM             shift and go to state 16
    UNKNOWN         shift and go to state 25
    ORD             shift and go to state 41

    dots                           shift and go to state 1
    char                           shift and go to state 4
    binrel                         shift and go to state 6
    style                          shift and go to state 10
    lim                            shift and go to state 11
    accent                         shift and go to state 13
    content                        shift and go to state 14
    start                          shift and go to state 15
    scripted                       shift and go to state 18
    function                       shift and go to state 19
    frac                           shift and go to state 21
    binop                          shift and go to state 23
    chars                          shift and go to state 24
    not                            shift and go to state 28
    ord                            shift and go to state 30
    larop                          shift and go to state 31
    delimiter                      shift and go to state 35
    command                        shift and go to state 36
    arrow                          shift and go to state 38
    unknown                        shift and go to state 39
    root                           shift and go to state 42
    block                          shift and go to state 37

state 1

    (25) command -> dots .

    KDELIMITER      reduce using rule 25 (command -> dots .)
    BEGINBLOCK      reduce using rule 25 (command -> dots .)
    CHAR            reduce using rule 25 (command -> dots .)
    FRAC            reduce using rule 25 (command -> dots .)
    ROOT            reduce using rule 25 (command -> dots .)
    BINOP           reduce using rule 25 (command -> dots .)
    KBINOP          reduce using rule 25 (command -> dots .)
    BINREL          reduce using rule 25 (command -> dots .)
    KBINREL         reduce using rule 25 (command -> dots .)
    NOT             reduce using rule 25 (command -> dots .)
    FUNC            reduce using rule 25 (command -> dots .)
    LARGEOP         reduce using rule 25 (command -> dots .)
    ARROW           reduce using rule 25 (command -> dots .)
    DELIMITER       reduce using rule 25 (command -> dots .)
    ACCENT          reduce using rule 25 (command -> dots .)
    STYLE           reduce using rule 25 (command -> dots .)
    DOTS            reduce using rule 25 (command -> dots .)
    LIM             reduce using rule 25 (command -> dots .)
    UNKNOWN         reduce using rule 25 (command -> dots .)
    ORD             reduce using rule 25 (command -> dots .)
    $end            reduce using rule 25 (command -> dots .)
    ENDBLOCK        reduce using rule 25 (command -> dots .)


state 2

    (80) accent -> ACCENT . char
    (81) accent -> ACCENT . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 43
    ord                            shift and go to state 30
    block                          shift and go to state 44

state 3

    (77) arrow -> ARROW .

    BEGINBLOCK      reduce using rule 77 (arrow -> ARROW .)
    CHAR            reduce using rule 77 (arrow -> ARROW .)
    FRAC            reduce using rule 77 (arrow -> ARROW .)
    ROOT            reduce using rule 77 (arrow -> ARROW .)
    BINOP           reduce using rule 77 (arrow -> ARROW .)
    KBINOP          reduce using rule 77 (arrow -> ARROW .)
    BINREL          reduce using rule 77 (arrow -> ARROW .)
    KBINREL         reduce using rule 77 (arrow -> ARROW .)
    NOT             reduce using rule 77 (arrow -> ARROW .)
    FUNC            reduce using rule 77 (arrow -> ARROW .)
    LARGEOP         reduce using rule 77 (arrow -> ARROW .)
    ARROW           reduce using rule 77 (arrow -> ARROW .)
    DELIMITER       reduce using rule 77 (arrow -> ARROW .)
    KDELIMITER      reduce using rule 77 (arrow -> ARROW .)
    ACCENT          reduce using rule 77 (arrow -> ARROW .)
    STYLE           reduce using rule 77 (arrow -> ARROW .)
    DOTS            reduce using rule 77 (arrow -> ARROW .)
    LIM             reduce using rule 77 (arrow -> ARROW .)
    UNKNOWN         reduce using rule 77 (arrow -> ARROW .)
    ORD             reduce using rule 77 (arrow -> ARROW .)
    $end            reduce using rule 77 (arrow -> ARROW .)
    ENDBLOCK        reduce using rule 77 (arrow -> ARROW .)


state 4

    (9) chars -> char .
    (10) chars -> char . chars
    (28) scripted -> char . SUP char
    (29) scripted -> char . SUP block
    (32) scripted -> char . SUB char
    (33) scripted -> char . SUB block
    (36) scripted -> char . SUP char SUB char
    (37) scripted -> char . SUP char SUB block
    (38) scripted -> char . SUP block SUB char
    (39) scripted -> char . SUP block SUB block
    (44) scripted -> char . SUB char SUP char
    (45) scripted -> char . SUB char SUP block
    (46) scripted -> char . SUB block SUP char
    (47) scripted -> char . SUB block SUP block
    (9) chars -> . char
    (10) chars -> . char chars
    (11) char -> . CHAR
    (12) char -> . ord
    (13) ord -> . ORD

  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    KDELIMITER      reduce using rule 9 (chars -> char .)
    BEGINBLOCK      reduce using rule 9 (chars -> char .)
    FRAC            reduce using rule 9 (chars -> char .)
    ROOT            reduce using rule 9 (chars -> char .)
    BINOP           reduce using rule 9 (chars -> char .)
    KBINOP          reduce using rule 9 (chars -> char .)
    BINREL          reduce using rule 9 (chars -> char .)
    KBINREL         reduce using rule 9 (chars -> char .)
    NOT             reduce using rule 9 (chars -> char .)
    FUNC            reduce using rule 9 (chars -> char .)
    LARGEOP         reduce using rule 9 (chars -> char .)
    ARROW           reduce using rule 9 (chars -> char .)
    DELIMITER       reduce using rule 9 (chars -> char .)
    ACCENT          reduce using rule 9 (chars -> char .)
    STYLE           reduce using rule 9 (chars -> char .)
    DOTS            reduce using rule 9 (chars -> char .)
    LIM             reduce using rule 9 (chars -> char .)
    UNKNOWN         reduce using rule 9 (chars -> char .)
    $end            reduce using rule 9 (chars -> char .)
    ENDBLOCK        reduce using rule 9 (chars -> char .)
    SUP             shift and go to state 48
    SUB             shift and go to state 45
    CHAR            shift and go to state 32
    ORD             shift and go to state 41

  ! CHAR            [ reduce using rule 9 (chars -> char .) ]
  ! ORD             [ reduce using rule 9 (chars -> char .) ]

    char                           shift and go to state 47
    chars                          shift and go to state 46
    ord                            shift and go to state 30

state 5

    (84) dots -> DOTS .

    KDELIMITER      reduce using rule 84 (dots -> DOTS .)
    BEGINBLOCK      reduce using rule 84 (dots -> DOTS .)
    CHAR            reduce using rule 84 (dots -> DOTS .)
    FRAC            reduce using rule 84 (dots -> DOTS .)
    ROOT            reduce using rule 84 (dots -> DOTS .)
    BINOP           reduce using rule 84 (dots -> DOTS .)
    KBINOP          reduce using rule 84 (dots -> DOTS .)
    BINREL          reduce using rule 84 (dots -> DOTS .)
    KBINREL         reduce using rule 84 (dots -> DOTS .)
    NOT             reduce using rule 84 (dots -> DOTS .)
    FUNC            reduce using rule 84 (dots -> DOTS .)
    LARGEOP         reduce using rule 84 (dots -> DOTS .)
    ARROW           reduce using rule 84 (dots -> DOTS .)
    DELIMITER       reduce using rule 84 (dots -> DOTS .)
    ACCENT          reduce using rule 84 (dots -> DOTS .)
    STYLE           reduce using rule 84 (dots -> DOTS .)
    DOTS            reduce using rule 84 (dots -> DOTS .)
    LIM             reduce using rule 84 (dots -> DOTS .)
    UNKNOWN         reduce using rule 84 (dots -> DOTS .)
    ORD             reduce using rule 84 (dots -> DOTS .)
    $end            reduce using rule 84 (dots -> DOTS .)
    ENDBLOCK        reduce using rule 84 (dots -> DOTS .)


state 6

    (17) command -> binrel .

    KDELIMITER      reduce using rule 17 (command -> binrel .)
    BEGINBLOCK      reduce using rule 17 (command -> binrel .)
    CHAR            reduce using rule 17 (command -> binrel .)
    FRAC            reduce using rule 17 (command -> binrel .)
    ROOT            reduce using rule 17 (command -> binrel .)
    BINOP           reduce using rule 17 (command -> binrel .)
    KBINOP          reduce using rule 17 (command -> binrel .)
    BINREL          reduce using rule 17 (command -> binrel .)
    KBINREL         reduce using rule 17 (command -> binrel .)
    NOT             reduce using rule 17 (command -> binrel .)
    FUNC            reduce using rule 17 (command -> binrel .)
    LARGEOP         reduce using rule 17 (command -> binrel .)
    ARROW           reduce using rule 17 (command -> binrel .)
    DELIMITER       reduce using rule 17 (command -> binrel .)
    ACCENT          reduce using rule 17 (command -> binrel .)
    STYLE           reduce using rule 17 (command -> binrel .)
    DOTS            reduce using rule 17 (command -> binrel .)
    LIM             reduce using rule 17 (command -> binrel .)
    UNKNOWN         reduce using rule 17 (command -> binrel .)
    ORD             reduce using rule 17 (command -> binrel .)
    $end            reduce using rule 17 (command -> binrel .)
    ENDBLOCK        reduce using rule 17 (command -> binrel .)


state 7

    (52) frac -> FRAC . char char
    (53) frac -> FRAC . char block
    (54) frac -> FRAC . block char
    (55) frac -> FRAC . block block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 49
    ord                            shift and go to state 30
    block                          shift and go to state 50

state 8

    (3) block -> BEGINBLOCK . content ENDBLOCK
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (28) scripted -> . char SUP char
    (29) scripted -> . char SUP block
    (30) scripted -> . block SUP char
    (31) scripted -> . block SUP block
    (32) scripted -> . char SUB char
    (33) scripted -> . char SUB block
    (34) scripted -> . block SUB char
    (35) scripted -> . block SUB block
    (36) scripted -> . char SUP char SUB char
    (37) scripted -> . char SUP char SUB block
    (38) scripted -> . char SUP block SUB char
    (39) scripted -> . char SUP block SUB block
    (40) scripted -> . block SUP char SUB char
    (41) scripted -> . block SUP char SUB block
    (42) scripted -> . block SUP block SUB char
    (43) scripted -> . block SUP block SUB block
    (44) scripted -> . char SUB char SUP char
    (45) scripted -> . char SUB char SUP block
    (46) scripted -> . char SUB block SUP char
    (47) scripted -> . char SUB block SUP block
    (48) scripted -> . block SUB char SUP char
    (49) scripted -> . block SUB char SUP block
    (50) scripted -> . block SUB block SUP char
    (51) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (23) command -> . accent
    (24) command -> . style
    (25) command -> . dots
    (26) command -> . lim
    (27) command -> . unknown
    (11) char -> . CHAR
    (12) char -> . ord
    (52) frac -> . FRAC char char
    (53) frac -> . FRAC char block
    (54) frac -> . FRAC block char
    (55) frac -> . FRAC block block
    (56) root -> . ROOT char
    (57) root -> . ROOT block
    (58) root -> . ROOT KDELIMITER content KDELIMITER char
    (59) root -> . ROOT KDELIMITER content KDELIMITER block
    (60) binop -> . BINOP
    (61) binop -> . KBINOP
    (62) binrel -> . BINREL
    (63) binrel -> . KBINREL
    (64) not -> . NOT
    (65) function -> . FUNC
    (66) larop -> . LARGEOP SUB char SUP char
    (67) larop -> . LARGEOP SUB char SUP block
    (68) larop -> . LARGEOP SUB block SUP char
    (69) larop -> . LARGEOP SUB block SUP block
    (70) larop -> . LARGEOP SUP char SUB char
    (71) larop -> . LARGEOP SUP char SUB block
    (72) larop -> . LARGEOP SUP block SUB char
    (73) larop -> . LARGEOP SUP block SUB block
    (74) larop -> . LARGEOP
    (75) larop -> . LARGEOP SUB char
    (76) larop -> . LARGEOP SUB block
    (77) arrow -> . ARROW
    (78) delimiter -> . DELIMITER
    (79) delimiter -> . KDELIMITER
    (80) accent -> . ACCENT char
    (81) accent -> . ACCENT block
    (82) style -> . STYLE char
    (83) style -> . STYLE block
    (84) dots -> . DOTS
    (85) lim -> . LIM
    (86) lim -> . LIM SUB char
    (87) lim -> . LIM SUB block
    (88) unknown -> . UNKNOWN
    (13) ord -> . ORD

    BEGINBLOCK      shift and go to state 8
    CHAR            shift and go to state 32
    FRAC            shift and go to state 7
    ROOT            shift and go to state 17
    BINOP           shift and go to state 33
    KBINOP          shift and go to state 29
    BINREL          shift and go to state 22
    KBINREL         shift and go to state 34
    NOT             shift and go to state 40
    FUNC            shift and go to state 27
    LARGEOP         shift and go to state 12
    ARROW           shift and go to state 3
    DELIMITER       shift and go to state 26
    KDELIMITER      shift and go to state 9
    ACCENT          shift and go to state 2
    STYLE           shift and go to state 20
    DOTS            shift and go to state 5
    LIM             shift and go to state 16
    UNKNOWN         shift and go to state 25
    ORD             shift and go to state 41

    function                       shift and go to state 19
    char                           shift and go to state 4
    style                          shift and go to state 10
    frac                           shift and go to state 21
    arrow                          shift and go to state 38
    binop                          shift and go to state 23
    lim                            shift and go to state 11
    chars                          shift and go to state 24
    accent                         shift and go to state 13
    dots                           shift and go to state 1
    content                        shift and go to state 51
    delimiter                      shift and go to state 35
    command                        shift and go to state 36
    block                          shift and go to state 37
    binrel                         shift and go to state 6
    unknown                        shift and go to state 39
    not                            shift and go to state 28
    ord                            shift and go to state 30
    root                           shift and go to state 42
    larop                          shift and go to state 31
    scripted                       shift and go to state 18

state 9

    (79) delimiter -> KDELIMITER .

    ENDBLOCK        reduce using rule 79 (delimiter -> KDELIMITER .)
    BEGINBLOCK      reduce using rule 79 (delimiter -> KDELIMITER .)
    CHAR            reduce using rule 79 (delimiter -> KDELIMITER .)
    FRAC            reduce using rule 79 (delimiter -> KDELIMITER .)
    ROOT            reduce using rule 79 (delimiter -> KDELIMITER .)
    BINOP           reduce using rule 79 (delimiter -> KDELIMITER .)
    KBINOP          reduce using rule 79 (delimiter -> KDELIMITER .)
    BINREL          reduce using rule 79 (delimiter -> KDELIMITER .)
    KBINREL         reduce using rule 79 (delimiter -> KDELIMITER .)
    NOT             reduce using rule 79 (delimiter -> KDELIMITER .)
    FUNC            reduce using rule 79 (delimiter -> KDELIMITER .)
    LARGEOP         reduce using rule 79 (delimiter -> KDELIMITER .)
    ARROW           reduce using rule 79 (delimiter -> KDELIMITER .)
    DELIMITER       reduce using rule 79 (delimiter -> KDELIMITER .)
    KDELIMITER      reduce using rule 79 (delimiter -> KDELIMITER .)
    ACCENT          reduce using rule 79 (delimiter -> KDELIMITER .)
    STYLE           reduce using rule 79 (delimiter -> KDELIMITER .)
    DOTS            reduce using rule 79 (delimiter -> KDELIMITER .)
    LIM             reduce using rule 79 (delimiter -> KDELIMITER .)
    UNKNOWN         reduce using rule 79 (delimiter -> KDELIMITER .)
    ORD             reduce using rule 79 (delimiter -> KDELIMITER .)
    $end            reduce using rule 79 (delimiter -> KDELIMITER .)


state 10

    (24) command -> style .

    KDELIMITER      reduce using rule 24 (command -> style .)
    BEGINBLOCK      reduce using rule 24 (command -> style .)
    CHAR            reduce using rule 24 (command -> style .)
    FRAC            reduce using rule 24 (command -> style .)
    ROOT            reduce using rule 24 (command -> style .)
    BINOP           reduce using rule 24 (command -> style .)
    KBINOP          reduce using rule 24 (command -> style .)
    BINREL          reduce using rule 24 (command -> style .)
    KBINREL         reduce using rule 24 (command -> style .)
    NOT             reduce using rule 24 (command -> style .)
    FUNC            reduce using rule 24 (command -> style .)
    LARGEOP         reduce using rule 24 (command -> style .)
    ARROW           reduce using rule 24 (command -> style .)
    DELIMITER       reduce using rule 24 (command -> style .)
    ACCENT          reduce using rule 24 (command -> style .)
    STYLE           reduce using rule 24 (command -> style .)
    DOTS            reduce using rule 24 (command -> style .)
    LIM             reduce using rule 24 (command -> style .)
    UNKNOWN         reduce using rule 24 (command -> style .)
    ORD             reduce using rule 24 (command -> style .)
    $end            reduce using rule 24 (command -> style .)
    ENDBLOCK        reduce using rule 24 (command -> style .)


state 11

    (26) command -> lim .

    KDELIMITER      reduce using rule 26 (command -> lim .)
    BEGINBLOCK      reduce using rule 26 (command -> lim .)
    CHAR            reduce using rule 26 (command -> lim .)
    FRAC            reduce using rule 26 (command -> lim .)
    ROOT            reduce using rule 26 (command -> lim .)
    BINOP           reduce using rule 26 (command -> lim .)
    KBINOP          reduce using rule 26 (command -> lim .)
    BINREL          reduce using rule 26 (command -> lim .)
    KBINREL         reduce using rule 26 (command -> lim .)
    NOT             reduce using rule 26 (command -> lim .)
    FUNC            reduce using rule 26 (command -> lim .)
    LARGEOP         reduce using rule 26 (command -> lim .)
    ARROW           reduce using rule 26 (command -> lim .)
    DELIMITER       reduce using rule 26 (command -> lim .)
    ACCENT          reduce using rule 26 (command -> lim .)
    STYLE           reduce using rule 26 (command -> lim .)
    DOTS            reduce using rule 26 (command -> lim .)
    LIM             reduce using rule 26 (command -> lim .)
    UNKNOWN         reduce using rule 26 (command -> lim .)
    ORD             reduce using rule 26 (command -> lim .)
    $end            reduce using rule 26 (command -> lim .)
    ENDBLOCK        reduce using rule 26 (command -> lim .)


state 12

    (66) larop -> LARGEOP . SUB char SUP char
    (67) larop -> LARGEOP . SUB char SUP block
    (68) larop -> LARGEOP . SUB block SUP char
    (69) larop -> LARGEOP . SUB block SUP block
    (70) larop -> LARGEOP . SUP char SUB char
    (71) larop -> LARGEOP . SUP char SUB block
    (72) larop -> LARGEOP . SUP block SUB char
    (73) larop -> LARGEOP . SUP block SUB block
    (74) larop -> LARGEOP .
    (75) larop -> LARGEOP . SUB char
    (76) larop -> LARGEOP . SUB block

    SUB             shift and go to state 53
    SUP             shift and go to state 52
    BEGINBLOCK      reduce using rule 74 (larop -> LARGEOP .)
    CHAR            reduce using rule 74 (larop -> LARGEOP .)
    FRAC            reduce using rule 74 (larop -> LARGEOP .)
    ROOT            reduce using rule 74 (larop -> LARGEOP .)
    BINOP           reduce using rule 74 (larop -> LARGEOP .)
    KBINOP          reduce using rule 74 (larop -> LARGEOP .)
    BINREL          reduce using rule 74 (larop -> LARGEOP .)
    KBINREL         reduce using rule 74 (larop -> LARGEOP .)
    NOT             reduce using rule 74 (larop -> LARGEOP .)
    FUNC            reduce using rule 74 (larop -> LARGEOP .)
    LARGEOP         reduce using rule 74 (larop -> LARGEOP .)
    ARROW           reduce using rule 74 (larop -> LARGEOP .)
    DELIMITER       reduce using rule 74 (larop -> LARGEOP .)
    KDELIMITER      reduce using rule 74 (larop -> LARGEOP .)
    ACCENT          reduce using rule 74 (larop -> LARGEOP .)
    STYLE           reduce using rule 74 (larop -> LARGEOP .)
    DOTS            reduce using rule 74 (larop -> LARGEOP .)
    LIM             reduce using rule 74 (larop -> LARGEOP .)
    UNKNOWN         reduce using rule 74 (larop -> LARGEOP .)
    ORD             reduce using rule 74 (larop -> LARGEOP .)
    $end            reduce using rule 74 (larop -> LARGEOP .)
    ENDBLOCK        reduce using rule 74 (larop -> LARGEOP .)


state 13

    (23) command -> accent .

    KDELIMITER      reduce using rule 23 (command -> accent .)
    BEGINBLOCK      reduce using rule 23 (command -> accent .)
    CHAR            reduce using rule 23 (command -> accent .)
    FRAC            reduce using rule 23 (command -> accent .)
    ROOT            reduce using rule 23 (command -> accent .)
    BINOP           reduce using rule 23 (command -> accent .)
    KBINOP          reduce using rule 23 (command -> accent .)
    BINREL          reduce using rule 23 (command -> accent .)
    KBINREL         reduce using rule 23 (command -> accent .)
    NOT             reduce using rule 23 (command -> accent .)
    FUNC            reduce using rule 23 (command -> accent .)
    LARGEOP         reduce using rule 23 (command -> accent .)
    ARROW           reduce using rule 23 (command -> accent .)
    DELIMITER       reduce using rule 23 (command -> accent .)
    ACCENT          reduce using rule 23 (command -> accent .)
    STYLE           reduce using rule 23 (command -> accent .)
    DOTS            reduce using rule 23 (command -> accent .)
    LIM             reduce using rule 23 (command -> accent .)
    UNKNOWN         reduce using rule 23 (command -> accent .)
    ORD             reduce using rule 23 (command -> accent .)
    $end            reduce using rule 23 (command -> accent .)
    ENDBLOCK        reduce using rule 23 (command -> accent .)


state 14

    (1) start -> content .
    (8) content -> content . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (28) scripted -> . char SUP char
    (29) scripted -> . char SUP block
    (30) scripted -> . block SUP char
    (31) scripted -> . block SUP block
    (32) scripted -> . char SUB char
    (33) scripted -> . char SUB block
    (34) scripted -> . block SUB char
    (35) scripted -> . block SUB block
    (36) scripted -> . char SUP char SUB char
    (37) scripted -> . char SUP char SUB block
    (38) scripted -> . char SUP block SUB char
    (39) scripted -> . char SUP block SUB block
    (40) scripted -> . block SUP char SUB char
    (41) scripted -> . block SUP char SUB block
    (42) scripted -> . block SUP block SUB char
    (43) scripted -> . block SUP block SUB block
    (44) scripted -> . char SUB char SUP char
    (45) scripted -> . char SUB char SUP block
    (46) scripted -> . char SUB block SUP char
    (47) scripted -> . char SUB block SUP block
    (48) scripted -> . block SUB char SUP char
    (49) scripted -> . block SUB char SUP block
    (50) scripted -> . block SUB block SUP char
    (51) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (23) command -> . accent
    (24) command -> . style
    (25) command -> . dots
    (26) command -> . lim
    (27) command -> . unknown
    (11) char -> . CHAR
    (12) char -> . ord
    (52) frac -> . FRAC char char
    (53) frac -> . FRAC char block
    (54) frac -> . FRAC block char
    (55) frac -> . FRAC block block
    (56) root -> . ROOT char
    (57) root -> . ROOT block
    (58) root -> . ROOT KDELIMITER content KDELIMITER char
    (59) root -> . ROOT KDELIMITER content KDELIMITER block
    (60) binop -> . BINOP
    (61) binop -> . KBINOP
    (62) binrel -> . BINREL
    (63) binrel -> . KBINREL
    (64) not -> . NOT
    (65) function -> . FUNC
    (66) larop -> . LARGEOP SUB char SUP char
    (67) larop -> . LARGEOP SUB char SUP block
    (68) larop -> . LARGEOP SUB block SUP char
    (69) larop -> . LARGEOP SUB block SUP block
    (70) larop -> . LARGEOP SUP char SUB char
    (71) larop -> . LARGEOP SUP char SUB block
    (72) larop -> . LARGEOP SUP block SUB char
    (73) larop -> . LARGEOP SUP block SUB block
    (74) larop -> . LARGEOP
    (75) larop -> . LARGEOP SUB char
    (76) larop -> . LARGEOP SUB block
    (77) arrow -> . ARROW
    (78) delimiter -> . DELIMITER
    (79) delimiter -> . KDELIMITER
    (80) accent -> . ACCENT char
    (81) accent -> . ACCENT block
    (82) style -> . STYLE char
    (83) style -> . STYLE block
    (84) dots -> . DOTS
    (85) lim -> . LIM
    (86) lim -> . LIM SUB char
    (87) lim -> . LIM SUB block
    (88) unknown -> . UNKNOWN
    (13) ord -> . ORD

  ! shift/reduce conflict for BEGINBLOCK resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FRAC resolved as shift
  ! shift/reduce conflict for ROOT resolved as shift
  ! shift/reduce conflict for BINOP resolved as shift
  ! shift/reduce conflict for KBINOP resolved as shift
  ! shift/reduce conflict for BINREL resolved as shift
  ! shift/reduce conflict for KBINREL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for LARGEOP resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for DELIMITER resolved as shift
  ! shift/reduce conflict for KDELIMITER resolved as shift
  ! shift/reduce conflict for ACCENT resolved as shift
  ! shift/reduce conflict for STYLE resolved as shift
  ! shift/reduce conflict for DOTS resolved as shift
  ! shift/reduce conflict for LIM resolved as shift
  ! shift/reduce conflict for UNKNOWN resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    $end            reduce using rule 1 (start -> content .)
    BEGINBLOCK      shift and go to state 8
    CHAR            shift and go to state 32
    FRAC            shift and go to state 7
    ROOT            shift and go to state 17
    BINOP           shift and go to state 33
    KBINOP          shift and go to state 29
    BINREL          shift and go to state 22
    KBINREL         shift and go to state 34
    NOT             shift and go to state 40
    FUNC            shift and go to state 27
    LARGEOP         shift and go to state 12
    ARROW           shift and go to state 3
    DELIMITER       shift and go to state 26
    KDELIMITER      shift and go to state 9
    ACCENT          shift and go to state 2
    STYLE           shift and go to state 20
    DOTS            shift and go to state 5
    LIM             shift and go to state 16
    UNKNOWN         shift and go to state 25
    ORD             shift and go to state 41

  ! BEGINBLOCK      [ reduce using rule 1 (start -> content .) ]
  ! CHAR            [ reduce using rule 1 (start -> content .) ]
  ! FRAC            [ reduce using rule 1 (start -> content .) ]
  ! ROOT            [ reduce using rule 1 (start -> content .) ]
  ! BINOP           [ reduce using rule 1 (start -> content .) ]
  ! KBINOP          [ reduce using rule 1 (start -> content .) ]
  ! BINREL          [ reduce using rule 1 (start -> content .) ]
  ! KBINREL         [ reduce using rule 1 (start -> content .) ]
  ! NOT             [ reduce using rule 1 (start -> content .) ]
  ! FUNC            [ reduce using rule 1 (start -> content .) ]
  ! LARGEOP         [ reduce using rule 1 (start -> content .) ]
  ! ARROW           [ reduce using rule 1 (start -> content .) ]
  ! DELIMITER       [ reduce using rule 1 (start -> content .) ]
  ! KDELIMITER      [ reduce using rule 1 (start -> content .) ]
  ! ACCENT          [ reduce using rule 1 (start -> content .) ]
  ! STYLE           [ reduce using rule 1 (start -> content .) ]
  ! DOTS            [ reduce using rule 1 (start -> content .) ]
  ! LIM             [ reduce using rule 1 (start -> content .) ]
  ! UNKNOWN         [ reduce using rule 1 (start -> content .) ]
  ! ORD             [ reduce using rule 1 (start -> content .) ]

    function                       shift and go to state 19
    char                           shift and go to state 4
    style                          shift and go to state 10
    frac                           shift and go to state 21
    arrow                          shift and go to state 38
    binop                          shift and go to state 23
    lim                            shift and go to state 11
    chars                          shift and go to state 24
    accent                         shift and go to state 13
    dots                           shift and go to state 1
    content                        shift and go to state 54
    delimiter                      shift and go to state 35
    command                        shift and go to state 36
    block                          shift and go to state 37
    binrel                         shift and go to state 6
    unknown                        shift and go to state 39
    not                            shift and go to state 28
    ord                            shift and go to state 30
    root                           shift and go to state 42
    larop                          shift and go to state 31
    scripted                       shift and go to state 18

state 15

    (0) S' -> start .
    (2) start -> start . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (28) scripted -> . char SUP char
    (29) scripted -> . char SUP block
    (30) scripted -> . block SUP char
    (31) scripted -> . block SUP block
    (32) scripted -> . char SUB char
    (33) scripted -> . char SUB block
    (34) scripted -> . block SUB char
    (35) scripted -> . block SUB block
    (36) scripted -> . char SUP char SUB char
    (37) scripted -> . char SUP char SUB block
    (38) scripted -> . char SUP block SUB char
    (39) scripted -> . char SUP block SUB block
    (40) scripted -> . block SUP char SUB char
    (41) scripted -> . block SUP char SUB block
    (42) scripted -> . block SUP block SUB char
    (43) scripted -> . block SUP block SUB block
    (44) scripted -> . char SUB char SUP char
    (45) scripted -> . char SUB char SUP block
    (46) scripted -> . char SUB block SUP char
    (47) scripted -> . char SUB block SUP block
    (48) scripted -> . block SUB char SUP char
    (49) scripted -> . block SUB char SUP block
    (50) scripted -> . block SUB block SUP char
    (51) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (23) command -> . accent
    (24) command -> . style
    (25) command -> . dots
    (26) command -> . lim
    (27) command -> . unknown
    (11) char -> . CHAR
    (12) char -> . ord
    (52) frac -> . FRAC char char
    (53) frac -> . FRAC char block
    (54) frac -> . FRAC block char
    (55) frac -> . FRAC block block
    (56) root -> . ROOT char
    (57) root -> . ROOT block
    (58) root -> . ROOT KDELIMITER content KDELIMITER char
    (59) root -> . ROOT KDELIMITER content KDELIMITER block
    (60) binop -> . BINOP
    (61) binop -> . KBINOP
    (62) binrel -> . BINREL
    (63) binrel -> . KBINREL
    (64) not -> . NOT
    (65) function -> . FUNC
    (66) larop -> . LARGEOP SUB char SUP char
    (67) larop -> . LARGEOP SUB char SUP block
    (68) larop -> . LARGEOP SUB block SUP char
    (69) larop -> . LARGEOP SUB block SUP block
    (70) larop -> . LARGEOP SUP char SUB char
    (71) larop -> . LARGEOP SUP char SUB block
    (72) larop -> . LARGEOP SUP block SUB char
    (73) larop -> . LARGEOP SUP block SUB block
    (74) larop -> . LARGEOP
    (75) larop -> . LARGEOP SUB char
    (76) larop -> . LARGEOP SUB block
    (77) arrow -> . ARROW
    (78) delimiter -> . DELIMITER
    (79) delimiter -> . KDELIMITER
    (80) accent -> . ACCENT char
    (81) accent -> . ACCENT block
    (82) style -> . STYLE char
    (83) style -> . STYLE block
    (84) dots -> . DOTS
    (85) lim -> . LIM
    (86) lim -> . LIM SUB char
    (87) lim -> . LIM SUB block
    (88) unknown -> . UNKNOWN
    (13) ord -> . ORD

    BEGINBLOCK      shift and go to state 8
    CHAR            shift and go to state 32
    FRAC            shift and go to state 7
    ROOT            shift and go to state 17
    BINOP           shift and go to state 33
    KBINOP          shift and go to state 29
    BINREL          shift and go to state 22
    KBINREL         shift and go to state 34
    NOT             shift and go to state 40
    FUNC            shift and go to state 27
    LARGEOP         shift and go to state 12
    ARROW           shift and go to state 3
    DELIMITER       shift and go to state 26
    KDELIMITER      shift and go to state 9
    ACCENT          shift and go to state 2
    STYLE           shift and go to state 20
    DOTS            shift and go to state 5
    LIM             shift and go to state 16
    UNKNOWN         shift and go to state 25
    ORD             shift and go to state 41

    dots                           shift and go to state 1
    char                           shift and go to state 4
    binrel                         shift and go to state 6
    style                          shift and go to state 10
    lim                            shift and go to state 11
    accent                         shift and go to state 13
    content                        shift and go to state 55
    scripted                       shift and go to state 18
    function                       shift and go to state 19
    frac                           shift and go to state 21
    binop                          shift and go to state 23
    chars                          shift and go to state 24
    not                            shift and go to state 28
    ord                            shift and go to state 30
    larop                          shift and go to state 31
    delimiter                      shift and go to state 35
    command                        shift and go to state 36
    arrow                          shift and go to state 38
    unknown                        shift and go to state 39
    root                           shift and go to state 42
    block                          shift and go to state 37

state 16

    (85) lim -> LIM .
    (86) lim -> LIM . SUB char
    (87) lim -> LIM . SUB block

    BEGINBLOCK      reduce using rule 85 (lim -> LIM .)
    CHAR            reduce using rule 85 (lim -> LIM .)
    FRAC            reduce using rule 85 (lim -> LIM .)
    ROOT            reduce using rule 85 (lim -> LIM .)
    BINOP           reduce using rule 85 (lim -> LIM .)
    KBINOP          reduce using rule 85 (lim -> LIM .)
    BINREL          reduce using rule 85 (lim -> LIM .)
    KBINREL         reduce using rule 85 (lim -> LIM .)
    NOT             reduce using rule 85 (lim -> LIM .)
    FUNC            reduce using rule 85 (lim -> LIM .)
    LARGEOP         reduce using rule 85 (lim -> LIM .)
    ARROW           reduce using rule 85 (lim -> LIM .)
    DELIMITER       reduce using rule 85 (lim -> LIM .)
    KDELIMITER      reduce using rule 85 (lim -> LIM .)
    ACCENT          reduce using rule 85 (lim -> LIM .)
    STYLE           reduce using rule 85 (lim -> LIM .)
    DOTS            reduce using rule 85 (lim -> LIM .)
    LIM             reduce using rule 85 (lim -> LIM .)
    UNKNOWN         reduce using rule 85 (lim -> LIM .)
    ORD             reduce using rule 85 (lim -> LIM .)
    $end            reduce using rule 85 (lim -> LIM .)
    ENDBLOCK        reduce using rule 85 (lim -> LIM .)
    SUB             shift and go to state 56


state 17

    (56) root -> ROOT . char
    (57) root -> ROOT . block
    (58) root -> ROOT . KDELIMITER content KDELIMITER char
    (59) root -> ROOT . KDELIMITER content KDELIMITER block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    KDELIMITER      shift and go to state 57
    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 58
    ord                            shift and go to state 30
    block                          shift and go to state 59

state 18

    (6) content -> scripted .

    BEGINBLOCK      reduce using rule 6 (content -> scripted .)
    CHAR            reduce using rule 6 (content -> scripted .)
    FRAC            reduce using rule 6 (content -> scripted .)
    ROOT            reduce using rule 6 (content -> scripted .)
    BINOP           reduce using rule 6 (content -> scripted .)
    KBINOP          reduce using rule 6 (content -> scripted .)
    BINREL          reduce using rule 6 (content -> scripted .)
    KBINREL         reduce using rule 6 (content -> scripted .)
    NOT             reduce using rule 6 (content -> scripted .)
    FUNC            reduce using rule 6 (content -> scripted .)
    LARGEOP         reduce using rule 6 (content -> scripted .)
    ARROW           reduce using rule 6 (content -> scripted .)
    DELIMITER       reduce using rule 6 (content -> scripted .)
    KDELIMITER      reduce using rule 6 (content -> scripted .)
    ACCENT          reduce using rule 6 (content -> scripted .)
    STYLE           reduce using rule 6 (content -> scripted .)
    DOTS            reduce using rule 6 (content -> scripted .)
    LIM             reduce using rule 6 (content -> scripted .)
    UNKNOWN         reduce using rule 6 (content -> scripted .)
    ORD             reduce using rule 6 (content -> scripted .)
    ENDBLOCK        reduce using rule 6 (content -> scripted .)
    $end            reduce using rule 6 (content -> scripted .)


state 19

    (19) command -> function .

    KDELIMITER      reduce using rule 19 (command -> function .)
    BEGINBLOCK      reduce using rule 19 (command -> function .)
    CHAR            reduce using rule 19 (command -> function .)
    FRAC            reduce using rule 19 (command -> function .)
    ROOT            reduce using rule 19 (command -> function .)
    BINOP           reduce using rule 19 (command -> function .)
    KBINOP          reduce using rule 19 (command -> function .)
    BINREL          reduce using rule 19 (command -> function .)
    KBINREL         reduce using rule 19 (command -> function .)
    NOT             reduce using rule 19 (command -> function .)
    FUNC            reduce using rule 19 (command -> function .)
    LARGEOP         reduce using rule 19 (command -> function .)
    ARROW           reduce using rule 19 (command -> function .)
    DELIMITER       reduce using rule 19 (command -> function .)
    ACCENT          reduce using rule 19 (command -> function .)
    STYLE           reduce using rule 19 (command -> function .)
    DOTS            reduce using rule 19 (command -> function .)
    LIM             reduce using rule 19 (command -> function .)
    UNKNOWN         reduce using rule 19 (command -> function .)
    ORD             reduce using rule 19 (command -> function .)
    $end            reduce using rule 19 (command -> function .)
    ENDBLOCK        reduce using rule 19 (command -> function .)


state 20

    (82) style -> STYLE . char
    (83) style -> STYLE . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 60
    ord                            shift and go to state 30
    block                          shift and go to state 61

state 21

    (14) command -> frac .

    KDELIMITER      reduce using rule 14 (command -> frac .)
    BEGINBLOCK      reduce using rule 14 (command -> frac .)
    CHAR            reduce using rule 14 (command -> frac .)
    FRAC            reduce using rule 14 (command -> frac .)
    ROOT            reduce using rule 14 (command -> frac .)
    BINOP           reduce using rule 14 (command -> frac .)
    KBINOP          reduce using rule 14 (command -> frac .)
    BINREL          reduce using rule 14 (command -> frac .)
    KBINREL         reduce using rule 14 (command -> frac .)
    NOT             reduce using rule 14 (command -> frac .)
    FUNC            reduce using rule 14 (command -> frac .)
    LARGEOP         reduce using rule 14 (command -> frac .)
    ARROW           reduce using rule 14 (command -> frac .)
    DELIMITER       reduce using rule 14 (command -> frac .)
    ACCENT          reduce using rule 14 (command -> frac .)
    STYLE           reduce using rule 14 (command -> frac .)
    DOTS            reduce using rule 14 (command -> frac .)
    LIM             reduce using rule 14 (command -> frac .)
    UNKNOWN         reduce using rule 14 (command -> frac .)
    ORD             reduce using rule 14 (command -> frac .)
    $end            reduce using rule 14 (command -> frac .)
    ENDBLOCK        reduce using rule 14 (command -> frac .)


state 22

    (62) binrel -> BINREL .

    BEGINBLOCK      reduce using rule 62 (binrel -> BINREL .)
    CHAR            reduce using rule 62 (binrel -> BINREL .)
    FRAC            reduce using rule 62 (binrel -> BINREL .)
    ROOT            reduce using rule 62 (binrel -> BINREL .)
    BINOP           reduce using rule 62 (binrel -> BINREL .)
    KBINOP          reduce using rule 62 (binrel -> BINREL .)
    BINREL          reduce using rule 62 (binrel -> BINREL .)
    KBINREL         reduce using rule 62 (binrel -> BINREL .)
    NOT             reduce using rule 62 (binrel -> BINREL .)
    FUNC            reduce using rule 62 (binrel -> BINREL .)
    LARGEOP         reduce using rule 62 (binrel -> BINREL .)
    ARROW           reduce using rule 62 (binrel -> BINREL .)
    DELIMITER       reduce using rule 62 (binrel -> BINREL .)
    KDELIMITER      reduce using rule 62 (binrel -> BINREL .)
    ACCENT          reduce using rule 62 (binrel -> BINREL .)
    STYLE           reduce using rule 62 (binrel -> BINREL .)
    DOTS            reduce using rule 62 (binrel -> BINREL .)
    LIM             reduce using rule 62 (binrel -> BINREL .)
    UNKNOWN         reduce using rule 62 (binrel -> BINREL .)
    ORD             reduce using rule 62 (binrel -> BINREL .)
    $end            reduce using rule 62 (binrel -> BINREL .)
    ENDBLOCK        reduce using rule 62 (binrel -> BINREL .)


state 23

    (16) command -> binop .

    KDELIMITER      reduce using rule 16 (command -> binop .)
    BEGINBLOCK      reduce using rule 16 (command -> binop .)
    CHAR            reduce using rule 16 (command -> binop .)
    FRAC            reduce using rule 16 (command -> binop .)
    ROOT            reduce using rule 16 (command -> binop .)
    BINOP           reduce using rule 16 (command -> binop .)
    KBINOP          reduce using rule 16 (command -> binop .)
    BINREL          reduce using rule 16 (command -> binop .)
    KBINREL         reduce using rule 16 (command -> binop .)
    NOT             reduce using rule 16 (command -> binop .)
    FUNC            reduce using rule 16 (command -> binop .)
    LARGEOP         reduce using rule 16 (command -> binop .)
    ARROW           reduce using rule 16 (command -> binop .)
    DELIMITER       reduce using rule 16 (command -> binop .)
    ACCENT          reduce using rule 16 (command -> binop .)
    STYLE           reduce using rule 16 (command -> binop .)
    DOTS            reduce using rule 16 (command -> binop .)
    LIM             reduce using rule 16 (command -> binop .)
    UNKNOWN         reduce using rule 16 (command -> binop .)
    ORD             reduce using rule 16 (command -> binop .)
    $end            reduce using rule 16 (command -> binop .)
    ENDBLOCK        reduce using rule 16 (command -> binop .)


state 24

    (4) content -> chars .

    BEGINBLOCK      reduce using rule 4 (content -> chars .)
    CHAR            reduce using rule 4 (content -> chars .)
    FRAC            reduce using rule 4 (content -> chars .)
    ROOT            reduce using rule 4 (content -> chars .)
    BINOP           reduce using rule 4 (content -> chars .)
    KBINOP          reduce using rule 4 (content -> chars .)
    BINREL          reduce using rule 4 (content -> chars .)
    KBINREL         reduce using rule 4 (content -> chars .)
    NOT             reduce using rule 4 (content -> chars .)
    FUNC            reduce using rule 4 (content -> chars .)
    LARGEOP         reduce using rule 4 (content -> chars .)
    ARROW           reduce using rule 4 (content -> chars .)
    DELIMITER       reduce using rule 4 (content -> chars .)
    KDELIMITER      reduce using rule 4 (content -> chars .)
    ACCENT          reduce using rule 4 (content -> chars .)
    STYLE           reduce using rule 4 (content -> chars .)
    DOTS            reduce using rule 4 (content -> chars .)
    LIM             reduce using rule 4 (content -> chars .)
    UNKNOWN         reduce using rule 4 (content -> chars .)
    ORD             reduce using rule 4 (content -> chars .)
    ENDBLOCK        reduce using rule 4 (content -> chars .)
    $end            reduce using rule 4 (content -> chars .)


state 25

    (88) unknown -> UNKNOWN .

    BEGINBLOCK      reduce using rule 88 (unknown -> UNKNOWN .)
    CHAR            reduce using rule 88 (unknown -> UNKNOWN .)
    FRAC            reduce using rule 88 (unknown -> UNKNOWN .)
    ROOT            reduce using rule 88 (unknown -> UNKNOWN .)
    BINOP           reduce using rule 88 (unknown -> UNKNOWN .)
    KBINOP          reduce using rule 88 (unknown -> UNKNOWN .)
    BINREL          reduce using rule 88 (unknown -> UNKNOWN .)
    KBINREL         reduce using rule 88 (unknown -> UNKNOWN .)
    NOT             reduce using rule 88 (unknown -> UNKNOWN .)
    FUNC            reduce using rule 88 (unknown -> UNKNOWN .)
    LARGEOP         reduce using rule 88 (unknown -> UNKNOWN .)
    ARROW           reduce using rule 88 (unknown -> UNKNOWN .)
    DELIMITER       reduce using rule 88 (unknown -> UNKNOWN .)
    KDELIMITER      reduce using rule 88 (unknown -> UNKNOWN .)
    ACCENT          reduce using rule 88 (unknown -> UNKNOWN .)
    STYLE           reduce using rule 88 (unknown -> UNKNOWN .)
    DOTS            reduce using rule 88 (unknown -> UNKNOWN .)
    LIM             reduce using rule 88 (unknown -> UNKNOWN .)
    UNKNOWN         reduce using rule 88 (unknown -> UNKNOWN .)
    ORD             reduce using rule 88 (unknown -> UNKNOWN .)
    ENDBLOCK        reduce using rule 88 (unknown -> UNKNOWN .)
    $end            reduce using rule 88 (unknown -> UNKNOWN .)


state 26

    (78) delimiter -> DELIMITER .

    ENDBLOCK        reduce using rule 78 (delimiter -> DELIMITER .)
    BEGINBLOCK      reduce using rule 78 (delimiter -> DELIMITER .)
    CHAR            reduce using rule 78 (delimiter -> DELIMITER .)
    FRAC            reduce using rule 78 (delimiter -> DELIMITER .)
    ROOT            reduce using rule 78 (delimiter -> DELIMITER .)
    BINOP           reduce using rule 78 (delimiter -> DELIMITER .)
    KBINOP          reduce using rule 78 (delimiter -> DELIMITER .)
    BINREL          reduce using rule 78 (delimiter -> DELIMITER .)
    KBINREL         reduce using rule 78 (delimiter -> DELIMITER .)
    NOT             reduce using rule 78 (delimiter -> DELIMITER .)
    FUNC            reduce using rule 78 (delimiter -> DELIMITER .)
    LARGEOP         reduce using rule 78 (delimiter -> DELIMITER .)
    ARROW           reduce using rule 78 (delimiter -> DELIMITER .)
    DELIMITER       reduce using rule 78 (delimiter -> DELIMITER .)
    KDELIMITER      reduce using rule 78 (delimiter -> DELIMITER .)
    ACCENT          reduce using rule 78 (delimiter -> DELIMITER .)
    STYLE           reduce using rule 78 (delimiter -> DELIMITER .)
    DOTS            reduce using rule 78 (delimiter -> DELIMITER .)
    LIM             reduce using rule 78 (delimiter -> DELIMITER .)
    UNKNOWN         reduce using rule 78 (delimiter -> DELIMITER .)
    ORD             reduce using rule 78 (delimiter -> DELIMITER .)
    $end            reduce using rule 78 (delimiter -> DELIMITER .)


state 27

    (65) function -> FUNC .

    KDELIMITER      reduce using rule 65 (function -> FUNC .)
    BEGINBLOCK      reduce using rule 65 (function -> FUNC .)
    CHAR            reduce using rule 65 (function -> FUNC .)
    FRAC            reduce using rule 65 (function -> FUNC .)
    ROOT            reduce using rule 65 (function -> FUNC .)
    BINOP           reduce using rule 65 (function -> FUNC .)
    KBINOP          reduce using rule 65 (function -> FUNC .)
    BINREL          reduce using rule 65 (function -> FUNC .)
    KBINREL         reduce using rule 65 (function -> FUNC .)
    NOT             reduce using rule 65 (function -> FUNC .)
    FUNC            reduce using rule 65 (function -> FUNC .)
    LARGEOP         reduce using rule 65 (function -> FUNC .)
    ARROW           reduce using rule 65 (function -> FUNC .)
    DELIMITER       reduce using rule 65 (function -> FUNC .)
    ACCENT          reduce using rule 65 (function -> FUNC .)
    STYLE           reduce using rule 65 (function -> FUNC .)
    DOTS            reduce using rule 65 (function -> FUNC .)
    LIM             reduce using rule 65 (function -> FUNC .)
    UNKNOWN         reduce using rule 65 (function -> FUNC .)
    ORD             reduce using rule 65 (function -> FUNC .)
    $end            reduce using rule 65 (function -> FUNC .)
    ENDBLOCK        reduce using rule 65 (function -> FUNC .)


state 28

    (18) command -> not .

    KDELIMITER      reduce using rule 18 (command -> not .)
    BEGINBLOCK      reduce using rule 18 (command -> not .)
    CHAR            reduce using rule 18 (command -> not .)
    FRAC            reduce using rule 18 (command -> not .)
    ROOT            reduce using rule 18 (command -> not .)
    BINOP           reduce using rule 18 (command -> not .)
    KBINOP          reduce using rule 18 (command -> not .)
    BINREL          reduce using rule 18 (command -> not .)
    KBINREL         reduce using rule 18 (command -> not .)
    NOT             reduce using rule 18 (command -> not .)
    FUNC            reduce using rule 18 (command -> not .)
    LARGEOP         reduce using rule 18 (command -> not .)
    ARROW           reduce using rule 18 (command -> not .)
    DELIMITER       reduce using rule 18 (command -> not .)
    ACCENT          reduce using rule 18 (command -> not .)
    STYLE           reduce using rule 18 (command -> not .)
    DOTS            reduce using rule 18 (command -> not .)
    LIM             reduce using rule 18 (command -> not .)
    UNKNOWN         reduce using rule 18 (command -> not .)
    ORD             reduce using rule 18 (command -> not .)
    $end            reduce using rule 18 (command -> not .)
    ENDBLOCK        reduce using rule 18 (command -> not .)


state 29

    (61) binop -> KBINOP .

    BEGINBLOCK      reduce using rule 61 (binop -> KBINOP .)
    CHAR            reduce using rule 61 (binop -> KBINOP .)
    FRAC            reduce using rule 61 (binop -> KBINOP .)
    ROOT            reduce using rule 61 (binop -> KBINOP .)
    BINOP           reduce using rule 61 (binop -> KBINOP .)
    KBINOP          reduce using rule 61 (binop -> KBINOP .)
    BINREL          reduce using rule 61 (binop -> KBINOP .)
    KBINREL         reduce using rule 61 (binop -> KBINOP .)
    NOT             reduce using rule 61 (binop -> KBINOP .)
    FUNC            reduce using rule 61 (binop -> KBINOP .)
    LARGEOP         reduce using rule 61 (binop -> KBINOP .)
    ARROW           reduce using rule 61 (binop -> KBINOP .)
    DELIMITER       reduce using rule 61 (binop -> KBINOP .)
    KDELIMITER      reduce using rule 61 (binop -> KBINOP .)
    ACCENT          reduce using rule 61 (binop -> KBINOP .)
    STYLE           reduce using rule 61 (binop -> KBINOP .)
    DOTS            reduce using rule 61 (binop -> KBINOP .)
    LIM             reduce using rule 61 (binop -> KBINOP .)
    UNKNOWN         reduce using rule 61 (binop -> KBINOP .)
    ORD             reduce using rule 61 (binop -> KBINOP .)
    ENDBLOCK        reduce using rule 61 (binop -> KBINOP .)
    $end            reduce using rule 61 (binop -> KBINOP .)


state 30

    (12) char -> ord .

    BEGINBLOCK      reduce using rule 12 (char -> ord .)
    CHAR            reduce using rule 12 (char -> ord .)
    FRAC            reduce using rule 12 (char -> ord .)
    ROOT            reduce using rule 12 (char -> ord .)
    BINOP           reduce using rule 12 (char -> ord .)
    KBINOP          reduce using rule 12 (char -> ord .)
    BINREL          reduce using rule 12 (char -> ord .)
    KBINREL         reduce using rule 12 (char -> ord .)
    NOT             reduce using rule 12 (char -> ord .)
    FUNC            reduce using rule 12 (char -> ord .)
    LARGEOP         reduce using rule 12 (char -> ord .)
    ARROW           reduce using rule 12 (char -> ord .)
    DELIMITER       reduce using rule 12 (char -> ord .)
    KDELIMITER      reduce using rule 12 (char -> ord .)
    ACCENT          reduce using rule 12 (char -> ord .)
    STYLE           reduce using rule 12 (char -> ord .)
    DOTS            reduce using rule 12 (char -> ord .)
    LIM             reduce using rule 12 (char -> ord .)
    UNKNOWN         reduce using rule 12 (char -> ord .)
    ORD             reduce using rule 12 (char -> ord .)
    $end            reduce using rule 12 (char -> ord .)
    ENDBLOCK        reduce using rule 12 (char -> ord .)
    SUB             reduce using rule 12 (char -> ord .)
    SUP             reduce using rule 12 (char -> ord .)


state 31

    (20) command -> larop .

    KDELIMITER      reduce using rule 20 (command -> larop .)
    BEGINBLOCK      reduce using rule 20 (command -> larop .)
    CHAR            reduce using rule 20 (command -> larop .)
    FRAC            reduce using rule 20 (command -> larop .)
    ROOT            reduce using rule 20 (command -> larop .)
    BINOP           reduce using rule 20 (command -> larop .)
    KBINOP          reduce using rule 20 (command -> larop .)
    BINREL          reduce using rule 20 (command -> larop .)
    KBINREL         reduce using rule 20 (command -> larop .)
    NOT             reduce using rule 20 (command -> larop .)
    FUNC            reduce using rule 20 (command -> larop .)
    LARGEOP         reduce using rule 20 (command -> larop .)
    ARROW           reduce using rule 20 (command -> larop .)
    DELIMITER       reduce using rule 20 (command -> larop .)
    ACCENT          reduce using rule 20 (command -> larop .)
    STYLE           reduce using rule 20 (command -> larop .)
    DOTS            reduce using rule 20 (command -> larop .)
    LIM             reduce using rule 20 (command -> larop .)
    UNKNOWN         reduce using rule 20 (command -> larop .)
    ORD             reduce using rule 20 (command -> larop .)
    $end            reduce using rule 20 (command -> larop .)
    ENDBLOCK        reduce using rule 20 (command -> larop .)


state 32

    (11) char -> CHAR .

    BEGINBLOCK      reduce using rule 11 (char -> CHAR .)
    CHAR            reduce using rule 11 (char -> CHAR .)
    FRAC            reduce using rule 11 (char -> CHAR .)
    ROOT            reduce using rule 11 (char -> CHAR .)
    BINOP           reduce using rule 11 (char -> CHAR .)
    KBINOP          reduce using rule 11 (char -> CHAR .)
    BINREL          reduce using rule 11 (char -> CHAR .)
    KBINREL         reduce using rule 11 (char -> CHAR .)
    NOT             reduce using rule 11 (char -> CHAR .)
    FUNC            reduce using rule 11 (char -> CHAR .)
    LARGEOP         reduce using rule 11 (char -> CHAR .)
    ARROW           reduce using rule 11 (char -> CHAR .)
    DELIMITER       reduce using rule 11 (char -> CHAR .)
    KDELIMITER      reduce using rule 11 (char -> CHAR .)
    ACCENT          reduce using rule 11 (char -> CHAR .)
    STYLE           reduce using rule 11 (char -> CHAR .)
    DOTS            reduce using rule 11 (char -> CHAR .)
    LIM             reduce using rule 11 (char -> CHAR .)
    UNKNOWN         reduce using rule 11 (char -> CHAR .)
    ORD             reduce using rule 11 (char -> CHAR .)
    $end            reduce using rule 11 (char -> CHAR .)
    ENDBLOCK        reduce using rule 11 (char -> CHAR .)
    SUB             reduce using rule 11 (char -> CHAR .)
    SUP             reduce using rule 11 (char -> CHAR .)


state 33

    (60) binop -> BINOP .

    BEGINBLOCK      reduce using rule 60 (binop -> BINOP .)
    CHAR            reduce using rule 60 (binop -> BINOP .)
    FRAC            reduce using rule 60 (binop -> BINOP .)
    ROOT            reduce using rule 60 (binop -> BINOP .)
    BINOP           reduce using rule 60 (binop -> BINOP .)
    KBINOP          reduce using rule 60 (binop -> BINOP .)
    BINREL          reduce using rule 60 (binop -> BINOP .)
    KBINREL         reduce using rule 60 (binop -> BINOP .)
    NOT             reduce using rule 60 (binop -> BINOP .)
    FUNC            reduce using rule 60 (binop -> BINOP .)
    LARGEOP         reduce using rule 60 (binop -> BINOP .)
    ARROW           reduce using rule 60 (binop -> BINOP .)
    DELIMITER       reduce using rule 60 (binop -> BINOP .)
    KDELIMITER      reduce using rule 60 (binop -> BINOP .)
    ACCENT          reduce using rule 60 (binop -> BINOP .)
    STYLE           reduce using rule 60 (binop -> BINOP .)
    DOTS            reduce using rule 60 (binop -> BINOP .)
    LIM             reduce using rule 60 (binop -> BINOP .)
    UNKNOWN         reduce using rule 60 (binop -> BINOP .)
    ORD             reduce using rule 60 (binop -> BINOP .)
    ENDBLOCK        reduce using rule 60 (binop -> BINOP .)
    $end            reduce using rule 60 (binop -> BINOP .)


state 34

    (63) binrel -> KBINREL .

    BEGINBLOCK      reduce using rule 63 (binrel -> KBINREL .)
    CHAR            reduce using rule 63 (binrel -> KBINREL .)
    FRAC            reduce using rule 63 (binrel -> KBINREL .)
    ROOT            reduce using rule 63 (binrel -> KBINREL .)
    BINOP           reduce using rule 63 (binrel -> KBINREL .)
    KBINOP          reduce using rule 63 (binrel -> KBINREL .)
    BINREL          reduce using rule 63 (binrel -> KBINREL .)
    KBINREL         reduce using rule 63 (binrel -> KBINREL .)
    NOT             reduce using rule 63 (binrel -> KBINREL .)
    FUNC            reduce using rule 63 (binrel -> KBINREL .)
    LARGEOP         reduce using rule 63 (binrel -> KBINREL .)
    ARROW           reduce using rule 63 (binrel -> KBINREL .)
    DELIMITER       reduce using rule 63 (binrel -> KBINREL .)
    KDELIMITER      reduce using rule 63 (binrel -> KBINREL .)
    ACCENT          reduce using rule 63 (binrel -> KBINREL .)
    STYLE           reduce using rule 63 (binrel -> KBINREL .)
    DOTS            reduce using rule 63 (binrel -> KBINREL .)
    LIM             reduce using rule 63 (binrel -> KBINREL .)
    UNKNOWN         reduce using rule 63 (binrel -> KBINREL .)
    ORD             reduce using rule 63 (binrel -> KBINREL .)
    $end            reduce using rule 63 (binrel -> KBINREL .)
    ENDBLOCK        reduce using rule 63 (binrel -> KBINREL .)


state 35

    (22) command -> delimiter .

    KDELIMITER      reduce using rule 22 (command -> delimiter .)
    BEGINBLOCK      reduce using rule 22 (command -> delimiter .)
    CHAR            reduce using rule 22 (command -> delimiter .)
    FRAC            reduce using rule 22 (command -> delimiter .)
    ROOT            reduce using rule 22 (command -> delimiter .)
    BINOP           reduce using rule 22 (command -> delimiter .)
    KBINOP          reduce using rule 22 (command -> delimiter .)
    BINREL          reduce using rule 22 (command -> delimiter .)
    KBINREL         reduce using rule 22 (command -> delimiter .)
    NOT             reduce using rule 22 (command -> delimiter .)
    FUNC            reduce using rule 22 (command -> delimiter .)
    LARGEOP         reduce using rule 22 (command -> delimiter .)
    ARROW           reduce using rule 22 (command -> delimiter .)
    DELIMITER       reduce using rule 22 (command -> delimiter .)
    ACCENT          reduce using rule 22 (command -> delimiter .)
    STYLE           reduce using rule 22 (command -> delimiter .)
    DOTS            reduce using rule 22 (command -> delimiter .)
    LIM             reduce using rule 22 (command -> delimiter .)
    UNKNOWN         reduce using rule 22 (command -> delimiter .)
    ORD             reduce using rule 22 (command -> delimiter .)
    $end            reduce using rule 22 (command -> delimiter .)
    ENDBLOCK        reduce using rule 22 (command -> delimiter .)


state 36

    (7) content -> command .

    BEGINBLOCK      reduce using rule 7 (content -> command .)
    CHAR            reduce using rule 7 (content -> command .)
    FRAC            reduce using rule 7 (content -> command .)
    ROOT            reduce using rule 7 (content -> command .)
    BINOP           reduce using rule 7 (content -> command .)
    KBINOP          reduce using rule 7 (content -> command .)
    BINREL          reduce using rule 7 (content -> command .)
    KBINREL         reduce using rule 7 (content -> command .)
    NOT             reduce using rule 7 (content -> command .)
    FUNC            reduce using rule 7 (content -> command .)
    LARGEOP         reduce using rule 7 (content -> command .)
    ARROW           reduce using rule 7 (content -> command .)
    DELIMITER       reduce using rule 7 (content -> command .)
    KDELIMITER      reduce using rule 7 (content -> command .)
    ACCENT          reduce using rule 7 (content -> command .)
    STYLE           reduce using rule 7 (content -> command .)
    DOTS            reduce using rule 7 (content -> command .)
    LIM             reduce using rule 7 (content -> command .)
    UNKNOWN         reduce using rule 7 (content -> command .)
    ORD             reduce using rule 7 (content -> command .)
    ENDBLOCK        reduce using rule 7 (content -> command .)
    $end            reduce using rule 7 (content -> command .)


state 37

    (5) content -> block .
    (30) scripted -> block . SUP char
    (31) scripted -> block . SUP block
    (34) scripted -> block . SUB char
    (35) scripted -> block . SUB block
    (40) scripted -> block . SUP char SUB char
    (41) scripted -> block . SUP char SUB block
    (42) scripted -> block . SUP block SUB char
    (43) scripted -> block . SUP block SUB block
    (48) scripted -> block . SUB char SUP char
    (49) scripted -> block . SUB char SUP block
    (50) scripted -> block . SUB block SUP char
    (51) scripted -> block . SUB block SUP block

    BEGINBLOCK      reduce using rule 5 (content -> block .)
    CHAR            reduce using rule 5 (content -> block .)
    FRAC            reduce using rule 5 (content -> block .)
    ROOT            reduce using rule 5 (content -> block .)
    BINOP           reduce using rule 5 (content -> block .)
    KBINOP          reduce using rule 5 (content -> block .)
    BINREL          reduce using rule 5 (content -> block .)
    KBINREL         reduce using rule 5 (content -> block .)
    NOT             reduce using rule 5 (content -> block .)
    FUNC            reduce using rule 5 (content -> block .)
    LARGEOP         reduce using rule 5 (content -> block .)
    ARROW           reduce using rule 5 (content -> block .)
    DELIMITER       reduce using rule 5 (content -> block .)
    KDELIMITER      reduce using rule 5 (content -> block .)
    ACCENT          reduce using rule 5 (content -> block .)
    STYLE           reduce using rule 5 (content -> block .)
    DOTS            reduce using rule 5 (content -> block .)
    LIM             reduce using rule 5 (content -> block .)
    UNKNOWN         reduce using rule 5 (content -> block .)
    ORD             reduce using rule 5 (content -> block .)
    ENDBLOCK        reduce using rule 5 (content -> block .)
    $end            reduce using rule 5 (content -> block .)
    SUP             shift and go to state 63
    SUB             shift and go to state 62


state 38

    (21) command -> arrow .

    KDELIMITER      reduce using rule 21 (command -> arrow .)
    BEGINBLOCK      reduce using rule 21 (command -> arrow .)
    CHAR            reduce using rule 21 (command -> arrow .)
    FRAC            reduce using rule 21 (command -> arrow .)
    ROOT            reduce using rule 21 (command -> arrow .)
    BINOP           reduce using rule 21 (command -> arrow .)
    KBINOP          reduce using rule 21 (command -> arrow .)
    BINREL          reduce using rule 21 (command -> arrow .)
    KBINREL         reduce using rule 21 (command -> arrow .)
    NOT             reduce using rule 21 (command -> arrow .)
    FUNC            reduce using rule 21 (command -> arrow .)
    LARGEOP         reduce using rule 21 (command -> arrow .)
    ARROW           reduce using rule 21 (command -> arrow .)
    DELIMITER       reduce using rule 21 (command -> arrow .)
    ACCENT          reduce using rule 21 (command -> arrow .)
    STYLE           reduce using rule 21 (command -> arrow .)
    DOTS            reduce using rule 21 (command -> arrow .)
    LIM             reduce using rule 21 (command -> arrow .)
    UNKNOWN         reduce using rule 21 (command -> arrow .)
    ORD             reduce using rule 21 (command -> arrow .)
    $end            reduce using rule 21 (command -> arrow .)
    ENDBLOCK        reduce using rule 21 (command -> arrow .)


state 39

    (27) command -> unknown .

    KDELIMITER      reduce using rule 27 (command -> unknown .)
    BEGINBLOCK      reduce using rule 27 (command -> unknown .)
    CHAR            reduce using rule 27 (command -> unknown .)
    FRAC            reduce using rule 27 (command -> unknown .)
    ROOT            reduce using rule 27 (command -> unknown .)
    BINOP           reduce using rule 27 (command -> unknown .)
    KBINOP          reduce using rule 27 (command -> unknown .)
    BINREL          reduce using rule 27 (command -> unknown .)
    KBINREL         reduce using rule 27 (command -> unknown .)
    NOT             reduce using rule 27 (command -> unknown .)
    FUNC            reduce using rule 27 (command -> unknown .)
    LARGEOP         reduce using rule 27 (command -> unknown .)
    ARROW           reduce using rule 27 (command -> unknown .)
    DELIMITER       reduce using rule 27 (command -> unknown .)
    ACCENT          reduce using rule 27 (command -> unknown .)
    STYLE           reduce using rule 27 (command -> unknown .)
    DOTS            reduce using rule 27 (command -> unknown .)
    LIM             reduce using rule 27 (command -> unknown .)
    UNKNOWN         reduce using rule 27 (command -> unknown .)
    ORD             reduce using rule 27 (command -> unknown .)
    $end            reduce using rule 27 (command -> unknown .)
    ENDBLOCK        reduce using rule 27 (command -> unknown .)


state 40

    (64) not -> NOT .

    BEGINBLOCK      reduce using rule 64 (not -> NOT .)
    CHAR            reduce using rule 64 (not -> NOT .)
    FRAC            reduce using rule 64 (not -> NOT .)
    ROOT            reduce using rule 64 (not -> NOT .)
    BINOP           reduce using rule 64 (not -> NOT .)
    KBINOP          reduce using rule 64 (not -> NOT .)
    BINREL          reduce using rule 64 (not -> NOT .)
    KBINREL         reduce using rule 64 (not -> NOT .)
    NOT             reduce using rule 64 (not -> NOT .)
    FUNC            reduce using rule 64 (not -> NOT .)
    LARGEOP         reduce using rule 64 (not -> NOT .)
    ARROW           reduce using rule 64 (not -> NOT .)
    DELIMITER       reduce using rule 64 (not -> NOT .)
    KDELIMITER      reduce using rule 64 (not -> NOT .)
    ACCENT          reduce using rule 64 (not -> NOT .)
    STYLE           reduce using rule 64 (not -> NOT .)
    DOTS            reduce using rule 64 (not -> NOT .)
    LIM             reduce using rule 64 (not -> NOT .)
    UNKNOWN         reduce using rule 64 (not -> NOT .)
    ORD             reduce using rule 64 (not -> NOT .)
    $end            reduce using rule 64 (not -> NOT .)
    ENDBLOCK        reduce using rule 64 (not -> NOT .)


state 41

    (13) ord -> ORD .

    SUB             reduce using rule 13 (ord -> ORD .)
    SUP             reduce using rule 13 (ord -> ORD .)
    BEGINBLOCK      reduce using rule 13 (ord -> ORD .)
    CHAR            reduce using rule 13 (ord -> ORD .)
    FRAC            reduce using rule 13 (ord -> ORD .)
    ROOT            reduce using rule 13 (ord -> ORD .)
    BINOP           reduce using rule 13 (ord -> ORD .)
    KBINOP          reduce using rule 13 (ord -> ORD .)
    BINREL          reduce using rule 13 (ord -> ORD .)
    KBINREL         reduce using rule 13 (ord -> ORD .)
    NOT             reduce using rule 13 (ord -> ORD .)
    FUNC            reduce using rule 13 (ord -> ORD .)
    LARGEOP         reduce using rule 13 (ord -> ORD .)
    ARROW           reduce using rule 13 (ord -> ORD .)
    DELIMITER       reduce using rule 13 (ord -> ORD .)
    KDELIMITER      reduce using rule 13 (ord -> ORD .)
    ACCENT          reduce using rule 13 (ord -> ORD .)
    STYLE           reduce using rule 13 (ord -> ORD .)
    DOTS            reduce using rule 13 (ord -> ORD .)
    LIM             reduce using rule 13 (ord -> ORD .)
    UNKNOWN         reduce using rule 13 (ord -> ORD .)
    ORD             reduce using rule 13 (ord -> ORD .)
    $end            reduce using rule 13 (ord -> ORD .)
    ENDBLOCK        reduce using rule 13 (ord -> ORD .)


state 42

    (15) command -> root .

    KDELIMITER      reduce using rule 15 (command -> root .)
    BEGINBLOCK      reduce using rule 15 (command -> root .)
    CHAR            reduce using rule 15 (command -> root .)
    FRAC            reduce using rule 15 (command -> root .)
    ROOT            reduce using rule 15 (command -> root .)
    BINOP           reduce using rule 15 (command -> root .)
    KBINOP          reduce using rule 15 (command -> root .)
    BINREL          reduce using rule 15 (command -> root .)
    KBINREL         reduce using rule 15 (command -> root .)
    NOT             reduce using rule 15 (command -> root .)
    FUNC            reduce using rule 15 (command -> root .)
    LARGEOP         reduce using rule 15 (command -> root .)
    ARROW           reduce using rule 15 (command -> root .)
    DELIMITER       reduce using rule 15 (command -> root .)
    ACCENT          reduce using rule 15 (command -> root .)
    STYLE           reduce using rule 15 (command -> root .)
    DOTS            reduce using rule 15 (command -> root .)
    LIM             reduce using rule 15 (command -> root .)
    UNKNOWN         reduce using rule 15 (command -> root .)
    ORD             reduce using rule 15 (command -> root .)
    $end            reduce using rule 15 (command -> root .)
    ENDBLOCK        reduce using rule 15 (command -> root .)


state 43

    (80) accent -> ACCENT char .

    BEGINBLOCK      reduce using rule 80 (accent -> ACCENT char .)
    CHAR            reduce using rule 80 (accent -> ACCENT char .)
    FRAC            reduce using rule 80 (accent -> ACCENT char .)
    ROOT            reduce using rule 80 (accent -> ACCENT char .)
    BINOP           reduce using rule 80 (accent -> ACCENT char .)
    KBINOP          reduce using rule 80 (accent -> ACCENT char .)
    BINREL          reduce using rule 80 (accent -> ACCENT char .)
    KBINREL         reduce using rule 80 (accent -> ACCENT char .)
    NOT             reduce using rule 80 (accent -> ACCENT char .)
    FUNC            reduce using rule 80 (accent -> ACCENT char .)
    LARGEOP         reduce using rule 80 (accent -> ACCENT char .)
    ARROW           reduce using rule 80 (accent -> ACCENT char .)
    DELIMITER       reduce using rule 80 (accent -> ACCENT char .)
    KDELIMITER      reduce using rule 80 (accent -> ACCENT char .)
    ACCENT          reduce using rule 80 (accent -> ACCENT char .)
    STYLE           reduce using rule 80 (accent -> ACCENT char .)
    DOTS            reduce using rule 80 (accent -> ACCENT char .)
    LIM             reduce using rule 80 (accent -> ACCENT char .)
    UNKNOWN         reduce using rule 80 (accent -> ACCENT char .)
    ORD             reduce using rule 80 (accent -> ACCENT char .)
    $end            reduce using rule 80 (accent -> ACCENT char .)
    ENDBLOCK        reduce using rule 80 (accent -> ACCENT char .)


state 44

    (81) accent -> ACCENT block .

    BEGINBLOCK      reduce using rule 81 (accent -> ACCENT block .)
    CHAR            reduce using rule 81 (accent -> ACCENT block .)
    FRAC            reduce using rule 81 (accent -> ACCENT block .)
    ROOT            reduce using rule 81 (accent -> ACCENT block .)
    BINOP           reduce using rule 81 (accent -> ACCENT block .)
    KBINOP          reduce using rule 81 (accent -> ACCENT block .)
    BINREL          reduce using rule 81 (accent -> ACCENT block .)
    KBINREL         reduce using rule 81 (accent -> ACCENT block .)
    NOT             reduce using rule 81 (accent -> ACCENT block .)
    FUNC            reduce using rule 81 (accent -> ACCENT block .)
    LARGEOP         reduce using rule 81 (accent -> ACCENT block .)
    ARROW           reduce using rule 81 (accent -> ACCENT block .)
    DELIMITER       reduce using rule 81 (accent -> ACCENT block .)
    KDELIMITER      reduce using rule 81 (accent -> ACCENT block .)
    ACCENT          reduce using rule 81 (accent -> ACCENT block .)
    STYLE           reduce using rule 81 (accent -> ACCENT block .)
    DOTS            reduce using rule 81 (accent -> ACCENT block .)
    LIM             reduce using rule 81 (accent -> ACCENT block .)
    UNKNOWN         reduce using rule 81 (accent -> ACCENT block .)
    ORD             reduce using rule 81 (accent -> ACCENT block .)
    $end            reduce using rule 81 (accent -> ACCENT block .)
    ENDBLOCK        reduce using rule 81 (accent -> ACCENT block .)


state 45

    (32) scripted -> char SUB . char
    (33) scripted -> char SUB . block
    (44) scripted -> char SUB . char SUP char
    (45) scripted -> char SUB . char SUP block
    (46) scripted -> char SUB . block SUP char
    (47) scripted -> char SUB . block SUP block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 64
    ord                            shift and go to state 30
    block                          shift and go to state 65

state 46

    (10) chars -> char chars .

    KDELIMITER      reduce using rule 10 (chars -> char chars .)
    BEGINBLOCK      reduce using rule 10 (chars -> char chars .)
    CHAR            reduce using rule 10 (chars -> char chars .)
    FRAC            reduce using rule 10 (chars -> char chars .)
    ROOT            reduce using rule 10 (chars -> char chars .)
    BINOP           reduce using rule 10 (chars -> char chars .)
    KBINOP          reduce using rule 10 (chars -> char chars .)
    BINREL          reduce using rule 10 (chars -> char chars .)
    KBINREL         reduce using rule 10 (chars -> char chars .)
    NOT             reduce using rule 10 (chars -> char chars .)
    FUNC            reduce using rule 10 (chars -> char chars .)
    LARGEOP         reduce using rule 10 (chars -> char chars .)
    ARROW           reduce using rule 10 (chars -> char chars .)
    DELIMITER       reduce using rule 10 (chars -> char chars .)
    ACCENT          reduce using rule 10 (chars -> char chars .)
    STYLE           reduce using rule 10 (chars -> char chars .)
    DOTS            reduce using rule 10 (chars -> char chars .)
    LIM             reduce using rule 10 (chars -> char chars .)
    UNKNOWN         reduce using rule 10 (chars -> char chars .)
    ORD             reduce using rule 10 (chars -> char chars .)
    $end            reduce using rule 10 (chars -> char chars .)
    ENDBLOCK        reduce using rule 10 (chars -> char chars .)


state 47

    (9) chars -> char .
    (10) chars -> char . chars
    (9) chars -> . char
    (10) chars -> . char chars
    (11) char -> . CHAR
    (12) char -> . ord
    (13) ord -> . ORD

  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    BEGINBLOCK      reduce using rule 9 (chars -> char .)
    FRAC            reduce using rule 9 (chars -> char .)
    ROOT            reduce using rule 9 (chars -> char .)
    BINOP           reduce using rule 9 (chars -> char .)
    KBINOP          reduce using rule 9 (chars -> char .)
    BINREL          reduce using rule 9 (chars -> char .)
    KBINREL         reduce using rule 9 (chars -> char .)
    NOT             reduce using rule 9 (chars -> char .)
    FUNC            reduce using rule 9 (chars -> char .)
    LARGEOP         reduce using rule 9 (chars -> char .)
    ARROW           reduce using rule 9 (chars -> char .)
    DELIMITER       reduce using rule 9 (chars -> char .)
    KDELIMITER      reduce using rule 9 (chars -> char .)
    ACCENT          reduce using rule 9 (chars -> char .)
    STYLE           reduce using rule 9 (chars -> char .)
    DOTS            reduce using rule 9 (chars -> char .)
    LIM             reduce using rule 9 (chars -> char .)
    UNKNOWN         reduce using rule 9 (chars -> char .)
    $end            reduce using rule 9 (chars -> char .)
    ENDBLOCK        reduce using rule 9 (chars -> char .)
    CHAR            shift and go to state 32
    ORD             shift and go to state 41

  ! CHAR            [ reduce using rule 9 (chars -> char .) ]
  ! ORD             [ reduce using rule 9 (chars -> char .) ]

    char                           shift and go to state 47
    chars                          shift and go to state 46
    ord                            shift and go to state 30

state 48

    (28) scripted -> char SUP . char
    (29) scripted -> char SUP . block
    (36) scripted -> char SUP . char SUB char
    (37) scripted -> char SUP . char SUB block
    (38) scripted -> char SUP . block SUB char
    (39) scripted -> char SUP . block SUB block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 66
    ord                            shift and go to state 30
    block                          shift and go to state 67

state 49

    (52) frac -> FRAC char . char
    (53) frac -> FRAC char . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 68
    ord                            shift and go to state 30
    block                          shift and go to state 69

state 50

    (54) frac -> FRAC block . char
    (55) frac -> FRAC block . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 70
    ord                            shift and go to state 30
    block                          shift and go to state 71

state 51

    (3) block -> BEGINBLOCK content . ENDBLOCK
    (8) content -> content . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (28) scripted -> . char SUP char
    (29) scripted -> . char SUP block
    (30) scripted -> . block SUP char
    (31) scripted -> . block SUP block
    (32) scripted -> . char SUB char
    (33) scripted -> . char SUB block
    (34) scripted -> . block SUB char
    (35) scripted -> . block SUB block
    (36) scripted -> . char SUP char SUB char
    (37) scripted -> . char SUP char SUB block
    (38) scripted -> . char SUP block SUB char
    (39) scripted -> . char SUP block SUB block
    (40) scripted -> . block SUP char SUB char
    (41) scripted -> . block SUP char SUB block
    (42) scripted -> . block SUP block SUB char
    (43) scripted -> . block SUP block SUB block
    (44) scripted -> . char SUB char SUP char
    (45) scripted -> . char SUB char SUP block
    (46) scripted -> . char SUB block SUP char
    (47) scripted -> . char SUB block SUP block
    (48) scripted -> . block SUB char SUP char
    (49) scripted -> . block SUB char SUP block
    (50) scripted -> . block SUB block SUP char
    (51) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (23) command -> . accent
    (24) command -> . style
    (25) command -> . dots
    (26) command -> . lim
    (27) command -> . unknown
    (11) char -> . CHAR
    (12) char -> . ord
    (52) frac -> . FRAC char char
    (53) frac -> . FRAC char block
    (54) frac -> . FRAC block char
    (55) frac -> . FRAC block block
    (56) root -> . ROOT char
    (57) root -> . ROOT block
    (58) root -> . ROOT KDELIMITER content KDELIMITER char
    (59) root -> . ROOT KDELIMITER content KDELIMITER block
    (60) binop -> . BINOP
    (61) binop -> . KBINOP
    (62) binrel -> . BINREL
    (63) binrel -> . KBINREL
    (64) not -> . NOT
    (65) function -> . FUNC
    (66) larop -> . LARGEOP SUB char SUP char
    (67) larop -> . LARGEOP SUB char SUP block
    (68) larop -> . LARGEOP SUB block SUP char
    (69) larop -> . LARGEOP SUB block SUP block
    (70) larop -> . LARGEOP SUP char SUB char
    (71) larop -> . LARGEOP SUP char SUB block
    (72) larop -> . LARGEOP SUP block SUB char
    (73) larop -> . LARGEOP SUP block SUB block
    (74) larop -> . LARGEOP
    (75) larop -> . LARGEOP SUB char
    (76) larop -> . LARGEOP SUB block
    (77) arrow -> . ARROW
    (78) delimiter -> . DELIMITER
    (79) delimiter -> . KDELIMITER
    (80) accent -> . ACCENT char
    (81) accent -> . ACCENT block
    (82) style -> . STYLE char
    (83) style -> . STYLE block
    (84) dots -> . DOTS
    (85) lim -> . LIM
    (86) lim -> . LIM SUB char
    (87) lim -> . LIM SUB block
    (88) unknown -> . UNKNOWN
    (13) ord -> . ORD

    ENDBLOCK        shift and go to state 72
    BEGINBLOCK      shift and go to state 8
    CHAR            shift and go to state 32
    FRAC            shift and go to state 7
    ROOT            shift and go to state 17
    BINOP           shift and go to state 33
    KBINOP          shift and go to state 29
    BINREL          shift and go to state 22
    KBINREL         shift and go to state 34
    NOT             shift and go to state 40
    FUNC            shift and go to state 27
    LARGEOP         shift and go to state 12
    ARROW           shift and go to state 3
    DELIMITER       shift and go to state 26
    KDELIMITER      shift and go to state 9
    ACCENT          shift and go to state 2
    STYLE           shift and go to state 20
    DOTS            shift and go to state 5
    LIM             shift and go to state 16
    UNKNOWN         shift and go to state 25
    ORD             shift and go to state 41

    function                       shift and go to state 19
    char                           shift and go to state 4
    style                          shift and go to state 10
    frac                           shift and go to state 21
    arrow                          shift and go to state 38
    binop                          shift and go to state 23
    lim                            shift and go to state 11
    chars                          shift and go to state 24
    accent                         shift and go to state 13
    dots                           shift and go to state 1
    content                        shift and go to state 54
    delimiter                      shift and go to state 35
    command                        shift and go to state 36
    block                          shift and go to state 37
    binrel                         shift and go to state 6
    unknown                        shift and go to state 39
    not                            shift and go to state 28
    ord                            shift and go to state 30
    root                           shift and go to state 42
    larop                          shift and go to state 31
    scripted                       shift and go to state 18

state 52

    (70) larop -> LARGEOP SUP . char SUB char
    (71) larop -> LARGEOP SUP . char SUB block
    (72) larop -> LARGEOP SUP . block SUB char
    (73) larop -> LARGEOP SUP . block SUB block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 73
    ord                            shift and go to state 30
    block                          shift and go to state 74

state 53

    (66) larop -> LARGEOP SUB . char SUP char
    (67) larop -> LARGEOP SUB . char SUP block
    (68) larop -> LARGEOP SUB . block SUP char
    (69) larop -> LARGEOP SUB . block SUP block
    (75) larop -> LARGEOP SUB . char
    (76) larop -> LARGEOP SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 75
    ord                            shift and go to state 30
    block                          shift and go to state 76

state 54

    (8) content -> content content .
    (8) content -> content . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (28) scripted -> . char SUP char
    (29) scripted -> . char SUP block
    (30) scripted -> . block SUP char
    (31) scripted -> . block SUP block
    (32) scripted -> . char SUB char
    (33) scripted -> . char SUB block
    (34) scripted -> . block SUB char
    (35) scripted -> . block SUB block
    (36) scripted -> . char SUP char SUB char
    (37) scripted -> . char SUP char SUB block
    (38) scripted -> . char SUP block SUB char
    (39) scripted -> . char SUP block SUB block
    (40) scripted -> . block SUP char SUB char
    (41) scripted -> . block SUP char SUB block
    (42) scripted -> . block SUP block SUB char
    (43) scripted -> . block SUP block SUB block
    (44) scripted -> . char SUB char SUP char
    (45) scripted -> . char SUB char SUP block
    (46) scripted -> . char SUB block SUP char
    (47) scripted -> . char SUB block SUP block
    (48) scripted -> . block SUB char SUP char
    (49) scripted -> . block SUB char SUP block
    (50) scripted -> . block SUB block SUP char
    (51) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (23) command -> . accent
    (24) command -> . style
    (25) command -> . dots
    (26) command -> . lim
    (27) command -> . unknown
    (11) char -> . CHAR
    (12) char -> . ord
    (52) frac -> . FRAC char char
    (53) frac -> . FRAC char block
    (54) frac -> . FRAC block char
    (55) frac -> . FRAC block block
    (56) root -> . ROOT char
    (57) root -> . ROOT block
    (58) root -> . ROOT KDELIMITER content KDELIMITER char
    (59) root -> . ROOT KDELIMITER content KDELIMITER block
    (60) binop -> . BINOP
    (61) binop -> . KBINOP
    (62) binrel -> . BINREL
    (63) binrel -> . KBINREL
    (64) not -> . NOT
    (65) function -> . FUNC
    (66) larop -> . LARGEOP SUB char SUP char
    (67) larop -> . LARGEOP SUB char SUP block
    (68) larop -> . LARGEOP SUB block SUP char
    (69) larop -> . LARGEOP SUB block SUP block
    (70) larop -> . LARGEOP SUP char SUB char
    (71) larop -> . LARGEOP SUP char SUB block
    (72) larop -> . LARGEOP SUP block SUB char
    (73) larop -> . LARGEOP SUP block SUB block
    (74) larop -> . LARGEOP
    (75) larop -> . LARGEOP SUB char
    (76) larop -> . LARGEOP SUB block
    (77) arrow -> . ARROW
    (78) delimiter -> . DELIMITER
    (79) delimiter -> . KDELIMITER
    (80) accent -> . ACCENT char
    (81) accent -> . ACCENT block
    (82) style -> . STYLE char
    (83) style -> . STYLE block
    (84) dots -> . DOTS
    (85) lim -> . LIM
    (86) lim -> . LIM SUB char
    (87) lim -> . LIM SUB block
    (88) unknown -> . UNKNOWN
    (13) ord -> . ORD

  ! shift/reduce conflict for BEGINBLOCK resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FRAC resolved as shift
  ! shift/reduce conflict for ROOT resolved as shift
  ! shift/reduce conflict for BINOP resolved as shift
  ! shift/reduce conflict for KBINOP resolved as shift
  ! shift/reduce conflict for BINREL resolved as shift
  ! shift/reduce conflict for KBINREL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for LARGEOP resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for DELIMITER resolved as shift
  ! shift/reduce conflict for KDELIMITER resolved as shift
  ! shift/reduce conflict for ACCENT resolved as shift
  ! shift/reduce conflict for STYLE resolved as shift
  ! shift/reduce conflict for DOTS resolved as shift
  ! shift/reduce conflict for LIM resolved as shift
  ! shift/reduce conflict for UNKNOWN resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    ENDBLOCK        reduce using rule 8 (content -> content content .)
    $end            reduce using rule 8 (content -> content content .)
    BEGINBLOCK      shift and go to state 8
    CHAR            shift and go to state 32
    FRAC            shift and go to state 7
    ROOT            shift and go to state 17
    BINOP           shift and go to state 33
    KBINOP          shift and go to state 29
    BINREL          shift and go to state 22
    KBINREL         shift and go to state 34
    NOT             shift and go to state 40
    FUNC            shift and go to state 27
    LARGEOP         shift and go to state 12
    ARROW           shift and go to state 3
    DELIMITER       shift and go to state 26
    KDELIMITER      shift and go to state 9
    ACCENT          shift and go to state 2
    STYLE           shift and go to state 20
    DOTS            shift and go to state 5
    LIM             shift and go to state 16
    UNKNOWN         shift and go to state 25
    ORD             shift and go to state 41

  ! BEGINBLOCK      [ reduce using rule 8 (content -> content content .) ]
  ! CHAR            [ reduce using rule 8 (content -> content content .) ]
  ! FRAC            [ reduce using rule 8 (content -> content content .) ]
  ! ROOT            [ reduce using rule 8 (content -> content content .) ]
  ! BINOP           [ reduce using rule 8 (content -> content content .) ]
  ! KBINOP          [ reduce using rule 8 (content -> content content .) ]
  ! BINREL          [ reduce using rule 8 (content -> content content .) ]
  ! KBINREL         [ reduce using rule 8 (content -> content content .) ]
  ! NOT             [ reduce using rule 8 (content -> content content .) ]
  ! FUNC            [ reduce using rule 8 (content -> content content .) ]
  ! LARGEOP         [ reduce using rule 8 (content -> content content .) ]
  ! ARROW           [ reduce using rule 8 (content -> content content .) ]
  ! DELIMITER       [ reduce using rule 8 (content -> content content .) ]
  ! KDELIMITER      [ reduce using rule 8 (content -> content content .) ]
  ! ACCENT          [ reduce using rule 8 (content -> content content .) ]
  ! STYLE           [ reduce using rule 8 (content -> content content .) ]
  ! DOTS            [ reduce using rule 8 (content -> content content .) ]
  ! LIM             [ reduce using rule 8 (content -> content content .) ]
  ! UNKNOWN         [ reduce using rule 8 (content -> content content .) ]
  ! ORD             [ reduce using rule 8 (content -> content content .) ]

    function                       shift and go to state 19
    char                           shift and go to state 4
    style                          shift and go to state 10
    frac                           shift and go to state 21
    arrow                          shift and go to state 38
    binop                          shift and go to state 23
    lim                            shift and go to state 11
    chars                          shift and go to state 24
    accent                         shift and go to state 13
    dots                           shift and go to state 1
    content                        shift and go to state 54
    delimiter                      shift and go to state 35
    command                        shift and go to state 36
    block                          shift and go to state 37
    binrel                         shift and go to state 6
    unknown                        shift and go to state 39
    not                            shift and go to state 28
    ord                            shift and go to state 30
    root                           shift and go to state 42
    larop                          shift and go to state 31
    scripted                       shift and go to state 18

state 55

    (2) start -> start content .
    (8) content -> content . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (28) scripted -> . char SUP char
    (29) scripted -> . char SUP block
    (30) scripted -> . block SUP char
    (31) scripted -> . block SUP block
    (32) scripted -> . char SUB char
    (33) scripted -> . char SUB block
    (34) scripted -> . block SUB char
    (35) scripted -> . block SUB block
    (36) scripted -> . char SUP char SUB char
    (37) scripted -> . char SUP char SUB block
    (38) scripted -> . char SUP block SUB char
    (39) scripted -> . char SUP block SUB block
    (40) scripted -> . block SUP char SUB char
    (41) scripted -> . block SUP char SUB block
    (42) scripted -> . block SUP block SUB char
    (43) scripted -> . block SUP block SUB block
    (44) scripted -> . char SUB char SUP char
    (45) scripted -> . char SUB char SUP block
    (46) scripted -> . char SUB block SUP char
    (47) scripted -> . char SUB block SUP block
    (48) scripted -> . block SUB char SUP char
    (49) scripted -> . block SUB char SUP block
    (50) scripted -> . block SUB block SUP char
    (51) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (23) command -> . accent
    (24) command -> . style
    (25) command -> . dots
    (26) command -> . lim
    (27) command -> . unknown
    (11) char -> . CHAR
    (12) char -> . ord
    (52) frac -> . FRAC char char
    (53) frac -> . FRAC char block
    (54) frac -> . FRAC block char
    (55) frac -> . FRAC block block
    (56) root -> . ROOT char
    (57) root -> . ROOT block
    (58) root -> . ROOT KDELIMITER content KDELIMITER char
    (59) root -> . ROOT KDELIMITER content KDELIMITER block
    (60) binop -> . BINOP
    (61) binop -> . KBINOP
    (62) binrel -> . BINREL
    (63) binrel -> . KBINREL
    (64) not -> . NOT
    (65) function -> . FUNC
    (66) larop -> . LARGEOP SUB char SUP char
    (67) larop -> . LARGEOP SUB char SUP block
    (68) larop -> . LARGEOP SUB block SUP char
    (69) larop -> . LARGEOP SUB block SUP block
    (70) larop -> . LARGEOP SUP char SUB char
    (71) larop -> . LARGEOP SUP char SUB block
    (72) larop -> . LARGEOP SUP block SUB char
    (73) larop -> . LARGEOP SUP block SUB block
    (74) larop -> . LARGEOP
    (75) larop -> . LARGEOP SUB char
    (76) larop -> . LARGEOP SUB block
    (77) arrow -> . ARROW
    (78) delimiter -> . DELIMITER
    (79) delimiter -> . KDELIMITER
    (80) accent -> . ACCENT char
    (81) accent -> . ACCENT block
    (82) style -> . STYLE char
    (83) style -> . STYLE block
    (84) dots -> . DOTS
    (85) lim -> . LIM
    (86) lim -> . LIM SUB char
    (87) lim -> . LIM SUB block
    (88) unknown -> . UNKNOWN
    (13) ord -> . ORD

  ! shift/reduce conflict for BEGINBLOCK resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for FRAC resolved as shift
  ! shift/reduce conflict for ROOT resolved as shift
  ! shift/reduce conflict for BINOP resolved as shift
  ! shift/reduce conflict for KBINOP resolved as shift
  ! shift/reduce conflict for BINREL resolved as shift
  ! shift/reduce conflict for KBINREL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for LARGEOP resolved as shift
  ! shift/reduce conflict for ARROW resolved as shift
  ! shift/reduce conflict for DELIMITER resolved as shift
  ! shift/reduce conflict for KDELIMITER resolved as shift
  ! shift/reduce conflict for ACCENT resolved as shift
  ! shift/reduce conflict for STYLE resolved as shift
  ! shift/reduce conflict for DOTS resolved as shift
  ! shift/reduce conflict for LIM resolved as shift
  ! shift/reduce conflict for UNKNOWN resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    $end            reduce using rule 2 (start -> start content .)
    BEGINBLOCK      shift and go to state 8
    CHAR            shift and go to state 32
    FRAC            shift and go to state 7
    ROOT            shift and go to state 17
    BINOP           shift and go to state 33
    KBINOP          shift and go to state 29
    BINREL          shift and go to state 22
    KBINREL         shift and go to state 34
    NOT             shift and go to state 40
    FUNC            shift and go to state 27
    LARGEOP         shift and go to state 12
    ARROW           shift and go to state 3
    DELIMITER       shift and go to state 26
    KDELIMITER      shift and go to state 9
    ACCENT          shift and go to state 2
    STYLE           shift and go to state 20
    DOTS            shift and go to state 5
    LIM             shift and go to state 16
    UNKNOWN         shift and go to state 25
    ORD             shift and go to state 41

  ! BEGINBLOCK      [ reduce using rule 2 (start -> start content .) ]
  ! CHAR            [ reduce using rule 2 (start -> start content .) ]
  ! FRAC            [ reduce using rule 2 (start -> start content .) ]
  ! ROOT            [ reduce using rule 2 (start -> start content .) ]
  ! BINOP           [ reduce using rule 2 (start -> start content .) ]
  ! KBINOP          [ reduce using rule 2 (start -> start content .) ]
  ! BINREL          [ reduce using rule 2 (start -> start content .) ]
  ! KBINREL         [ reduce using rule 2 (start -> start content .) ]
  ! NOT             [ reduce using rule 2 (start -> start content .) ]
  ! FUNC            [ reduce using rule 2 (start -> start content .) ]
  ! LARGEOP         [ reduce using rule 2 (start -> start content .) ]
  ! ARROW           [ reduce using rule 2 (start -> start content .) ]
  ! DELIMITER       [ reduce using rule 2 (start -> start content .) ]
  ! KDELIMITER      [ reduce using rule 2 (start -> start content .) ]
  ! ACCENT          [ reduce using rule 2 (start -> start content .) ]
  ! STYLE           [ reduce using rule 2 (start -> start content .) ]
  ! DOTS            [ reduce using rule 2 (start -> start content .) ]
  ! LIM             [ reduce using rule 2 (start -> start content .) ]
  ! UNKNOWN         [ reduce using rule 2 (start -> start content .) ]
  ! ORD             [ reduce using rule 2 (start -> start content .) ]

    dots                           shift and go to state 1
    char                           shift and go to state 4
    binrel                         shift and go to state 6
    style                          shift and go to state 10
    lim                            shift and go to state 11
    accent                         shift and go to state 13
    content                        shift and go to state 54
    scripted                       shift and go to state 18
    function                       shift and go to state 19
    frac                           shift and go to state 21
    binop                          shift and go to state 23
    chars                          shift and go to state 24
    not                            shift and go to state 28
    ord                            shift and go to state 30
    larop                          shift and go to state 31
    delimiter                      shift and go to state 35
    command                        shift and go to state 36
    arrow                          shift and go to state 38
    unknown                        shift and go to state 39
    root                           shift and go to state 42
    block                          shift and go to state 37

state 56

    (86) lim -> LIM SUB . char
    (87) lim -> LIM SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 77
    ord                            shift and go to state 30
    block                          shift and go to state 78

state 57

    (58) root -> ROOT KDELIMITER . content KDELIMITER char
    (59) root -> ROOT KDELIMITER . content KDELIMITER block
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (28) scripted -> . char SUP char
    (29) scripted -> . char SUP block
    (30) scripted -> . block SUP char
    (31) scripted -> . block SUP block
    (32) scripted -> . char SUB char
    (33) scripted -> . char SUB block
    (34) scripted -> . block SUB char
    (35) scripted -> . block SUB block
    (36) scripted -> . char SUP char SUB char
    (37) scripted -> . char SUP char SUB block
    (38) scripted -> . char SUP block SUB char
    (39) scripted -> . char SUP block SUB block
    (40) scripted -> . block SUP char SUB char
    (41) scripted -> . block SUP char SUB block
    (42) scripted -> . block SUP block SUB char
    (43) scripted -> . block SUP block SUB block
    (44) scripted -> . char SUB char SUP char
    (45) scripted -> . char SUB char SUP block
    (46) scripted -> . char SUB block SUP char
    (47) scripted -> . char SUB block SUP block
    (48) scripted -> . block SUB char SUP char
    (49) scripted -> . block SUB char SUP block
    (50) scripted -> . block SUB block SUP char
    (51) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (23) command -> . accent
    (24) command -> . style
    (25) command -> . dots
    (26) command -> . lim
    (27) command -> . unknown
    (11) char -> . CHAR
    (12) char -> . ord
    (52) frac -> . FRAC char char
    (53) frac -> . FRAC char block
    (54) frac -> . FRAC block char
    (55) frac -> . FRAC block block
    (56) root -> . ROOT char
    (57) root -> . ROOT block
    (58) root -> . ROOT KDELIMITER content KDELIMITER char
    (59) root -> . ROOT KDELIMITER content KDELIMITER block
    (60) binop -> . BINOP
    (61) binop -> . KBINOP
    (62) binrel -> . BINREL
    (63) binrel -> . KBINREL
    (64) not -> . NOT
    (65) function -> . FUNC
    (66) larop -> . LARGEOP SUB char SUP char
    (67) larop -> . LARGEOP SUB char SUP block
    (68) larop -> . LARGEOP SUB block SUP char
    (69) larop -> . LARGEOP SUB block SUP block
    (70) larop -> . LARGEOP SUP char SUB char
    (71) larop -> . LARGEOP SUP char SUB block
    (72) larop -> . LARGEOP SUP block SUB char
    (73) larop -> . LARGEOP SUP block SUB block
    (74) larop -> . LARGEOP
    (75) larop -> . LARGEOP SUB char
    (76) larop -> . LARGEOP SUB block
    (77) arrow -> . ARROW
    (78) delimiter -> . DELIMITER
    (79) delimiter -> . KDELIMITER
    (80) accent -> . ACCENT char
    (81) accent -> . ACCENT block
    (82) style -> . STYLE char
    (83) style -> . STYLE block
    (84) dots -> . DOTS
    (85) lim -> . LIM
    (86) lim -> . LIM SUB char
    (87) lim -> . LIM SUB block
    (88) unknown -> . UNKNOWN
    (13) ord -> . ORD

    BEGINBLOCK      shift and go to state 8
    CHAR            shift and go to state 32
    FRAC            shift and go to state 7
    ROOT            shift and go to state 17
    BINOP           shift and go to state 33
    KBINOP          shift and go to state 29
    BINREL          shift and go to state 22
    KBINREL         shift and go to state 34
    NOT             shift and go to state 40
    FUNC            shift and go to state 27
    LARGEOP         shift and go to state 12
    ARROW           shift and go to state 3
    DELIMITER       shift and go to state 26
    KDELIMITER      shift and go to state 9
    ACCENT          shift and go to state 2
    STYLE           shift and go to state 20
    DOTS            shift and go to state 5
    LIM             shift and go to state 16
    UNKNOWN         shift and go to state 25
    ORD             shift and go to state 41

    function                       shift and go to state 19
    char                           shift and go to state 4
    style                          shift and go to state 10
    frac                           shift and go to state 21
    arrow                          shift and go to state 38
    binop                          shift and go to state 23
    lim                            shift and go to state 11
    chars                          shift and go to state 24
    accent                         shift and go to state 13
    dots                           shift and go to state 1
    content                        shift and go to state 79
    delimiter                      shift and go to state 35
    command                        shift and go to state 36
    block                          shift and go to state 37
    binrel                         shift and go to state 6
    unknown                        shift and go to state 39
    not                            shift and go to state 28
    ord                            shift and go to state 30
    root                           shift and go to state 42
    larop                          shift and go to state 31
    scripted                       shift and go to state 18

state 58

    (56) root -> ROOT char .

    BEGINBLOCK      reduce using rule 56 (root -> ROOT char .)
    CHAR            reduce using rule 56 (root -> ROOT char .)
    FRAC            reduce using rule 56 (root -> ROOT char .)
    ROOT            reduce using rule 56 (root -> ROOT char .)
    BINOP           reduce using rule 56 (root -> ROOT char .)
    KBINOP          reduce using rule 56 (root -> ROOT char .)
    BINREL          reduce using rule 56 (root -> ROOT char .)
    KBINREL         reduce using rule 56 (root -> ROOT char .)
    NOT             reduce using rule 56 (root -> ROOT char .)
    FUNC            reduce using rule 56 (root -> ROOT char .)
    LARGEOP         reduce using rule 56 (root -> ROOT char .)
    ARROW           reduce using rule 56 (root -> ROOT char .)
    DELIMITER       reduce using rule 56 (root -> ROOT char .)
    KDELIMITER      reduce using rule 56 (root -> ROOT char .)
    ACCENT          reduce using rule 56 (root -> ROOT char .)
    STYLE           reduce using rule 56 (root -> ROOT char .)
    DOTS            reduce using rule 56 (root -> ROOT char .)
    LIM             reduce using rule 56 (root -> ROOT char .)
    UNKNOWN         reduce using rule 56 (root -> ROOT char .)
    ORD             reduce using rule 56 (root -> ROOT char .)
    $end            reduce using rule 56 (root -> ROOT char .)
    ENDBLOCK        reduce using rule 56 (root -> ROOT char .)


state 59

    (57) root -> ROOT block .

    BEGINBLOCK      reduce using rule 57 (root -> ROOT block .)
    CHAR            reduce using rule 57 (root -> ROOT block .)
    FRAC            reduce using rule 57 (root -> ROOT block .)
    ROOT            reduce using rule 57 (root -> ROOT block .)
    BINOP           reduce using rule 57 (root -> ROOT block .)
    KBINOP          reduce using rule 57 (root -> ROOT block .)
    BINREL          reduce using rule 57 (root -> ROOT block .)
    KBINREL         reduce using rule 57 (root -> ROOT block .)
    NOT             reduce using rule 57 (root -> ROOT block .)
    FUNC            reduce using rule 57 (root -> ROOT block .)
    LARGEOP         reduce using rule 57 (root -> ROOT block .)
    ARROW           reduce using rule 57 (root -> ROOT block .)
    DELIMITER       reduce using rule 57 (root -> ROOT block .)
    KDELIMITER      reduce using rule 57 (root -> ROOT block .)
    ACCENT          reduce using rule 57 (root -> ROOT block .)
    STYLE           reduce using rule 57 (root -> ROOT block .)
    DOTS            reduce using rule 57 (root -> ROOT block .)
    LIM             reduce using rule 57 (root -> ROOT block .)
    UNKNOWN         reduce using rule 57 (root -> ROOT block .)
    ORD             reduce using rule 57 (root -> ROOT block .)
    $end            reduce using rule 57 (root -> ROOT block .)
    ENDBLOCK        reduce using rule 57 (root -> ROOT block .)


state 60

    (82) style -> STYLE char .

    KDELIMITER      reduce using rule 82 (style -> STYLE char .)
    BEGINBLOCK      reduce using rule 82 (style -> STYLE char .)
    CHAR            reduce using rule 82 (style -> STYLE char .)
    FRAC            reduce using rule 82 (style -> STYLE char .)
    ROOT            reduce using rule 82 (style -> STYLE char .)
    BINOP           reduce using rule 82 (style -> STYLE char .)
    KBINOP          reduce using rule 82 (style -> STYLE char .)
    BINREL          reduce using rule 82 (style -> STYLE char .)
    KBINREL         reduce using rule 82 (style -> STYLE char .)
    NOT             reduce using rule 82 (style -> STYLE char .)
    FUNC            reduce using rule 82 (style -> STYLE char .)
    LARGEOP         reduce using rule 82 (style -> STYLE char .)
    ARROW           reduce using rule 82 (style -> STYLE char .)
    DELIMITER       reduce using rule 82 (style -> STYLE char .)
    ACCENT          reduce using rule 82 (style -> STYLE char .)
    STYLE           reduce using rule 82 (style -> STYLE char .)
    DOTS            reduce using rule 82 (style -> STYLE char .)
    LIM             reduce using rule 82 (style -> STYLE char .)
    UNKNOWN         reduce using rule 82 (style -> STYLE char .)
    ORD             reduce using rule 82 (style -> STYLE char .)
    $end            reduce using rule 82 (style -> STYLE char .)
    ENDBLOCK        reduce using rule 82 (style -> STYLE char .)


state 61

    (83) style -> STYLE block .

    KDELIMITER      reduce using rule 83 (style -> STYLE block .)
    BEGINBLOCK      reduce using rule 83 (style -> STYLE block .)
    CHAR            reduce using rule 83 (style -> STYLE block .)
    FRAC            reduce using rule 83 (style -> STYLE block .)
    ROOT            reduce using rule 83 (style -> STYLE block .)
    BINOP           reduce using rule 83 (style -> STYLE block .)
    KBINOP          reduce using rule 83 (style -> STYLE block .)
    BINREL          reduce using rule 83 (style -> STYLE block .)
    KBINREL         reduce using rule 83 (style -> STYLE block .)
    NOT             reduce using rule 83 (style -> STYLE block .)
    FUNC            reduce using rule 83 (style -> STYLE block .)
    LARGEOP         reduce using rule 83 (style -> STYLE block .)
    ARROW           reduce using rule 83 (style -> STYLE block .)
    DELIMITER       reduce using rule 83 (style -> STYLE block .)
    ACCENT          reduce using rule 83 (style -> STYLE block .)
    STYLE           reduce using rule 83 (style -> STYLE block .)
    DOTS            reduce using rule 83 (style -> STYLE block .)
    LIM             reduce using rule 83 (style -> STYLE block .)
    UNKNOWN         reduce using rule 83 (style -> STYLE block .)
    ORD             reduce using rule 83 (style -> STYLE block .)
    $end            reduce using rule 83 (style -> STYLE block .)
    ENDBLOCK        reduce using rule 83 (style -> STYLE block .)


state 62

    (34) scripted -> block SUB . char
    (35) scripted -> block SUB . block
    (48) scripted -> block SUB . char SUP char
    (49) scripted -> block SUB . char SUP block
    (50) scripted -> block SUB . block SUP char
    (51) scripted -> block SUB . block SUP block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 80
    ord                            shift and go to state 30
    block                          shift and go to state 81

state 63

    (30) scripted -> block SUP . char
    (31) scripted -> block SUP . block
    (40) scripted -> block SUP . char SUB char
    (41) scripted -> block SUP . char SUB block
    (42) scripted -> block SUP . block SUB char
    (43) scripted -> block SUP . block SUB block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 82
    ord                            shift and go to state 30
    block                          shift and go to state 83

state 64

    (32) scripted -> char SUB char .
    (44) scripted -> char SUB char . SUP char
    (45) scripted -> char SUB char . SUP block

    BEGINBLOCK      reduce using rule 32 (scripted -> char SUB char .)
    CHAR            reduce using rule 32 (scripted -> char SUB char .)
    FRAC            reduce using rule 32 (scripted -> char SUB char .)
    ROOT            reduce using rule 32 (scripted -> char SUB char .)
    BINOP           reduce using rule 32 (scripted -> char SUB char .)
    KBINOP          reduce using rule 32 (scripted -> char SUB char .)
    BINREL          reduce using rule 32 (scripted -> char SUB char .)
    KBINREL         reduce using rule 32 (scripted -> char SUB char .)
    NOT             reduce using rule 32 (scripted -> char SUB char .)
    FUNC            reduce using rule 32 (scripted -> char SUB char .)
    LARGEOP         reduce using rule 32 (scripted -> char SUB char .)
    ARROW           reduce using rule 32 (scripted -> char SUB char .)
    DELIMITER       reduce using rule 32 (scripted -> char SUB char .)
    KDELIMITER      reduce using rule 32 (scripted -> char SUB char .)
    ACCENT          reduce using rule 32 (scripted -> char SUB char .)
    STYLE           reduce using rule 32 (scripted -> char SUB char .)
    DOTS            reduce using rule 32 (scripted -> char SUB char .)
    LIM             reduce using rule 32 (scripted -> char SUB char .)
    UNKNOWN         reduce using rule 32 (scripted -> char SUB char .)
    ORD             reduce using rule 32 (scripted -> char SUB char .)
    $end            reduce using rule 32 (scripted -> char SUB char .)
    ENDBLOCK        reduce using rule 32 (scripted -> char SUB char .)
    SUP             shift and go to state 84


state 65

    (33) scripted -> char SUB block .
    (46) scripted -> char SUB block . SUP char
    (47) scripted -> char SUB block . SUP block

    BEGINBLOCK      reduce using rule 33 (scripted -> char SUB block .)
    CHAR            reduce using rule 33 (scripted -> char SUB block .)
    FRAC            reduce using rule 33 (scripted -> char SUB block .)
    ROOT            reduce using rule 33 (scripted -> char SUB block .)
    BINOP           reduce using rule 33 (scripted -> char SUB block .)
    KBINOP          reduce using rule 33 (scripted -> char SUB block .)
    BINREL          reduce using rule 33 (scripted -> char SUB block .)
    KBINREL         reduce using rule 33 (scripted -> char SUB block .)
    NOT             reduce using rule 33 (scripted -> char SUB block .)
    FUNC            reduce using rule 33 (scripted -> char SUB block .)
    LARGEOP         reduce using rule 33 (scripted -> char SUB block .)
    ARROW           reduce using rule 33 (scripted -> char SUB block .)
    DELIMITER       reduce using rule 33 (scripted -> char SUB block .)
    KDELIMITER      reduce using rule 33 (scripted -> char SUB block .)
    ACCENT          reduce using rule 33 (scripted -> char SUB block .)
    STYLE           reduce using rule 33 (scripted -> char SUB block .)
    DOTS            reduce using rule 33 (scripted -> char SUB block .)
    LIM             reduce using rule 33 (scripted -> char SUB block .)
    UNKNOWN         reduce using rule 33 (scripted -> char SUB block .)
    ORD             reduce using rule 33 (scripted -> char SUB block .)
    $end            reduce using rule 33 (scripted -> char SUB block .)
    ENDBLOCK        reduce using rule 33 (scripted -> char SUB block .)
    SUP             shift and go to state 85


state 66

    (28) scripted -> char SUP char .
    (36) scripted -> char SUP char . SUB char
    (37) scripted -> char SUP char . SUB block

    BEGINBLOCK      reduce using rule 28 (scripted -> char SUP char .)
    CHAR            reduce using rule 28 (scripted -> char SUP char .)
    FRAC            reduce using rule 28 (scripted -> char SUP char .)
    ROOT            reduce using rule 28 (scripted -> char SUP char .)
    BINOP           reduce using rule 28 (scripted -> char SUP char .)
    KBINOP          reduce using rule 28 (scripted -> char SUP char .)
    BINREL          reduce using rule 28 (scripted -> char SUP char .)
    KBINREL         reduce using rule 28 (scripted -> char SUP char .)
    NOT             reduce using rule 28 (scripted -> char SUP char .)
    FUNC            reduce using rule 28 (scripted -> char SUP char .)
    LARGEOP         reduce using rule 28 (scripted -> char SUP char .)
    ARROW           reduce using rule 28 (scripted -> char SUP char .)
    DELIMITER       reduce using rule 28 (scripted -> char SUP char .)
    KDELIMITER      reduce using rule 28 (scripted -> char SUP char .)
    ACCENT          reduce using rule 28 (scripted -> char SUP char .)
    STYLE           reduce using rule 28 (scripted -> char SUP char .)
    DOTS            reduce using rule 28 (scripted -> char SUP char .)
    LIM             reduce using rule 28 (scripted -> char SUP char .)
    UNKNOWN         reduce using rule 28 (scripted -> char SUP char .)
    ORD             reduce using rule 28 (scripted -> char SUP char .)
    $end            reduce using rule 28 (scripted -> char SUP char .)
    ENDBLOCK        reduce using rule 28 (scripted -> char SUP char .)
    SUB             shift and go to state 86


state 67

    (29) scripted -> char SUP block .
    (38) scripted -> char SUP block . SUB char
    (39) scripted -> char SUP block . SUB block

    BEGINBLOCK      reduce using rule 29 (scripted -> char SUP block .)
    CHAR            reduce using rule 29 (scripted -> char SUP block .)
    FRAC            reduce using rule 29 (scripted -> char SUP block .)
    ROOT            reduce using rule 29 (scripted -> char SUP block .)
    BINOP           reduce using rule 29 (scripted -> char SUP block .)
    KBINOP          reduce using rule 29 (scripted -> char SUP block .)
    BINREL          reduce using rule 29 (scripted -> char SUP block .)
    KBINREL         reduce using rule 29 (scripted -> char SUP block .)
    NOT             reduce using rule 29 (scripted -> char SUP block .)
    FUNC            reduce using rule 29 (scripted -> char SUP block .)
    LARGEOP         reduce using rule 29 (scripted -> char SUP block .)
    ARROW           reduce using rule 29 (scripted -> char SUP block .)
    DELIMITER       reduce using rule 29 (scripted -> char SUP block .)
    KDELIMITER      reduce using rule 29 (scripted -> char SUP block .)
    ACCENT          reduce using rule 29 (scripted -> char SUP block .)
    STYLE           reduce using rule 29 (scripted -> char SUP block .)
    DOTS            reduce using rule 29 (scripted -> char SUP block .)
    LIM             reduce using rule 29 (scripted -> char SUP block .)
    UNKNOWN         reduce using rule 29 (scripted -> char SUP block .)
    ORD             reduce using rule 29 (scripted -> char SUP block .)
    $end            reduce using rule 29 (scripted -> char SUP block .)
    ENDBLOCK        reduce using rule 29 (scripted -> char SUP block .)
    SUB             shift and go to state 87


state 68

    (52) frac -> FRAC char char .

    BEGINBLOCK      reduce using rule 52 (frac -> FRAC char char .)
    CHAR            reduce using rule 52 (frac -> FRAC char char .)
    FRAC            reduce using rule 52 (frac -> FRAC char char .)
    ROOT            reduce using rule 52 (frac -> FRAC char char .)
    BINOP           reduce using rule 52 (frac -> FRAC char char .)
    KBINOP          reduce using rule 52 (frac -> FRAC char char .)
    BINREL          reduce using rule 52 (frac -> FRAC char char .)
    KBINREL         reduce using rule 52 (frac -> FRAC char char .)
    NOT             reduce using rule 52 (frac -> FRAC char char .)
    FUNC            reduce using rule 52 (frac -> FRAC char char .)
    LARGEOP         reduce using rule 52 (frac -> FRAC char char .)
    ARROW           reduce using rule 52 (frac -> FRAC char char .)
    DELIMITER       reduce using rule 52 (frac -> FRAC char char .)
    KDELIMITER      reduce using rule 52 (frac -> FRAC char char .)
    ACCENT          reduce using rule 52 (frac -> FRAC char char .)
    STYLE           reduce using rule 52 (frac -> FRAC char char .)
    DOTS            reduce using rule 52 (frac -> FRAC char char .)
    LIM             reduce using rule 52 (frac -> FRAC char char .)
    UNKNOWN         reduce using rule 52 (frac -> FRAC char char .)
    ORD             reduce using rule 52 (frac -> FRAC char char .)
    $end            reduce using rule 52 (frac -> FRAC char char .)
    ENDBLOCK        reduce using rule 52 (frac -> FRAC char char .)


state 69

    (53) frac -> FRAC char block .

    BEGINBLOCK      reduce using rule 53 (frac -> FRAC char block .)
    CHAR            reduce using rule 53 (frac -> FRAC char block .)
    FRAC            reduce using rule 53 (frac -> FRAC char block .)
    ROOT            reduce using rule 53 (frac -> FRAC char block .)
    BINOP           reduce using rule 53 (frac -> FRAC char block .)
    KBINOP          reduce using rule 53 (frac -> FRAC char block .)
    BINREL          reduce using rule 53 (frac -> FRAC char block .)
    KBINREL         reduce using rule 53 (frac -> FRAC char block .)
    NOT             reduce using rule 53 (frac -> FRAC char block .)
    FUNC            reduce using rule 53 (frac -> FRAC char block .)
    LARGEOP         reduce using rule 53 (frac -> FRAC char block .)
    ARROW           reduce using rule 53 (frac -> FRAC char block .)
    DELIMITER       reduce using rule 53 (frac -> FRAC char block .)
    KDELIMITER      reduce using rule 53 (frac -> FRAC char block .)
    ACCENT          reduce using rule 53 (frac -> FRAC char block .)
    STYLE           reduce using rule 53 (frac -> FRAC char block .)
    DOTS            reduce using rule 53 (frac -> FRAC char block .)
    LIM             reduce using rule 53 (frac -> FRAC char block .)
    UNKNOWN         reduce using rule 53 (frac -> FRAC char block .)
    ORD             reduce using rule 53 (frac -> FRAC char block .)
    $end            reduce using rule 53 (frac -> FRAC char block .)
    ENDBLOCK        reduce using rule 53 (frac -> FRAC char block .)


state 70

    (54) frac -> FRAC block char .

    BEGINBLOCK      reduce using rule 54 (frac -> FRAC block char .)
    CHAR            reduce using rule 54 (frac -> FRAC block char .)
    FRAC            reduce using rule 54 (frac -> FRAC block char .)
    ROOT            reduce using rule 54 (frac -> FRAC block char .)
    BINOP           reduce using rule 54 (frac -> FRAC block char .)
    KBINOP          reduce using rule 54 (frac -> FRAC block char .)
    BINREL          reduce using rule 54 (frac -> FRAC block char .)
    KBINREL         reduce using rule 54 (frac -> FRAC block char .)
    NOT             reduce using rule 54 (frac -> FRAC block char .)
    FUNC            reduce using rule 54 (frac -> FRAC block char .)
    LARGEOP         reduce using rule 54 (frac -> FRAC block char .)
    ARROW           reduce using rule 54 (frac -> FRAC block char .)
    DELIMITER       reduce using rule 54 (frac -> FRAC block char .)
    KDELIMITER      reduce using rule 54 (frac -> FRAC block char .)
    ACCENT          reduce using rule 54 (frac -> FRAC block char .)
    STYLE           reduce using rule 54 (frac -> FRAC block char .)
    DOTS            reduce using rule 54 (frac -> FRAC block char .)
    LIM             reduce using rule 54 (frac -> FRAC block char .)
    UNKNOWN         reduce using rule 54 (frac -> FRAC block char .)
    ORD             reduce using rule 54 (frac -> FRAC block char .)
    $end            reduce using rule 54 (frac -> FRAC block char .)
    ENDBLOCK        reduce using rule 54 (frac -> FRAC block char .)


state 71

    (55) frac -> FRAC block block .

    BEGINBLOCK      reduce using rule 55 (frac -> FRAC block block .)
    CHAR            reduce using rule 55 (frac -> FRAC block block .)
    FRAC            reduce using rule 55 (frac -> FRAC block block .)
    ROOT            reduce using rule 55 (frac -> FRAC block block .)
    BINOP           reduce using rule 55 (frac -> FRAC block block .)
    KBINOP          reduce using rule 55 (frac -> FRAC block block .)
    BINREL          reduce using rule 55 (frac -> FRAC block block .)
    KBINREL         reduce using rule 55 (frac -> FRAC block block .)
    NOT             reduce using rule 55 (frac -> FRAC block block .)
    FUNC            reduce using rule 55 (frac -> FRAC block block .)
    LARGEOP         reduce using rule 55 (frac -> FRAC block block .)
    ARROW           reduce using rule 55 (frac -> FRAC block block .)
    DELIMITER       reduce using rule 55 (frac -> FRAC block block .)
    KDELIMITER      reduce using rule 55 (frac -> FRAC block block .)
    ACCENT          reduce using rule 55 (frac -> FRAC block block .)
    STYLE           reduce using rule 55 (frac -> FRAC block block .)
    DOTS            reduce using rule 55 (frac -> FRAC block block .)
    LIM             reduce using rule 55 (frac -> FRAC block block .)
    UNKNOWN         reduce using rule 55 (frac -> FRAC block block .)
    ORD             reduce using rule 55 (frac -> FRAC block block .)
    $end            reduce using rule 55 (frac -> FRAC block block .)
    ENDBLOCK        reduce using rule 55 (frac -> FRAC block block .)


state 72

    (3) block -> BEGINBLOCK content ENDBLOCK .

    BEGINBLOCK      reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    CHAR            reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    FRAC            reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    ROOT            reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    BINOP           reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    KBINOP          reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    BINREL          reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    KBINREL         reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    NOT             reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    FUNC            reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    LARGEOP         reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    ARROW           reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    DELIMITER       reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    KDELIMITER      reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    ACCENT          reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    STYLE           reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    DOTS            reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    LIM             reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    UNKNOWN         reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    ORD             reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    $end            reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    ENDBLOCK        reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    SUP             reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)
    SUB             reduce using rule 3 (block -> BEGINBLOCK content ENDBLOCK .)


state 73

    (70) larop -> LARGEOP SUP char . SUB char
    (71) larop -> LARGEOP SUP char . SUB block

    SUB             shift and go to state 88


state 74

    (72) larop -> LARGEOP SUP block . SUB char
    (73) larop -> LARGEOP SUP block . SUB block

    SUB             shift and go to state 89


state 75

    (66) larop -> LARGEOP SUB char . SUP char
    (67) larop -> LARGEOP SUB char . SUP block
    (75) larop -> LARGEOP SUB char .

    SUP             shift and go to state 90
    BEGINBLOCK      reduce using rule 75 (larop -> LARGEOP SUB char .)
    CHAR            reduce using rule 75 (larop -> LARGEOP SUB char .)
    FRAC            reduce using rule 75 (larop -> LARGEOP SUB char .)
    ROOT            reduce using rule 75 (larop -> LARGEOP SUB char .)
    BINOP           reduce using rule 75 (larop -> LARGEOP SUB char .)
    KBINOP          reduce using rule 75 (larop -> LARGEOP SUB char .)
    BINREL          reduce using rule 75 (larop -> LARGEOP SUB char .)
    KBINREL         reduce using rule 75 (larop -> LARGEOP SUB char .)
    NOT             reduce using rule 75 (larop -> LARGEOP SUB char .)
    FUNC            reduce using rule 75 (larop -> LARGEOP SUB char .)
    LARGEOP         reduce using rule 75 (larop -> LARGEOP SUB char .)
    ARROW           reduce using rule 75 (larop -> LARGEOP SUB char .)
    DELIMITER       reduce using rule 75 (larop -> LARGEOP SUB char .)
    KDELIMITER      reduce using rule 75 (larop -> LARGEOP SUB char .)
    ACCENT          reduce using rule 75 (larop -> LARGEOP SUB char .)
    STYLE           reduce using rule 75 (larop -> LARGEOP SUB char .)
    DOTS            reduce using rule 75 (larop -> LARGEOP SUB char .)
    LIM             reduce using rule 75 (larop -> LARGEOP SUB char .)
    UNKNOWN         reduce using rule 75 (larop -> LARGEOP SUB char .)
    ORD             reduce using rule 75 (larop -> LARGEOP SUB char .)
    $end            reduce using rule 75 (larop -> LARGEOP SUB char .)
    ENDBLOCK        reduce using rule 75 (larop -> LARGEOP SUB char .)


state 76

    (68) larop -> LARGEOP SUB block . SUP char
    (69) larop -> LARGEOP SUB block . SUP block
    (76) larop -> LARGEOP SUB block .

    SUP             shift and go to state 91
    BEGINBLOCK      reduce using rule 76 (larop -> LARGEOP SUB block .)
    CHAR            reduce using rule 76 (larop -> LARGEOP SUB block .)
    FRAC            reduce using rule 76 (larop -> LARGEOP SUB block .)
    ROOT            reduce using rule 76 (larop -> LARGEOP SUB block .)
    BINOP           reduce using rule 76 (larop -> LARGEOP SUB block .)
    KBINOP          reduce using rule 76 (larop -> LARGEOP SUB block .)
    BINREL          reduce using rule 76 (larop -> LARGEOP SUB block .)
    KBINREL         reduce using rule 76 (larop -> LARGEOP SUB block .)
    NOT             reduce using rule 76 (larop -> LARGEOP SUB block .)
    FUNC            reduce using rule 76 (larop -> LARGEOP SUB block .)
    LARGEOP         reduce using rule 76 (larop -> LARGEOP SUB block .)
    ARROW           reduce using rule 76 (larop -> LARGEOP SUB block .)
    DELIMITER       reduce using rule 76 (larop -> LARGEOP SUB block .)
    KDELIMITER      reduce using rule 76 (larop -> LARGEOP SUB block .)
    ACCENT          reduce using rule 76 (larop -> LARGEOP SUB block .)
    STYLE           reduce using rule 76 (larop -> LARGEOP SUB block .)
    DOTS            reduce using rule 76 (larop -> LARGEOP SUB block .)
    LIM             reduce using rule 76 (larop -> LARGEOP SUB block .)
    UNKNOWN         reduce using rule 76 (larop -> LARGEOP SUB block .)
    ORD             reduce using rule 76 (larop -> LARGEOP SUB block .)
    $end            reduce using rule 76 (larop -> LARGEOP SUB block .)
    ENDBLOCK        reduce using rule 76 (larop -> LARGEOP SUB block .)


state 77

    (86) lim -> LIM SUB char .

    BEGINBLOCK      reduce using rule 86 (lim -> LIM SUB char .)
    CHAR            reduce using rule 86 (lim -> LIM SUB char .)
    FRAC            reduce using rule 86 (lim -> LIM SUB char .)
    ROOT            reduce using rule 86 (lim -> LIM SUB char .)
    BINOP           reduce using rule 86 (lim -> LIM SUB char .)
    KBINOP          reduce using rule 86 (lim -> LIM SUB char .)
    BINREL          reduce using rule 86 (lim -> LIM SUB char .)
    KBINREL         reduce using rule 86 (lim -> LIM SUB char .)
    NOT             reduce using rule 86 (lim -> LIM SUB char .)
    FUNC            reduce using rule 86 (lim -> LIM SUB char .)
    LARGEOP         reduce using rule 86 (lim -> LIM SUB char .)
    ARROW           reduce using rule 86 (lim -> LIM SUB char .)
    DELIMITER       reduce using rule 86 (lim -> LIM SUB char .)
    KDELIMITER      reduce using rule 86 (lim -> LIM SUB char .)
    ACCENT          reduce using rule 86 (lim -> LIM SUB char .)
    STYLE           reduce using rule 86 (lim -> LIM SUB char .)
    DOTS            reduce using rule 86 (lim -> LIM SUB char .)
    LIM             reduce using rule 86 (lim -> LIM SUB char .)
    UNKNOWN         reduce using rule 86 (lim -> LIM SUB char .)
    ORD             reduce using rule 86 (lim -> LIM SUB char .)
    $end            reduce using rule 86 (lim -> LIM SUB char .)
    ENDBLOCK        reduce using rule 86 (lim -> LIM SUB char .)


state 78

    (87) lim -> LIM SUB block .

    BEGINBLOCK      reduce using rule 87 (lim -> LIM SUB block .)
    CHAR            reduce using rule 87 (lim -> LIM SUB block .)
    FRAC            reduce using rule 87 (lim -> LIM SUB block .)
    ROOT            reduce using rule 87 (lim -> LIM SUB block .)
    BINOP           reduce using rule 87 (lim -> LIM SUB block .)
    KBINOP          reduce using rule 87 (lim -> LIM SUB block .)
    BINREL          reduce using rule 87 (lim -> LIM SUB block .)
    KBINREL         reduce using rule 87 (lim -> LIM SUB block .)
    NOT             reduce using rule 87 (lim -> LIM SUB block .)
    FUNC            reduce using rule 87 (lim -> LIM SUB block .)
    LARGEOP         reduce using rule 87 (lim -> LIM SUB block .)
    ARROW           reduce using rule 87 (lim -> LIM SUB block .)
    DELIMITER       reduce using rule 87 (lim -> LIM SUB block .)
    KDELIMITER      reduce using rule 87 (lim -> LIM SUB block .)
    ACCENT          reduce using rule 87 (lim -> LIM SUB block .)
    STYLE           reduce using rule 87 (lim -> LIM SUB block .)
    DOTS            reduce using rule 87 (lim -> LIM SUB block .)
    LIM             reduce using rule 87 (lim -> LIM SUB block .)
    UNKNOWN         reduce using rule 87 (lim -> LIM SUB block .)
    ORD             reduce using rule 87 (lim -> LIM SUB block .)
    $end            reduce using rule 87 (lim -> LIM SUB block .)
    ENDBLOCK        reduce using rule 87 (lim -> LIM SUB block .)


state 79

    (58) root -> ROOT KDELIMITER content . KDELIMITER char
    (59) root -> ROOT KDELIMITER content . KDELIMITER block
    (8) content -> content . content
    (4) content -> . chars
    (5) content -> . block
    (6) content -> . scripted
    (7) content -> . command
    (8) content -> . content content
    (9) chars -> . char
    (10) chars -> . char chars
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (28) scripted -> . char SUP char
    (29) scripted -> . char SUP block
    (30) scripted -> . block SUP char
    (31) scripted -> . block SUP block
    (32) scripted -> . char SUB char
    (33) scripted -> . char SUB block
    (34) scripted -> . block SUB char
    (35) scripted -> . block SUB block
    (36) scripted -> . char SUP char SUB char
    (37) scripted -> . char SUP char SUB block
    (38) scripted -> . char SUP block SUB char
    (39) scripted -> . char SUP block SUB block
    (40) scripted -> . block SUP char SUB char
    (41) scripted -> . block SUP char SUB block
    (42) scripted -> . block SUP block SUB char
    (43) scripted -> . block SUP block SUB block
    (44) scripted -> . char SUB char SUP char
    (45) scripted -> . char SUB char SUP block
    (46) scripted -> . char SUB block SUP char
    (47) scripted -> . char SUB block SUP block
    (48) scripted -> . block SUB char SUP char
    (49) scripted -> . block SUB char SUP block
    (50) scripted -> . block SUB block SUP char
    (51) scripted -> . block SUB block SUP block
    (14) command -> . frac
    (15) command -> . root
    (16) command -> . binop
    (17) command -> . binrel
    (18) command -> . not
    (19) command -> . function
    (20) command -> . larop
    (21) command -> . arrow
    (22) command -> . delimiter
    (23) command -> . accent
    (24) command -> . style
    (25) command -> . dots
    (26) command -> . lim
    (27) command -> . unknown
    (11) char -> . CHAR
    (12) char -> . ord
    (52) frac -> . FRAC char char
    (53) frac -> . FRAC char block
    (54) frac -> . FRAC block char
    (55) frac -> . FRAC block block
    (56) root -> . ROOT char
    (57) root -> . ROOT block
    (58) root -> . ROOT KDELIMITER content KDELIMITER char
    (59) root -> . ROOT KDELIMITER content KDELIMITER block
    (60) binop -> . BINOP
    (61) binop -> . KBINOP
    (62) binrel -> . BINREL
    (63) binrel -> . KBINREL
    (64) not -> . NOT
    (65) function -> . FUNC
    (66) larop -> . LARGEOP SUB char SUP char
    (67) larop -> . LARGEOP SUB char SUP block
    (68) larop -> . LARGEOP SUB block SUP char
    (69) larop -> . LARGEOP SUB block SUP block
    (70) larop -> . LARGEOP SUP char SUB char
    (71) larop -> . LARGEOP SUP char SUB block
    (72) larop -> . LARGEOP SUP block SUB char
    (73) larop -> . LARGEOP SUP block SUB block
    (74) larop -> . LARGEOP
    (75) larop -> . LARGEOP SUB char
    (76) larop -> . LARGEOP SUB block
    (77) arrow -> . ARROW
    (78) delimiter -> . DELIMITER
    (79) delimiter -> . KDELIMITER
    (80) accent -> . ACCENT char
    (81) accent -> . ACCENT block
    (82) style -> . STYLE char
    (83) style -> . STYLE block
    (84) dots -> . DOTS
    (85) lim -> . LIM
    (86) lim -> . LIM SUB char
    (87) lim -> . LIM SUB block
    (88) unknown -> . UNKNOWN
    (13) ord -> . ORD

    KDELIMITER      shift and go to state 92
    BEGINBLOCK      shift and go to state 8
    CHAR            shift and go to state 32
    FRAC            shift and go to state 7
    ROOT            shift and go to state 17
    BINOP           shift and go to state 33
    KBINOP          shift and go to state 29
    BINREL          shift and go to state 22
    KBINREL         shift and go to state 34
    NOT             shift and go to state 40
    FUNC            shift and go to state 27
    LARGEOP         shift and go to state 12
    ARROW           shift and go to state 3
    DELIMITER       shift and go to state 26
    ACCENT          shift and go to state 2
    STYLE           shift and go to state 20
    DOTS            shift and go to state 5
    LIM             shift and go to state 16
    UNKNOWN         shift and go to state 25
    ORD             shift and go to state 41

    function                       shift and go to state 19
    char                           shift and go to state 4
    style                          shift and go to state 10
    frac                           shift and go to state 21
    arrow                          shift and go to state 38
    binop                          shift and go to state 23
    lim                            shift and go to state 11
    chars                          shift and go to state 24
    accent                         shift and go to state 13
    dots                           shift and go to state 1
    content                        shift and go to state 54
    delimiter                      shift and go to state 35
    command                        shift and go to state 36
    block                          shift and go to state 37
    binrel                         shift and go to state 6
    unknown                        shift and go to state 39
    not                            shift and go to state 28
    ord                            shift and go to state 30
    root                           shift and go to state 42
    larop                          shift and go to state 31
    scripted                       shift and go to state 18

state 80

    (34) scripted -> block SUB char .
    (48) scripted -> block SUB char . SUP char
    (49) scripted -> block SUB char . SUP block

    BEGINBLOCK      reduce using rule 34 (scripted -> block SUB char .)
    CHAR            reduce using rule 34 (scripted -> block SUB char .)
    FRAC            reduce using rule 34 (scripted -> block SUB char .)
    ROOT            reduce using rule 34 (scripted -> block SUB char .)
    BINOP           reduce using rule 34 (scripted -> block SUB char .)
    KBINOP          reduce using rule 34 (scripted -> block SUB char .)
    BINREL          reduce using rule 34 (scripted -> block SUB char .)
    KBINREL         reduce using rule 34 (scripted -> block SUB char .)
    NOT             reduce using rule 34 (scripted -> block SUB char .)
    FUNC            reduce using rule 34 (scripted -> block SUB char .)
    LARGEOP         reduce using rule 34 (scripted -> block SUB char .)
    ARROW           reduce using rule 34 (scripted -> block SUB char .)
    DELIMITER       reduce using rule 34 (scripted -> block SUB char .)
    KDELIMITER      reduce using rule 34 (scripted -> block SUB char .)
    ACCENT          reduce using rule 34 (scripted -> block SUB char .)
    STYLE           reduce using rule 34 (scripted -> block SUB char .)
    DOTS            reduce using rule 34 (scripted -> block SUB char .)
    LIM             reduce using rule 34 (scripted -> block SUB char .)
    UNKNOWN         reduce using rule 34 (scripted -> block SUB char .)
    ORD             reduce using rule 34 (scripted -> block SUB char .)
    $end            reduce using rule 34 (scripted -> block SUB char .)
    ENDBLOCK        reduce using rule 34 (scripted -> block SUB char .)
    SUP             shift and go to state 93


state 81

    (35) scripted -> block SUB block .
    (50) scripted -> block SUB block . SUP char
    (51) scripted -> block SUB block . SUP block

    BEGINBLOCK      reduce using rule 35 (scripted -> block SUB block .)
    CHAR            reduce using rule 35 (scripted -> block SUB block .)
    FRAC            reduce using rule 35 (scripted -> block SUB block .)
    ROOT            reduce using rule 35 (scripted -> block SUB block .)
    BINOP           reduce using rule 35 (scripted -> block SUB block .)
    KBINOP          reduce using rule 35 (scripted -> block SUB block .)
    BINREL          reduce using rule 35 (scripted -> block SUB block .)
    KBINREL         reduce using rule 35 (scripted -> block SUB block .)
    NOT             reduce using rule 35 (scripted -> block SUB block .)
    FUNC            reduce using rule 35 (scripted -> block SUB block .)
    LARGEOP         reduce using rule 35 (scripted -> block SUB block .)
    ARROW           reduce using rule 35 (scripted -> block SUB block .)
    DELIMITER       reduce using rule 35 (scripted -> block SUB block .)
    KDELIMITER      reduce using rule 35 (scripted -> block SUB block .)
    ACCENT          reduce using rule 35 (scripted -> block SUB block .)
    STYLE           reduce using rule 35 (scripted -> block SUB block .)
    DOTS            reduce using rule 35 (scripted -> block SUB block .)
    LIM             reduce using rule 35 (scripted -> block SUB block .)
    UNKNOWN         reduce using rule 35 (scripted -> block SUB block .)
    ORD             reduce using rule 35 (scripted -> block SUB block .)
    $end            reduce using rule 35 (scripted -> block SUB block .)
    ENDBLOCK        reduce using rule 35 (scripted -> block SUB block .)
    SUP             shift and go to state 94


state 82

    (30) scripted -> block SUP char .
    (40) scripted -> block SUP char . SUB char
    (41) scripted -> block SUP char . SUB block

    BEGINBLOCK      reduce using rule 30 (scripted -> block SUP char .)
    CHAR            reduce using rule 30 (scripted -> block SUP char .)
    FRAC            reduce using rule 30 (scripted -> block SUP char .)
    ROOT            reduce using rule 30 (scripted -> block SUP char .)
    BINOP           reduce using rule 30 (scripted -> block SUP char .)
    KBINOP          reduce using rule 30 (scripted -> block SUP char .)
    BINREL          reduce using rule 30 (scripted -> block SUP char .)
    KBINREL         reduce using rule 30 (scripted -> block SUP char .)
    NOT             reduce using rule 30 (scripted -> block SUP char .)
    FUNC            reduce using rule 30 (scripted -> block SUP char .)
    LARGEOP         reduce using rule 30 (scripted -> block SUP char .)
    ARROW           reduce using rule 30 (scripted -> block SUP char .)
    DELIMITER       reduce using rule 30 (scripted -> block SUP char .)
    KDELIMITER      reduce using rule 30 (scripted -> block SUP char .)
    ACCENT          reduce using rule 30 (scripted -> block SUP char .)
    STYLE           reduce using rule 30 (scripted -> block SUP char .)
    DOTS            reduce using rule 30 (scripted -> block SUP char .)
    LIM             reduce using rule 30 (scripted -> block SUP char .)
    UNKNOWN         reduce using rule 30 (scripted -> block SUP char .)
    ORD             reduce using rule 30 (scripted -> block SUP char .)
    $end            reduce using rule 30 (scripted -> block SUP char .)
    ENDBLOCK        reduce using rule 30 (scripted -> block SUP char .)
    SUB             shift and go to state 95


state 83

    (31) scripted -> block SUP block .
    (42) scripted -> block SUP block . SUB char
    (43) scripted -> block SUP block . SUB block

    BEGINBLOCK      reduce using rule 31 (scripted -> block SUP block .)
    CHAR            reduce using rule 31 (scripted -> block SUP block .)
    FRAC            reduce using rule 31 (scripted -> block SUP block .)
    ROOT            reduce using rule 31 (scripted -> block SUP block .)
    BINOP           reduce using rule 31 (scripted -> block SUP block .)
    KBINOP          reduce using rule 31 (scripted -> block SUP block .)
    BINREL          reduce using rule 31 (scripted -> block SUP block .)
    KBINREL         reduce using rule 31 (scripted -> block SUP block .)
    NOT             reduce using rule 31 (scripted -> block SUP block .)
    FUNC            reduce using rule 31 (scripted -> block SUP block .)
    LARGEOP         reduce using rule 31 (scripted -> block SUP block .)
    ARROW           reduce using rule 31 (scripted -> block SUP block .)
    DELIMITER       reduce using rule 31 (scripted -> block SUP block .)
    KDELIMITER      reduce using rule 31 (scripted -> block SUP block .)
    ACCENT          reduce using rule 31 (scripted -> block SUP block .)
    STYLE           reduce using rule 31 (scripted -> block SUP block .)
    DOTS            reduce using rule 31 (scripted -> block SUP block .)
    LIM             reduce using rule 31 (scripted -> block SUP block .)
    UNKNOWN         reduce using rule 31 (scripted -> block SUP block .)
    ORD             reduce using rule 31 (scripted -> block SUP block .)
    $end            reduce using rule 31 (scripted -> block SUP block .)
    ENDBLOCK        reduce using rule 31 (scripted -> block SUP block .)
    SUB             shift and go to state 96


state 84

    (44) scripted -> char SUB char SUP . char
    (45) scripted -> char SUB char SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 97
    ord                            shift and go to state 30
    block                          shift and go to state 98

state 85

    (46) scripted -> char SUB block SUP . char
    (47) scripted -> char SUB block SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 99
    ord                            shift and go to state 30
    block                          shift and go to state 100

state 86

    (36) scripted -> char SUP char SUB . char
    (37) scripted -> char SUP char SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 101
    ord                            shift and go to state 30
    block                          shift and go to state 102

state 87

    (38) scripted -> char SUP block SUB . char
    (39) scripted -> char SUP block SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 103
    ord                            shift and go to state 30
    block                          shift and go to state 104

state 88

    (70) larop -> LARGEOP SUP char SUB . char
    (71) larop -> LARGEOP SUP char SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 105
    ord                            shift and go to state 30
    block                          shift and go to state 106

state 89

    (72) larop -> LARGEOP SUP block SUB . char
    (73) larop -> LARGEOP SUP block SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 107
    ord                            shift and go to state 30
    block                          shift and go to state 108

state 90

    (66) larop -> LARGEOP SUB char SUP . char
    (67) larop -> LARGEOP SUB char SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 109
    ord                            shift and go to state 30
    block                          shift and go to state 110

state 91

    (68) larop -> LARGEOP SUB block SUP . char
    (69) larop -> LARGEOP SUB block SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 111
    ord                            shift and go to state 30
    block                          shift and go to state 112

state 92

    (58) root -> ROOT KDELIMITER content KDELIMITER . char
    (59) root -> ROOT KDELIMITER content KDELIMITER . block
    (79) delimiter -> KDELIMITER .
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for BEGINBLOCK resolved as shift
  ! shift/reduce conflict for ORD resolved as shift
    FRAC            reduce using rule 79 (delimiter -> KDELIMITER .)
    ROOT            reduce using rule 79 (delimiter -> KDELIMITER .)
    BINOP           reduce using rule 79 (delimiter -> KDELIMITER .)
    KBINOP          reduce using rule 79 (delimiter -> KDELIMITER .)
    BINREL          reduce using rule 79 (delimiter -> KDELIMITER .)
    KBINREL         reduce using rule 79 (delimiter -> KDELIMITER .)
    NOT             reduce using rule 79 (delimiter -> KDELIMITER .)
    FUNC            reduce using rule 79 (delimiter -> KDELIMITER .)
    LARGEOP         reduce using rule 79 (delimiter -> KDELIMITER .)
    ARROW           reduce using rule 79 (delimiter -> KDELIMITER .)
    DELIMITER       reduce using rule 79 (delimiter -> KDELIMITER .)
    KDELIMITER      reduce using rule 79 (delimiter -> KDELIMITER .)
    ACCENT          reduce using rule 79 (delimiter -> KDELIMITER .)
    STYLE           reduce using rule 79 (delimiter -> KDELIMITER .)
    DOTS            reduce using rule 79 (delimiter -> KDELIMITER .)
    LIM             reduce using rule 79 (delimiter -> KDELIMITER .)
    UNKNOWN         reduce using rule 79 (delimiter -> KDELIMITER .)
    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

  ! BEGINBLOCK      [ reduce using rule 79 (delimiter -> KDELIMITER .) ]
  ! CHAR            [ reduce using rule 79 (delimiter -> KDELIMITER .) ]
  ! ORD             [ reduce using rule 79 (delimiter -> KDELIMITER .) ]

    char                           shift and go to state 113
    ord                            shift and go to state 30
    block                          shift and go to state 114

state 93

    (48) scripted -> block SUB char SUP . char
    (49) scripted -> block SUB char SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 115
    ord                            shift and go to state 30
    block                          shift and go to state 116

state 94

    (50) scripted -> block SUB block SUP . char
    (51) scripted -> block SUB block SUP . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 117
    ord                            shift and go to state 30
    block                          shift and go to state 118

state 95

    (40) scripted -> block SUP char SUB . char
    (41) scripted -> block SUP char SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 119
    ord                            shift and go to state 30
    block                          shift and go to state 120

state 96

    (42) scripted -> block SUP block SUB . char
    (43) scripted -> block SUP block SUB . block
    (11) char -> . CHAR
    (12) char -> . ord
    (3) block -> . BEGINBLOCK content ENDBLOCK
    (13) ord -> . ORD

    CHAR            shift and go to state 32
    BEGINBLOCK      shift and go to state 8
    ORD             shift and go to state 41

    char                           shift and go to state 121
    ord                            shift and go to state 30
    block                          shift and go to state 122

state 97

    (44) scripted -> char SUB char SUP char .

    BEGINBLOCK      reduce using rule 44 (scripted -> char SUB char SUP char .)
    CHAR            reduce using rule 44 (scripted -> char SUB char SUP char .)
    FRAC            reduce using rule 44 (scripted -> char SUB char SUP char .)
    ROOT            reduce using rule 44 (scripted -> char SUB char SUP char .)
    BINOP           reduce using rule 44 (scripted -> char SUB char SUP char .)
    KBINOP          reduce using rule 44 (scripted -> char SUB char SUP char .)
    BINREL          reduce using rule 44 (scripted -> char SUB char SUP char .)
    KBINREL         reduce using rule 44 (scripted -> char SUB char SUP char .)
    NOT             reduce using rule 44 (scripted -> char SUB char SUP char .)
    FUNC            reduce using rule 44 (scripted -> char SUB char SUP char .)
    LARGEOP         reduce using rule 44 (scripted -> char SUB char SUP char .)
    ARROW           reduce using rule 44 (scripted -> char SUB char SUP char .)
    DELIMITER       reduce using rule 44 (scripted -> char SUB char SUP char .)
    KDELIMITER      reduce using rule 44 (scripted -> char SUB char SUP char .)
    ACCENT          reduce using rule 44 (scripted -> char SUB char SUP char .)
    STYLE           reduce using rule 44 (scripted -> char SUB char SUP char .)
    DOTS            reduce using rule 44 (scripted -> char SUB char SUP char .)
    LIM             reduce using rule 44 (scripted -> char SUB char SUP char .)
    UNKNOWN         reduce using rule 44 (scripted -> char SUB char SUP char .)
    ORD             reduce using rule 44 (scripted -> char SUB char SUP char .)
    $end            reduce using rule 44 (scripted -> char SUB char SUP char .)
    ENDBLOCK        reduce using rule 44 (scripted -> char SUB char SUP char .)


state 98

    (45) scripted -> char SUB char SUP block .

    BEGINBLOCK      reduce using rule 45 (scripted -> char SUB char SUP block .)
    CHAR            reduce using rule 45 (scripted -> char SUB char SUP block .)
    FRAC            reduce using rule 45 (scripted -> char SUB char SUP block .)
    ROOT            reduce using rule 45 (scripted -> char SUB char SUP block .)
    BINOP           reduce using rule 45 (scripted -> char SUB char SUP block .)
    KBINOP          reduce using rule 45 (scripted -> char SUB char SUP block .)
    BINREL          reduce using rule 45 (scripted -> char SUB char SUP block .)
    KBINREL         reduce using rule 45 (scripted -> char SUB char SUP block .)
    NOT             reduce using rule 45 (scripted -> char SUB char SUP block .)
    FUNC            reduce using rule 45 (scripted -> char SUB char SUP block .)
    LARGEOP         reduce using rule 45 (scripted -> char SUB char SUP block .)
    ARROW           reduce using rule 45 (scripted -> char SUB char SUP block .)
    DELIMITER       reduce using rule 45 (scripted -> char SUB char SUP block .)
    KDELIMITER      reduce using rule 45 (scripted -> char SUB char SUP block .)
    ACCENT          reduce using rule 45 (scripted -> char SUB char SUP block .)
    STYLE           reduce using rule 45 (scripted -> char SUB char SUP block .)
    DOTS            reduce using rule 45 (scripted -> char SUB char SUP block .)
    LIM             reduce using rule 45 (scripted -> char SUB char SUP block .)
    UNKNOWN         reduce using rule 45 (scripted -> char SUB char SUP block .)
    ORD             reduce using rule 45 (scripted -> char SUB char SUP block .)
    $end            reduce using rule 45 (scripted -> char SUB char SUP block .)
    ENDBLOCK        reduce using rule 45 (scripted -> char SUB char SUP block .)


state 99

    (46) scripted -> char SUB block SUP char .

    BEGINBLOCK      reduce using rule 46 (scripted -> char SUB block SUP char .)
    CHAR            reduce using rule 46 (scripted -> char SUB block SUP char .)
    FRAC            reduce using rule 46 (scripted -> char SUB block SUP char .)
    ROOT            reduce using rule 46 (scripted -> char SUB block SUP char .)
    BINOP           reduce using rule 46 (scripted -> char SUB block SUP char .)
    KBINOP          reduce using rule 46 (scripted -> char SUB block SUP char .)
    BINREL          reduce using rule 46 (scripted -> char SUB block SUP char .)
    KBINREL         reduce using rule 46 (scripted -> char SUB block SUP char .)
    NOT             reduce using rule 46 (scripted -> char SUB block SUP char .)
    FUNC            reduce using rule 46 (scripted -> char SUB block SUP char .)
    LARGEOP         reduce using rule 46 (scripted -> char SUB block SUP char .)
    ARROW           reduce using rule 46 (scripted -> char SUB block SUP char .)
    DELIMITER       reduce using rule 46 (scripted -> char SUB block SUP char .)
    KDELIMITER      reduce using rule 46 (scripted -> char SUB block SUP char .)
    ACCENT          reduce using rule 46 (scripted -> char SUB block SUP char .)
    STYLE           reduce using rule 46 (scripted -> char SUB block SUP char .)
    DOTS            reduce using rule 46 (scripted -> char SUB block SUP char .)
    LIM             reduce using rule 46 (scripted -> char SUB block SUP char .)
    UNKNOWN         reduce using rule 46 (scripted -> char SUB block SUP char .)
    ORD             reduce using rule 46 (scripted -> char SUB block SUP char .)
    $end            reduce using rule 46 (scripted -> char SUB block SUP char .)
    ENDBLOCK        reduce using rule 46 (scripted -> char SUB block SUP char .)


state 100

    (47) scripted -> char SUB block SUP block .

    BEGINBLOCK      reduce using rule 47 (scripted -> char SUB block SUP block .)
    CHAR            reduce using rule 47 (scripted -> char SUB block SUP block .)
    FRAC            reduce using rule 47 (scripted -> char SUB block SUP block .)
    ROOT            reduce using rule 47 (scripted -> char SUB block SUP block .)
    BINOP           reduce using rule 47 (scripted -> char SUB block SUP block .)
    KBINOP          reduce using rule 47 (scripted -> char SUB block SUP block .)
    BINREL          reduce using rule 47 (scripted -> char SUB block SUP block .)
    KBINREL         reduce using rule 47 (scripted -> char SUB block SUP block .)
    NOT             reduce using rule 47 (scripted -> char SUB block SUP block .)
    FUNC            reduce using rule 47 (scripted -> char SUB block SUP block .)
    LARGEOP         reduce using rule 47 (scripted -> char SUB block SUP block .)
    ARROW           reduce using rule 47 (scripted -> char SUB block SUP block .)
    DELIMITER       reduce using rule 47 (scripted -> char SUB block SUP block .)
    KDELIMITER      reduce using rule 47 (scripted -> char SUB block SUP block .)
    ACCENT          reduce using rule 47 (scripted -> char SUB block SUP block .)
    STYLE           reduce using rule 47 (scripted -> char SUB block SUP block .)
    DOTS            reduce using rule 47 (scripted -> char SUB block SUP block .)
    LIM             reduce using rule 47 (scripted -> char SUB block SUP block .)
    UNKNOWN         reduce using rule 47 (scripted -> char SUB block SUP block .)
    ORD             reduce using rule 47 (scripted -> char SUB block SUP block .)
    $end            reduce using rule 47 (scripted -> char SUB block SUP block .)
    ENDBLOCK        reduce using rule 47 (scripted -> char SUB block SUP block .)


state 101

    (36) scripted -> char SUP char SUB char .

    BEGINBLOCK      reduce using rule 36 (scripted -> char SUP char SUB char .)
    CHAR            reduce using rule 36 (scripted -> char SUP char SUB char .)
    FRAC            reduce using rule 36 (scripted -> char SUP char SUB char .)
    ROOT            reduce using rule 36 (scripted -> char SUP char SUB char .)
    BINOP           reduce using rule 36 (scripted -> char SUP char SUB char .)
    KBINOP          reduce using rule 36 (scripted -> char SUP char SUB char .)
    BINREL          reduce using rule 36 (scripted -> char SUP char SUB char .)
    KBINREL         reduce using rule 36 (scripted -> char SUP char SUB char .)
    NOT             reduce using rule 36 (scripted -> char SUP char SUB char .)
    FUNC            reduce using rule 36 (scripted -> char SUP char SUB char .)
    LARGEOP         reduce using rule 36 (scripted -> char SUP char SUB char .)
    ARROW           reduce using rule 36 (scripted -> char SUP char SUB char .)
    DELIMITER       reduce using rule 36 (scripted -> char SUP char SUB char .)
    KDELIMITER      reduce using rule 36 (scripted -> char SUP char SUB char .)
    ACCENT          reduce using rule 36 (scripted -> char SUP char SUB char .)
    STYLE           reduce using rule 36 (scripted -> char SUP char SUB char .)
    DOTS            reduce using rule 36 (scripted -> char SUP char SUB char .)
    LIM             reduce using rule 36 (scripted -> char SUP char SUB char .)
    UNKNOWN         reduce using rule 36 (scripted -> char SUP char SUB char .)
    ORD             reduce using rule 36 (scripted -> char SUP char SUB char .)
    $end            reduce using rule 36 (scripted -> char SUP char SUB char .)
    ENDBLOCK        reduce using rule 36 (scripted -> char SUP char SUB char .)


state 102

    (37) scripted -> char SUP char SUB block .

    BEGINBLOCK      reduce using rule 37 (scripted -> char SUP char SUB block .)
    CHAR            reduce using rule 37 (scripted -> char SUP char SUB block .)
    FRAC            reduce using rule 37 (scripted -> char SUP char SUB block .)
    ROOT            reduce using rule 37 (scripted -> char SUP char SUB block .)
    BINOP           reduce using rule 37 (scripted -> char SUP char SUB block .)
    KBINOP          reduce using rule 37 (scripted -> char SUP char SUB block .)
    BINREL          reduce using rule 37 (scripted -> char SUP char SUB block .)
    KBINREL         reduce using rule 37 (scripted -> char SUP char SUB block .)
    NOT             reduce using rule 37 (scripted -> char SUP char SUB block .)
    FUNC            reduce using rule 37 (scripted -> char SUP char SUB block .)
    LARGEOP         reduce using rule 37 (scripted -> char SUP char SUB block .)
    ARROW           reduce using rule 37 (scripted -> char SUP char SUB block .)
    DELIMITER       reduce using rule 37 (scripted -> char SUP char SUB block .)
    KDELIMITER      reduce using rule 37 (scripted -> char SUP char SUB block .)
    ACCENT          reduce using rule 37 (scripted -> char SUP char SUB block .)
    STYLE           reduce using rule 37 (scripted -> char SUP char SUB block .)
    DOTS            reduce using rule 37 (scripted -> char SUP char SUB block .)
    LIM             reduce using rule 37 (scripted -> char SUP char SUB block .)
    UNKNOWN         reduce using rule 37 (scripted -> char SUP char SUB block .)
    ORD             reduce using rule 37 (scripted -> char SUP char SUB block .)
    $end            reduce using rule 37 (scripted -> char SUP char SUB block .)
    ENDBLOCK        reduce using rule 37 (scripted -> char SUP char SUB block .)


state 103

    (38) scripted -> char SUP block SUB char .

    BEGINBLOCK      reduce using rule 38 (scripted -> char SUP block SUB char .)
    CHAR            reduce using rule 38 (scripted -> char SUP block SUB char .)
    FRAC            reduce using rule 38 (scripted -> char SUP block SUB char .)
    ROOT            reduce using rule 38 (scripted -> char SUP block SUB char .)
    BINOP           reduce using rule 38 (scripted -> char SUP block SUB char .)
    KBINOP          reduce using rule 38 (scripted -> char SUP block SUB char .)
    BINREL          reduce using rule 38 (scripted -> char SUP block SUB char .)
    KBINREL         reduce using rule 38 (scripted -> char SUP block SUB char .)
    NOT             reduce using rule 38 (scripted -> char SUP block SUB char .)
    FUNC            reduce using rule 38 (scripted -> char SUP block SUB char .)
    LARGEOP         reduce using rule 38 (scripted -> char SUP block SUB char .)
    ARROW           reduce using rule 38 (scripted -> char SUP block SUB char .)
    DELIMITER       reduce using rule 38 (scripted -> char SUP block SUB char .)
    KDELIMITER      reduce using rule 38 (scripted -> char SUP block SUB char .)
    ACCENT          reduce using rule 38 (scripted -> char SUP block SUB char .)
    STYLE           reduce using rule 38 (scripted -> char SUP block SUB char .)
    DOTS            reduce using rule 38 (scripted -> char SUP block SUB char .)
    LIM             reduce using rule 38 (scripted -> char SUP block SUB char .)
    UNKNOWN         reduce using rule 38 (scripted -> char SUP block SUB char .)
    ORD             reduce using rule 38 (scripted -> char SUP block SUB char .)
    $end            reduce using rule 38 (scripted -> char SUP block SUB char .)
    ENDBLOCK        reduce using rule 38 (scripted -> char SUP block SUB char .)


state 104

    (39) scripted -> char SUP block SUB block .

    BEGINBLOCK      reduce using rule 39 (scripted -> char SUP block SUB block .)
    CHAR            reduce using rule 39 (scripted -> char SUP block SUB block .)
    FRAC            reduce using rule 39 (scripted -> char SUP block SUB block .)
    ROOT            reduce using rule 39 (scripted -> char SUP block SUB block .)
    BINOP           reduce using rule 39 (scripted -> char SUP block SUB block .)
    KBINOP          reduce using rule 39 (scripted -> char SUP block SUB block .)
    BINREL          reduce using rule 39 (scripted -> char SUP block SUB block .)
    KBINREL         reduce using rule 39 (scripted -> char SUP block SUB block .)
    NOT             reduce using rule 39 (scripted -> char SUP block SUB block .)
    FUNC            reduce using rule 39 (scripted -> char SUP block SUB block .)
    LARGEOP         reduce using rule 39 (scripted -> char SUP block SUB block .)
    ARROW           reduce using rule 39 (scripted -> char SUP block SUB block .)
    DELIMITER       reduce using rule 39 (scripted -> char SUP block SUB block .)
    KDELIMITER      reduce using rule 39 (scripted -> char SUP block SUB block .)
    ACCENT          reduce using rule 39 (scripted -> char SUP block SUB block .)
    STYLE           reduce using rule 39 (scripted -> char SUP block SUB block .)
    DOTS            reduce using rule 39 (scripted -> char SUP block SUB block .)
    LIM             reduce using rule 39 (scripted -> char SUP block SUB block .)
    UNKNOWN         reduce using rule 39 (scripted -> char SUP block SUB block .)
    ORD             reduce using rule 39 (scripted -> char SUP block SUB block .)
    $end            reduce using rule 39 (scripted -> char SUP block SUB block .)
    ENDBLOCK        reduce using rule 39 (scripted -> char SUP block SUB block .)


state 105

    (70) larop -> LARGEOP SUP char SUB char .

    BEGINBLOCK      reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    CHAR            reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    FRAC            reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    ROOT            reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    BINOP           reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    KBINOP          reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    BINREL          reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    KBINREL         reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    NOT             reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    FUNC            reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    LARGEOP         reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    ARROW           reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    DELIMITER       reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    KDELIMITER      reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    ACCENT          reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    STYLE           reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    DOTS            reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    LIM             reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    UNKNOWN         reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    ORD             reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    $end            reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)
    ENDBLOCK        reduce using rule 70 (larop -> LARGEOP SUP char SUB char .)


state 106

    (71) larop -> LARGEOP SUP char SUB block .

    BEGINBLOCK      reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    CHAR            reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    FRAC            reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    ROOT            reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    BINOP           reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    KBINOP          reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    BINREL          reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    KBINREL         reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    NOT             reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    FUNC            reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    LARGEOP         reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    ARROW           reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    DELIMITER       reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    KDELIMITER      reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    ACCENT          reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    STYLE           reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    DOTS            reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    LIM             reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    UNKNOWN         reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    ORD             reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    $end            reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)
    ENDBLOCK        reduce using rule 71 (larop -> LARGEOP SUP char SUB block .)


state 107

    (72) larop -> LARGEOP SUP block SUB char .

    BEGINBLOCK      reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    CHAR            reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    FRAC            reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    ROOT            reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    BINOP           reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    KBINOP          reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    BINREL          reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    KBINREL         reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    NOT             reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    FUNC            reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    LARGEOP         reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    ARROW           reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    DELIMITER       reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    KDELIMITER      reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    ACCENT          reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    STYLE           reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    DOTS            reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    LIM             reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    UNKNOWN         reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    ORD             reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    $end            reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)
    ENDBLOCK        reduce using rule 72 (larop -> LARGEOP SUP block SUB char .)


state 108

    (73) larop -> LARGEOP SUP block SUB block .

    BEGINBLOCK      reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    CHAR            reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    FRAC            reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    ROOT            reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    BINOP           reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    KBINOP          reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    BINREL          reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    KBINREL         reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    NOT             reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    FUNC            reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    LARGEOP         reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    ARROW           reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    DELIMITER       reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    KDELIMITER      reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    ACCENT          reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    STYLE           reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    DOTS            reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    LIM             reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    UNKNOWN         reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    ORD             reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    $end            reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)
    ENDBLOCK        reduce using rule 73 (larop -> LARGEOP SUP block SUB block .)


state 109

    (66) larop -> LARGEOP SUB char SUP char .

    BEGINBLOCK      reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    CHAR            reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    FRAC            reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    ROOT            reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    BINOP           reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    KBINOP          reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    BINREL          reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    KBINREL         reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    NOT             reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    FUNC            reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    LARGEOP         reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    ARROW           reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    DELIMITER       reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    KDELIMITER      reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    ACCENT          reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    STYLE           reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    DOTS            reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    LIM             reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    UNKNOWN         reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    ORD             reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    $end            reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)
    ENDBLOCK        reduce using rule 66 (larop -> LARGEOP SUB char SUP char .)


state 110

    (67) larop -> LARGEOP SUB char SUP block .

    BEGINBLOCK      reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    CHAR            reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    FRAC            reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    ROOT            reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    BINOP           reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    KBINOP          reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    BINREL          reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    KBINREL         reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    NOT             reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    FUNC            reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    LARGEOP         reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    ARROW           reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    DELIMITER       reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    KDELIMITER      reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    ACCENT          reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    STYLE           reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    DOTS            reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    LIM             reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    UNKNOWN         reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    ORD             reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    $end            reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)
    ENDBLOCK        reduce using rule 67 (larop -> LARGEOP SUB char SUP block .)


state 111

    (68) larop -> LARGEOP SUB block SUP char .

    BEGINBLOCK      reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    CHAR            reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    FRAC            reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    ROOT            reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    BINOP           reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    KBINOP          reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    BINREL          reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    KBINREL         reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    NOT             reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    FUNC            reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    LARGEOP         reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    ARROW           reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    DELIMITER       reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    KDELIMITER      reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    ACCENT          reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    STYLE           reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    DOTS            reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    LIM             reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    UNKNOWN         reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    ORD             reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    $end            reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)
    ENDBLOCK        reduce using rule 68 (larop -> LARGEOP SUB block SUP char .)


state 112

    (69) larop -> LARGEOP SUB block SUP block .

    BEGINBLOCK      reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    CHAR            reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    FRAC            reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    ROOT            reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    BINOP           reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    KBINOP          reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    BINREL          reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    KBINREL         reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    NOT             reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    FUNC            reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    LARGEOP         reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    ARROW           reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    DELIMITER       reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    KDELIMITER      reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    ACCENT          reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    STYLE           reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    DOTS            reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    LIM             reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    UNKNOWN         reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    ORD             reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    $end            reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)
    ENDBLOCK        reduce using rule 69 (larop -> LARGEOP SUB block SUP block .)


state 113

    (58) root -> ROOT KDELIMITER content KDELIMITER char .

    BEGINBLOCK      reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    CHAR            reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    FRAC            reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    ROOT            reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    BINOP           reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    KBINOP          reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    BINREL          reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    KBINREL         reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    NOT             reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    FUNC            reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    LARGEOP         reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    ARROW           reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    DELIMITER       reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    KDELIMITER      reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    ACCENT          reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    STYLE           reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    DOTS            reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    LIM             reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    UNKNOWN         reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    ORD             reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    $end            reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)
    ENDBLOCK        reduce using rule 58 (root -> ROOT KDELIMITER content KDELIMITER char .)


state 114

    (59) root -> ROOT KDELIMITER content KDELIMITER block .

    BEGINBLOCK      reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    CHAR            reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    FRAC            reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    ROOT            reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    BINOP           reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    KBINOP          reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    BINREL          reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    KBINREL         reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    NOT             reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    FUNC            reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    LARGEOP         reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    ARROW           reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    DELIMITER       reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    KDELIMITER      reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    ACCENT          reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    STYLE           reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    DOTS            reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    LIM             reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    UNKNOWN         reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    ORD             reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    $end            reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)
    ENDBLOCK        reduce using rule 59 (root -> ROOT KDELIMITER content KDELIMITER block .)


state 115

    (48) scripted -> block SUB char SUP char .

    BEGINBLOCK      reduce using rule 48 (scripted -> block SUB char SUP char .)
    CHAR            reduce using rule 48 (scripted -> block SUB char SUP char .)
    FRAC            reduce using rule 48 (scripted -> block SUB char SUP char .)
    ROOT            reduce using rule 48 (scripted -> block SUB char SUP char .)
    BINOP           reduce using rule 48 (scripted -> block SUB char SUP char .)
    KBINOP          reduce using rule 48 (scripted -> block SUB char SUP char .)
    BINREL          reduce using rule 48 (scripted -> block SUB char SUP char .)
    KBINREL         reduce using rule 48 (scripted -> block SUB char SUP char .)
    NOT             reduce using rule 48 (scripted -> block SUB char SUP char .)
    FUNC            reduce using rule 48 (scripted -> block SUB char SUP char .)
    LARGEOP         reduce using rule 48 (scripted -> block SUB char SUP char .)
    ARROW           reduce using rule 48 (scripted -> block SUB char SUP char .)
    DELIMITER       reduce using rule 48 (scripted -> block SUB char SUP char .)
    KDELIMITER      reduce using rule 48 (scripted -> block SUB char SUP char .)
    ACCENT          reduce using rule 48 (scripted -> block SUB char SUP char .)
    STYLE           reduce using rule 48 (scripted -> block SUB char SUP char .)
    DOTS            reduce using rule 48 (scripted -> block SUB char SUP char .)
    LIM             reduce using rule 48 (scripted -> block SUB char SUP char .)
    UNKNOWN         reduce using rule 48 (scripted -> block SUB char SUP char .)
    ORD             reduce using rule 48 (scripted -> block SUB char SUP char .)
    $end            reduce using rule 48 (scripted -> block SUB char SUP char .)
    ENDBLOCK        reduce using rule 48 (scripted -> block SUB char SUP char .)


state 116

    (49) scripted -> block SUB char SUP block .

    BEGINBLOCK      reduce using rule 49 (scripted -> block SUB char SUP block .)
    CHAR            reduce using rule 49 (scripted -> block SUB char SUP block .)
    FRAC            reduce using rule 49 (scripted -> block SUB char SUP block .)
    ROOT            reduce using rule 49 (scripted -> block SUB char SUP block .)
    BINOP           reduce using rule 49 (scripted -> block SUB char SUP block .)
    KBINOP          reduce using rule 49 (scripted -> block SUB char SUP block .)
    BINREL          reduce using rule 49 (scripted -> block SUB char SUP block .)
    KBINREL         reduce using rule 49 (scripted -> block SUB char SUP block .)
    NOT             reduce using rule 49 (scripted -> block SUB char SUP block .)
    FUNC            reduce using rule 49 (scripted -> block SUB char SUP block .)
    LARGEOP         reduce using rule 49 (scripted -> block SUB char SUP block .)
    ARROW           reduce using rule 49 (scripted -> block SUB char SUP block .)
    DELIMITER       reduce using rule 49 (scripted -> block SUB char SUP block .)
    KDELIMITER      reduce using rule 49 (scripted -> block SUB char SUP block .)
    ACCENT          reduce using rule 49 (scripted -> block SUB char SUP block .)
    STYLE           reduce using rule 49 (scripted -> block SUB char SUP block .)
    DOTS            reduce using rule 49 (scripted -> block SUB char SUP block .)
    LIM             reduce using rule 49 (scripted -> block SUB char SUP block .)
    UNKNOWN         reduce using rule 49 (scripted -> block SUB char SUP block .)
    ORD             reduce using rule 49 (scripted -> block SUB char SUP block .)
    $end            reduce using rule 49 (scripted -> block SUB char SUP block .)
    ENDBLOCK        reduce using rule 49 (scripted -> block SUB char SUP block .)


state 117

    (50) scripted -> block SUB block SUP char .

    BEGINBLOCK      reduce using rule 50 (scripted -> block SUB block SUP char .)
    CHAR            reduce using rule 50 (scripted -> block SUB block SUP char .)
    FRAC            reduce using rule 50 (scripted -> block SUB block SUP char .)
    ROOT            reduce using rule 50 (scripted -> block SUB block SUP char .)
    BINOP           reduce using rule 50 (scripted -> block SUB block SUP char .)
    KBINOP          reduce using rule 50 (scripted -> block SUB block SUP char .)
    BINREL          reduce using rule 50 (scripted -> block SUB block SUP char .)
    KBINREL         reduce using rule 50 (scripted -> block SUB block SUP char .)
    NOT             reduce using rule 50 (scripted -> block SUB block SUP char .)
    FUNC            reduce using rule 50 (scripted -> block SUB block SUP char .)
    LARGEOP         reduce using rule 50 (scripted -> block SUB block SUP char .)
    ARROW           reduce using rule 50 (scripted -> block SUB block SUP char .)
    DELIMITER       reduce using rule 50 (scripted -> block SUB block SUP char .)
    KDELIMITER      reduce using rule 50 (scripted -> block SUB block SUP char .)
    ACCENT          reduce using rule 50 (scripted -> block SUB block SUP char .)
    STYLE           reduce using rule 50 (scripted -> block SUB block SUP char .)
    DOTS            reduce using rule 50 (scripted -> block SUB block SUP char .)
    LIM             reduce using rule 50 (scripted -> block SUB block SUP char .)
    UNKNOWN         reduce using rule 50 (scripted -> block SUB block SUP char .)
    ORD             reduce using rule 50 (scripted -> block SUB block SUP char .)
    $end            reduce using rule 50 (scripted -> block SUB block SUP char .)
    ENDBLOCK        reduce using rule 50 (scripted -> block SUB block SUP char .)


state 118

    (51) scripted -> block SUB block SUP block .

    BEGINBLOCK      reduce using rule 51 (scripted -> block SUB block SUP block .)
    CHAR            reduce using rule 51 (scripted -> block SUB block SUP block .)
    FRAC            reduce using rule 51 (scripted -> block SUB block SUP block .)
    ROOT            reduce using rule 51 (scripted -> block SUB block SUP block .)
    BINOP           reduce using rule 51 (scripted -> block SUB block SUP block .)
    KBINOP          reduce using rule 51 (scripted -> block SUB block SUP block .)
    BINREL          reduce using rule 51 (scripted -> block SUB block SUP block .)
    KBINREL         reduce using rule 51 (scripted -> block SUB block SUP block .)
    NOT             reduce using rule 51 (scripted -> block SUB block SUP block .)
    FUNC            reduce using rule 51 (scripted -> block SUB block SUP block .)
    LARGEOP         reduce using rule 51 (scripted -> block SUB block SUP block .)
    ARROW           reduce using rule 51 (scripted -> block SUB block SUP block .)
    DELIMITER       reduce using rule 51 (scripted -> block SUB block SUP block .)
    KDELIMITER      reduce using rule 51 (scripted -> block SUB block SUP block .)
    ACCENT          reduce using rule 51 (scripted -> block SUB block SUP block .)
    STYLE           reduce using rule 51 (scripted -> block SUB block SUP block .)
    DOTS            reduce using rule 51 (scripted -> block SUB block SUP block .)
    LIM             reduce using rule 51 (scripted -> block SUB block SUP block .)
    UNKNOWN         reduce using rule 51 (scripted -> block SUB block SUP block .)
    ORD             reduce using rule 51 (scripted -> block SUB block SUP block .)
    $end            reduce using rule 51 (scripted -> block SUB block SUP block .)
    ENDBLOCK        reduce using rule 51 (scripted -> block SUB block SUP block .)


state 119

    (40) scripted -> block SUP char SUB char .

    BEGINBLOCK      reduce using rule 40 (scripted -> block SUP char SUB char .)
    CHAR            reduce using rule 40 (scripted -> block SUP char SUB char .)
    FRAC            reduce using rule 40 (scripted -> block SUP char SUB char .)
    ROOT            reduce using rule 40 (scripted -> block SUP char SUB char .)
    BINOP           reduce using rule 40 (scripted -> block SUP char SUB char .)
    KBINOP          reduce using rule 40 (scripted -> block SUP char SUB char .)
    BINREL          reduce using rule 40 (scripted -> block SUP char SUB char .)
    KBINREL         reduce using rule 40 (scripted -> block SUP char SUB char .)
    NOT             reduce using rule 40 (scripted -> block SUP char SUB char .)
    FUNC            reduce using rule 40 (scripted -> block SUP char SUB char .)
    LARGEOP         reduce using rule 40 (scripted -> block SUP char SUB char .)
    ARROW           reduce using rule 40 (scripted -> block SUP char SUB char .)
    DELIMITER       reduce using rule 40 (scripted -> block SUP char SUB char .)
    KDELIMITER      reduce using rule 40 (scripted -> block SUP char SUB char .)
    ACCENT          reduce using rule 40 (scripted -> block SUP char SUB char .)
    STYLE           reduce using rule 40 (scripted -> block SUP char SUB char .)
    DOTS            reduce using rule 40 (scripted -> block SUP char SUB char .)
    LIM             reduce using rule 40 (scripted -> block SUP char SUB char .)
    UNKNOWN         reduce using rule 40 (scripted -> block SUP char SUB char .)
    ORD             reduce using rule 40 (scripted -> block SUP char SUB char .)
    $end            reduce using rule 40 (scripted -> block SUP char SUB char .)
    ENDBLOCK        reduce using rule 40 (scripted -> block SUP char SUB char .)


state 120

    (41) scripted -> block SUP char SUB block .

    BEGINBLOCK      reduce using rule 41 (scripted -> block SUP char SUB block .)
    CHAR            reduce using rule 41 (scripted -> block SUP char SUB block .)
    FRAC            reduce using rule 41 (scripted -> block SUP char SUB block .)
    ROOT            reduce using rule 41 (scripted -> block SUP char SUB block .)
    BINOP           reduce using rule 41 (scripted -> block SUP char SUB block .)
    KBINOP          reduce using rule 41 (scripted -> block SUP char SUB block .)
    BINREL          reduce using rule 41 (scripted -> block SUP char SUB block .)
    KBINREL         reduce using rule 41 (scripted -> block SUP char SUB block .)
    NOT             reduce using rule 41 (scripted -> block SUP char SUB block .)
    FUNC            reduce using rule 41 (scripted -> block SUP char SUB block .)
    LARGEOP         reduce using rule 41 (scripted -> block SUP char SUB block .)
    ARROW           reduce using rule 41 (scripted -> block SUP char SUB block .)
    DELIMITER       reduce using rule 41 (scripted -> block SUP char SUB block .)
    KDELIMITER      reduce using rule 41 (scripted -> block SUP char SUB block .)
    ACCENT          reduce using rule 41 (scripted -> block SUP char SUB block .)
    STYLE           reduce using rule 41 (scripted -> block SUP char SUB block .)
    DOTS            reduce using rule 41 (scripted -> block SUP char SUB block .)
    LIM             reduce using rule 41 (scripted -> block SUP char SUB block .)
    UNKNOWN         reduce using rule 41 (scripted -> block SUP char SUB block .)
    ORD             reduce using rule 41 (scripted -> block SUP char SUB block .)
    $end            reduce using rule 41 (scripted -> block SUP char SUB block .)
    ENDBLOCK        reduce using rule 41 (scripted -> block SUP char SUB block .)


state 121

    (42) scripted -> block SUP block SUB char .

    BEGINBLOCK      reduce using rule 42 (scripted -> block SUP block SUB char .)
    CHAR            reduce using rule 42 (scripted -> block SUP block SUB char .)
    FRAC            reduce using rule 42 (scripted -> block SUP block SUB char .)
    ROOT            reduce using rule 42 (scripted -> block SUP block SUB char .)
    BINOP           reduce using rule 42 (scripted -> block SUP block SUB char .)
    KBINOP          reduce using rule 42 (scripted -> block SUP block SUB char .)
    BINREL          reduce using rule 42 (scripted -> block SUP block SUB char .)
    KBINREL         reduce using rule 42 (scripted -> block SUP block SUB char .)
    NOT             reduce using rule 42 (scripted -> block SUP block SUB char .)
    FUNC            reduce using rule 42 (scripted -> block SUP block SUB char .)
    LARGEOP         reduce using rule 42 (scripted -> block SUP block SUB char .)
    ARROW           reduce using rule 42 (scripted -> block SUP block SUB char .)
    DELIMITER       reduce using rule 42 (scripted -> block SUP block SUB char .)
    KDELIMITER      reduce using rule 42 (scripted -> block SUP block SUB char .)
    ACCENT          reduce using rule 42 (scripted -> block SUP block SUB char .)
    STYLE           reduce using rule 42 (scripted -> block SUP block SUB char .)
    DOTS            reduce using rule 42 (scripted -> block SUP block SUB char .)
    LIM             reduce using rule 42 (scripted -> block SUP block SUB char .)
    UNKNOWN         reduce using rule 42 (scripted -> block SUP block SUB char .)
    ORD             reduce using rule 42 (scripted -> block SUP block SUB char .)
    $end            reduce using rule 42 (scripted -> block SUP block SUB char .)
    ENDBLOCK        reduce using rule 42 (scripted -> block SUP block SUB char .)


state 122

    (43) scripted -> block SUP block SUB block .

    BEGINBLOCK      reduce using rule 43 (scripted -> block SUP block SUB block .)
    CHAR            reduce using rule 43 (scripted -> block SUP block SUB block .)
    FRAC            reduce using rule 43 (scripted -> block SUP block SUB block .)
    ROOT            reduce using rule 43 (scripted -> block SUP block SUB block .)
    BINOP           reduce using rule 43 (scripted -> block SUP block SUB block .)
    KBINOP          reduce using rule 43 (scripted -> block SUP block SUB block .)
    BINREL          reduce using rule 43 (scripted -> block SUP block SUB block .)
    KBINREL         reduce using rule 43 (scripted -> block SUP block SUB block .)
    NOT             reduce using rule 43 (scripted -> block SUP block SUB block .)
    FUNC            reduce using rule 43 (scripted -> block SUP block SUB block .)
    LARGEOP         reduce using rule 43 (scripted -> block SUP block SUB block .)
    ARROW           reduce using rule 43 (scripted -> block SUP block SUB block .)
    DELIMITER       reduce using rule 43 (scripted -> block SUP block SUB block .)
    KDELIMITER      reduce using rule 43 (scripted -> block SUP block SUB block .)
    ACCENT          reduce using rule 43 (scripted -> block SUP block SUB block .)
    STYLE           reduce using rule 43 (scripted -> block SUP block SUB block .)
    DOTS            reduce using rule 43 (scripted -> block SUP block SUB block .)
    LIM             reduce using rule 43 (scripted -> block SUP block SUB block .)
    UNKNOWN         reduce using rule 43 (scripted -> block SUP block SUB block .)
    ORD             reduce using rule 43 (scripted -> block SUP block SUB block .)
    $end            reduce using rule 43 (scripted -> block SUP block SUB block .)
    ENDBLOCK        reduce using rule 43 (scripted -> block SUP block SUB block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CHAR in state 4 resolved as shift
WARNING: shift/reduce conflict for ORD in state 4 resolved as shift
WARNING: shift/reduce conflict for BEGINBLOCK in state 14 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 14 resolved as shift
WARNING: shift/reduce conflict for FRAC in state 14 resolved as shift
WARNING: shift/reduce conflict for ROOT in state 14 resolved as shift
WARNING: shift/reduce conflict for BINOP in state 14 resolved as shift
WARNING: shift/reduce conflict for KBINOP in state 14 resolved as shift
WARNING: shift/reduce conflict for BINREL in state 14 resolved as shift
WARNING: shift/reduce conflict for KBINREL in state 14 resolved as shift
WARNING: shift/reduce conflict for NOT in state 14 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 14 resolved as shift
WARNING: shift/reduce conflict for LARGEOP in state 14 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 14 resolved as shift
WARNING: shift/reduce conflict for DELIMITER in state 14 resolved as shift
WARNING: shift/reduce conflict for KDELIMITER in state 14 resolved as shift
WARNING: shift/reduce conflict for ACCENT in state 14 resolved as shift
WARNING: shift/reduce conflict for STYLE in state 14 resolved as shift
WARNING: shift/reduce conflict for DOTS in state 14 resolved as shift
WARNING: shift/reduce conflict for LIM in state 14 resolved as shift
WARNING: shift/reduce conflict for UNKNOWN in state 14 resolved as shift
WARNING: shift/reduce conflict for ORD in state 14 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 47 resolved as shift
WARNING: shift/reduce conflict for ORD in state 47 resolved as shift
WARNING: shift/reduce conflict for BEGINBLOCK in state 54 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 54 resolved as shift
WARNING: shift/reduce conflict for FRAC in state 54 resolved as shift
WARNING: shift/reduce conflict for ROOT in state 54 resolved as shift
WARNING: shift/reduce conflict for BINOP in state 54 resolved as shift
WARNING: shift/reduce conflict for KBINOP in state 54 resolved as shift
WARNING: shift/reduce conflict for BINREL in state 54 resolved as shift
WARNING: shift/reduce conflict for KBINREL in state 54 resolved as shift
WARNING: shift/reduce conflict for NOT in state 54 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 54 resolved as shift
WARNING: shift/reduce conflict for LARGEOP in state 54 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 54 resolved as shift
WARNING: shift/reduce conflict for DELIMITER in state 54 resolved as shift
WARNING: shift/reduce conflict for KDELIMITER in state 54 resolved as shift
WARNING: shift/reduce conflict for ACCENT in state 54 resolved as shift
WARNING: shift/reduce conflict for STYLE in state 54 resolved as shift
WARNING: shift/reduce conflict for DOTS in state 54 resolved as shift
WARNING: shift/reduce conflict for LIM in state 54 resolved as shift
WARNING: shift/reduce conflict for UNKNOWN in state 54 resolved as shift
WARNING: shift/reduce conflict for ORD in state 54 resolved as shift
WARNING: shift/reduce conflict for BEGINBLOCK in state 55 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 55 resolved as shift
WARNING: shift/reduce conflict for FRAC in state 55 resolved as shift
WARNING: shift/reduce conflict for ROOT in state 55 resolved as shift
WARNING: shift/reduce conflict for BINOP in state 55 resolved as shift
WARNING: shift/reduce conflict for KBINOP in state 55 resolved as shift
WARNING: shift/reduce conflict for BINREL in state 55 resolved as shift
WARNING: shift/reduce conflict for KBINREL in state 55 resolved as shift
WARNING: shift/reduce conflict for NOT in state 55 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 55 resolved as shift
WARNING: shift/reduce conflict for LARGEOP in state 55 resolved as shift
WARNING: shift/reduce conflict for ARROW in state 55 resolved as shift
WARNING: shift/reduce conflict for DELIMITER in state 55 resolved as shift
WARNING: shift/reduce conflict for KDELIMITER in state 55 resolved as shift
WARNING: shift/reduce conflict for ACCENT in state 55 resolved as shift
WARNING: shift/reduce conflict for STYLE in state 55 resolved as shift
WARNING: shift/reduce conflict for DOTS in state 55 resolved as shift
WARNING: shift/reduce conflict for LIM in state 55 resolved as shift
WARNING: shift/reduce conflict for UNKNOWN in state 55 resolved as shift
WARNING: shift/reduce conflict for ORD in state 55 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 92 resolved as shift
WARNING: shift/reduce conflict for BEGINBLOCK in state 92 resolved as shift
WARNING: shift/reduce conflict for ORD in state 92 resolved as shift
